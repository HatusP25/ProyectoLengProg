
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARREGLO ARROBA BEGIN BOOLEANO BREAK CASE CLASS COMA COMILLASDOBLE COMILLASIMPLE COMPARACION DARROBA DEF DIVIDE DO DOLAR ELSE ELSIF END ENSURE FALSE FICHERO FOR GUIONBAJO HASH ID IF IGUAL IN LBRACKET LLLAVE LPAREN MINUS MODULE NEXT NIL NOT NUMBER OR PLUS PUNTO PUTS RBRACKET REDO RESCUE RETRY RETURN RLLAVE RPAREN SELF STRING SUPER THEN TIMES TRUE UNDEF UNLES UNTIL VARIABLE WHEN WHILE YIELDsentencias : estructurasControl\n                | declaracion\n                | estructurasControl sentencias\n                | declaracion sentencias\n                | declaracion_funcion\n                | declaracion_funcion sentencias\n                estructurasControl : estrucIf\n                            | estrucWhile\n                            | sentenciafor\n                            operadorMat : IGUAL\n                | PLUS\n                | MINUS\n                | TIMES\n                operadorLog : AND\n                 | OR\n                estrucIf : IF logica cuerpo END\n                | IF logica cuerpo estrucElse\n                logica : condicion\n                | condicion operadorLog  logica\n                condicion : comparador COMPARACION comparador\n                    | boolean\n                    comparador : VARIABLE\n                    | primitivo\n                    estrucElse : ELSE cuerpo END\n                    | ELSE logica cuerpo END\n                     estrucWhile : WHILE logica cuerpo END\n                    cuerpo : declaracion\n                | declaracion cuerpo\n                | imprimir\n                | imprimir cuerpo\n                | estructurasControl\n                | estructurasControl cuerpo\n                | cuerpo RETURN retornos\n                retornos : VARIABLE\n                | primitivo\n                | expresion\n                | asignacion\n                declaracion : VARIABLE IGUAL asignacion\n                    | VARIABLE IGUAL asignacion declaracion\n                    | VARIABLE operadorMat IGUAL opcion\n                    | VARIABLE operadorMat IGUAL opcion declaracion\n                    opcion : VARIABLE\n                | NUMBER\n                declaracion_funcion : DEF VARIABLE LPAREN params RPAREN cuerpo ENDparams : rubyParams\n               | rubyParams COMA params\n                  sentenciafor : FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo ENDimprimir : PUTS STRING\n                    | PUTS VARIABLE\n    rubyParams : VARIABLE\n                    | boolean\n                    | NUMBERasignacion : NUMBER\n                    | boolean\n                    asignacion : HASHasignacion : ARREGLOasignacion : FICHEROasignacion : expresionasignacion : STRINGexpresion : NUMBER PLUS NUMBERexpresion : NUMBER MINUS NUMBERexpresion : terminotermino : termino TIMES factortermino : termino DIVIDE factortermino : factorfactor : NUMBERfactor : LPAREN expresion RPARENprimitivo : NUMBER PUNTO NUMBERprimitivo : NUMBERprimitivo : booleanboolean : TRUE\n             | FALSE\n        '
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,9,10,11,12,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,44,45,47,48,49,50,51,52,53,54,58,65,66,67,73,74,75,76,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,105,110,113,114,117,119,],[8,8,8,8,-7,-8,-9,21,26,26,32,8,-18,-21,-22,-23,-71,-72,-69,8,8,-53,-54,-55,-56,-57,-58,-59,-62,-65,65,68,8,8,8,81,26,-14,-15,26,-39,-42,8,-43,-16,-17,98,106,-48,-49,-19,-20,-70,-68,-26,-60,-61,-63,-66,-64,-67,-41,8,68,8,-24,-44,-25,8,-47,]),'DEF':([0,2,3,4,5,6,7,28,29,33,34,35,36,37,38,39,40,41,42,58,65,66,67,73,74,86,88,89,90,91,92,93,94,110,113,114,119,],[9,9,9,9,-7,-8,-9,-71,-72,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,-39,-42,-40,-43,-16,-17,-26,-60,-61,-63,-66,-64,-67,-41,-24,-44,-25,-47,]),'IF':([0,2,3,4,5,6,7,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,47,48,49,58,65,66,67,73,74,76,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,105,110,113,114,117,119,],[10,10,10,10,-7,-8,-9,10,-18,-21,-22,-23,-71,-72,-69,10,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,10,10,10,-39,-42,-40,-43,-16,-17,10,-48,-49,-19,-20,-70,-68,-26,-60,-61,-63,-66,-64,-67,-41,10,10,-24,-44,-25,10,-47,]),'WHILE':([0,2,3,4,5,6,7,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,47,48,49,58,65,66,67,73,74,76,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,105,110,113,114,117,119,],[11,11,11,11,-7,-8,-9,11,-18,-21,-22,-23,-71,-72,-69,11,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,11,11,11,-39,-42,-40,-43,-16,-17,11,-48,-49,-19,-20,-70,-68,-26,-60,-61,-63,-66,-64,-67,-41,11,11,-24,-44,-25,11,-47,]),'FOR':([0,2,3,4,5,6,7,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,47,48,49,58,65,66,67,73,74,76,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,105,110,113,114,117,119,],[12,12,12,12,-7,-8,-9,12,-18,-21,-22,-23,-71,-72,-69,12,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,12,12,12,-39,-42,-40,-43,-16,-17,12,-48,-49,-19,-20,-70,-68,-26,-60,-61,-63,-66,-64,-67,-41,12,12,-24,-44,-25,12,-47,]),'$end':([1,2,3,4,5,6,7,13,14,15,28,29,33,34,35,36,37,38,39,40,41,42,58,65,66,67,73,74,86,88,89,90,91,92,93,94,110,113,114,119,],[0,-1,-2,-5,-7,-8,-9,-3,-4,-6,-71,-72,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,-39,-42,-40,-43,-16,-17,-26,-60,-61,-63,-66,-64,-67,-41,-24,-44,-25,-47,]),'PUTS':([5,6,7,22,23,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,47,48,49,58,65,66,67,73,74,76,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,105,110,114,117,119,],[-7,-8,-9,50,-18,-21,-22,-23,-71,-72,-69,50,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,50,50,50,-39,-42,-40,-43,-16,-17,50,-48,-49,-19,-20,-70,-68,-26,-60,-61,-63,-66,-64,-67,-41,50,50,-24,-25,50,-47,]),'END':([5,6,7,28,29,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,58,65,66,67,73,74,77,78,79,80,81,85,86,88,89,90,91,92,93,94,97,98,99,100,101,102,103,104,108,110,111,114,118,119,],[-7,-8,-9,-71,-72,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,73,-27,-29,-31,86,-39,-42,-40,-43,-16,-17,-28,-30,-32,-48,-49,-68,-26,-60,-61,-63,-66,-64,-67,-41,-33,-34,-35,-36,-37,-53,-54,110,113,-24,114,-25,119,-47,]),'RETURN':([5,6,7,28,29,33,34,35,36,37,38,39,40,41,42,46,47,48,49,56,58,65,66,67,73,74,77,78,79,80,81,85,86,88,89,90,91,92,93,94,97,98,99,100,101,102,103,104,108,110,111,114,118,119,],[-7,-8,-9,-71,-72,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,75,-27,-29,-31,75,-39,-42,-40,-43,-16,-17,75,75,75,-48,-49,-68,-26,-60,-61,-63,-66,-64,-67,-41,-33,-34,-35,-36,-37,-53,-54,75,75,-24,75,-25,75,-47,]),'ELSE':([5,6,7,28,29,33,34,35,36,37,38,39,40,41,42,46,47,48,49,58,65,66,67,73,74,77,78,79,80,81,85,86,88,89,90,91,92,93,94,97,98,99,100,101,102,103,110,114,119,],[-7,-8,-9,-71,-72,-38,-53,-54,-55,-56,-57,-58,-59,-62,-65,76,-27,-29,-31,-39,-42,-40,-43,-16,-17,-28,-30,-32,-48,-49,-68,-26,-60,-61,-63,-66,-64,-67,-41,-33,-34,-35,-36,-37,-53,-54,-24,-25,-47,]),'IGUAL':([8,16,17,18,19,20,106,],[16,-10,44,-11,-12,-13,16,]),'PLUS':([8,34,64,102,106,],[18,59,59,59,18,]),'MINUS':([8,34,64,102,106,],[19,60,60,60,19,]),'TIMES':([8,34,41,42,64,90,91,92,93,102,106,],[20,-66,61,-65,-66,-63,-66,-64,-67,-66,20,]),'TRUE':([10,11,16,45,51,52,53,54,75,76,96,],[28,28,28,28,28,-14,-15,28,28,28,28,]),'FALSE':([10,11,16,45,51,52,53,54,75,76,96,],[29,29,29,29,29,-14,-15,29,29,29,29,]),'NUMBER':([10,11,16,43,44,45,51,52,53,54,55,59,60,61,62,75,76,87,96,115,],[30,30,34,64,67,72,30,-14,-15,30,85,88,89,91,91,102,30,107,72,116,]),'HASH':([16,75,],[36,36,]),'ARREGLO':([16,75,],[37,37,]),'FICHERO':([16,75,],[38,38,]),'STRING':([16,50,75,],[40,80,40,]),'LPAREN':([16,21,43,57,61,62,75,],[43,45,43,87,43,43,43,]),'AND':([23,25,26,27,28,29,30,83,84,85,],[52,-21,-22,-23,-71,-72,-69,-20,-70,-68,]),'OR':([23,25,26,27,28,29,30,83,84,85,],[53,-21,-22,-23,-71,-72,-69,-20,-70,-68,]),'COMPARACION':([24,25,26,27,28,29,30,85,106,],[54,-70,-22,-23,-71,-72,-69,-68,-22,]),'COMA':([28,29,68,70,71,72,],[-71,-72,-50,96,-51,-52,]),'RPAREN':([28,29,41,42,63,64,68,69,70,71,72,88,89,90,91,92,93,109,116,],[-71,-72,-62,-65,93,-66,-50,95,-45,-51,-52,-60,-61,-63,-66,-64,-67,-46,117,]),'PUNTO':([30,102,107,112,],[55,55,112,115,]),'IN':([32,],[57,]),'DIVIDE':([34,41,42,64,90,91,92,93,102,],[-66,62,-65,-66,-63,-66,-64,-67,-66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,2,3,4,],[1,13,14,15,]),'estructurasControl':([0,2,3,4,22,31,47,48,49,76,95,105,117,],[2,2,2,2,49,49,49,49,49,49,49,49,49,]),'declaracion':([0,2,3,4,22,31,33,47,48,49,66,76,95,105,117,],[3,3,3,3,47,47,58,47,47,47,94,47,47,47,47,]),'declaracion_funcion':([0,2,3,4,],[4,4,4,4,]),'estrucIf':([0,2,3,4,22,31,47,48,49,76,95,105,117,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'estrucWhile':([0,2,3,4,22,31,47,48,49,76,95,105,117,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'sentenciafor':([0,2,3,4,22,31,47,48,49,76,95,105,117,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'operadorMat':([8,106,],[17,17,]),'logica':([10,11,51,76,],[22,31,82,105,]),'condicion':([10,11,51,76,],[23,23,23,23,]),'comparador':([10,11,51,54,76,],[24,24,24,83,24,]),'boolean':([10,11,16,45,51,54,75,76,96,],[25,25,35,71,25,84,103,25,71,]),'primitivo':([10,11,51,54,75,76,],[27,27,27,27,99,27,]),'asignacion':([16,75,],[33,101,]),'expresion':([16,43,75,],[39,63,100,]),'termino':([16,43,75,],[41,41,41,]),'factor':([16,43,61,62,75,],[42,42,90,92,42,]),'cuerpo':([22,31,47,48,49,76,95,105,117,],[46,56,77,78,79,104,108,111,118,]),'imprimir':([22,31,47,48,49,76,95,105,117,],[48,48,48,48,48,48,48,48,48,]),'operadorLog':([23,],[51,]),'opcion':([44,],[66,]),'params':([45,96,],[69,109,]),'rubyParams':([45,96,],[70,70,]),'estrucElse':([46,],[74,]),'retornos':([75,],[97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> estructurasControl','sentencias',1,'p_sentecias','sintactico.py',9),
  ('sentencias -> declaracion','sentencias',1,'p_sentecias','sintactico.py',10),
  ('sentencias -> estructurasControl sentencias','sentencias',2,'p_sentecias','sintactico.py',11),
  ('sentencias -> declaracion sentencias','sentencias',2,'p_sentecias','sintactico.py',12),
  ('sentencias -> declaracion_funcion','sentencias',1,'p_sentecias','sintactico.py',13),
  ('sentencias -> declaracion_funcion sentencias','sentencias',2,'p_sentecias','sintactico.py',14),
  ('estructurasControl -> estrucIf','estructurasControl',1,'p_estructurasControl','sintactico.py',20),
  ('estructurasControl -> estrucWhile','estructurasControl',1,'p_estructurasControl','sintactico.py',21),
  ('estructurasControl -> sentenciafor','estructurasControl',1,'p_estructurasControl','sintactico.py',22),
  ('operadorMat -> IGUAL','operadorMat',1,'p_operadorMat','sintactico.py',28),
  ('operadorMat -> PLUS','operadorMat',1,'p_operadorMat','sintactico.py',29),
  ('operadorMat -> MINUS','operadorMat',1,'p_operadorMat','sintactico.py',30),
  ('operadorMat -> TIMES','operadorMat',1,'p_operadorMat','sintactico.py',31),
  ('operadorLog -> AND','operadorLog',1,'p_operadorLog','sintactico.py',37),
  ('operadorLog -> OR','operadorLog',1,'p_operadorLog','sintactico.py',38),
  ('estrucIf -> IF logica cuerpo END','estrucIf',4,'p_estrucIf','sintactico.py',44),
  ('estrucIf -> IF logica cuerpo estrucElse','estrucIf',4,'p_estrucIf','sintactico.py',45),
  ('logica -> condicion','logica',1,'p_logica','sintactico.py',51),
  ('logica -> condicion operadorLog logica','logica',3,'p_logica','sintactico.py',52),
  ('condicion -> comparador COMPARACION comparador','condicion',3,'p_condicion','sintactico.py',58),
  ('condicion -> boolean','condicion',1,'p_condicion','sintactico.py',59),
  ('comparador -> VARIABLE','comparador',1,'p_comparador','sintactico.py',65),
  ('comparador -> primitivo','comparador',1,'p_comparador','sintactico.py',66),
  ('estrucElse -> ELSE cuerpo END','estrucElse',3,'p_estrucElse','sintactico.py',72),
  ('estrucElse -> ELSE logica cuerpo END','estrucElse',4,'p_estrucElse','sintactico.py',73),
  ('estrucWhile -> WHILE logica cuerpo END','estrucWhile',4,'p_estrucWhile','sintactico.py',79),
  ('cuerpo -> declaracion','cuerpo',1,'p_cuerpo','sintactico.py',85),
  ('cuerpo -> declaracion cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',86),
  ('cuerpo -> imprimir','cuerpo',1,'p_cuerpo','sintactico.py',87),
  ('cuerpo -> imprimir cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',88),
  ('cuerpo -> estructurasControl','cuerpo',1,'p_cuerpo','sintactico.py',89),
  ('cuerpo -> estructurasControl cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',90),
  ('cuerpo -> cuerpo RETURN retornos','cuerpo',3,'p_cuerpo','sintactico.py',91),
  ('retornos -> VARIABLE','retornos',1,'p_retornos','sintactico.py',97),
  ('retornos -> primitivo','retornos',1,'p_retornos','sintactico.py',98),
  ('retornos -> expresion','retornos',1,'p_retornos','sintactico.py',99),
  ('retornos -> asignacion','retornos',1,'p_retornos','sintactico.py',100),
  ('declaracion -> VARIABLE IGUAL asignacion','declaracion',3,'p_declaracion','sintactico.py',106),
  ('declaracion -> VARIABLE IGUAL asignacion declaracion','declaracion',4,'p_declaracion','sintactico.py',107),
  ('declaracion -> VARIABLE operadorMat IGUAL opcion','declaracion',4,'p_declaracion','sintactico.py',108),
  ('declaracion -> VARIABLE operadorMat IGUAL opcion declaracion','declaracion',5,'p_declaracion','sintactico.py',109),
  ('opcion -> VARIABLE','opcion',1,'p_opcion','sintactico.py',120),
  ('opcion -> NUMBER','opcion',1,'p_opcion','sintactico.py',121),
  ('declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END','declaracion_funcion',7,'p_declaracion_funcion','sintactico.py',127),
  ('params -> rubyParams','params',1,'p_params','sintactico.py',132),
  ('params -> rubyParams COMA params','params',3,'p_params','sintactico.py',133),
  ('sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END','sentenciafor',11,'p_sentenciafor','sintactico.py',140),
  ('imprimir -> PUTS STRING','imprimir',2,'p_imprimir','sintactico.py',144),
  ('imprimir -> PUTS VARIABLE','imprimir',2,'p_imprimir','sintactico.py',145),
  ('rubyParams -> VARIABLE','rubyParams',1,'p_rubyParams','sintactico.py',151),
  ('rubyParams -> boolean','rubyParams',1,'p_rubyParams','sintactico.py',152),
  ('rubyParams -> NUMBER','rubyParams',1,'p_rubyParams','sintactico.py',153),
  ('asignacion -> NUMBER','asignacion',1,'p_asignacion_primitivo','sintactico.py',158),
  ('asignacion -> boolean','asignacion',1,'p_asignacion_primitivo','sintactico.py',159),
  ('asignacion -> HASH','asignacion',1,'p_asignacion_hash','sintactico.py',166),
  ('asignacion -> ARREGLO','asignacion',1,'p_asignacion_arreglo','sintactico.py',172),
  ('asignacion -> FICHERO','asignacion',1,'p_asignacion_fichero','sintactico.py',178),
  ('asignacion -> expresion','asignacion',1,'p_asignacion_expresion','sintactico.py',184),
  ('asignacion -> STRING','asignacion',1,'p_asignacion_string','sintactico.py',190),
  ('expresion -> NUMBER PLUS NUMBER','expresion',3,'p_expresion_suma','sintactico.py',196),
  ('expresion -> NUMBER MINUS NUMBER','expresion',3,'p_expresion_resta','sintactico.py',202),
  ('expresion -> termino','expresion',1,'p_expresion_term','sintactico.py',208),
  ('termino -> termino TIMES factor','termino',3,'p_termino_multi','sintactico.py',214),
  ('termino -> termino DIVIDE factor','termino',3,'p_termino_div','sintactico.py',220),
  ('termino -> factor','termino',1,'p_termino_factor','sintactico.py',226),
  ('factor -> NUMBER','factor',1,'p_factor_number','sintactico.py',231),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor_expresion','sintactico.py',237),
  ('primitivo -> NUMBER PUNTO NUMBER','primitivo',3,'p_primitivo_flotante','sintactico.py',242),
  ('primitivo -> NUMBER','primitivo',1,'p_primitivo_number','sintactico.py',248),
  ('primitivo -> boolean','primitivo',1,'p_primitivo_booleano','sintactico.py',254),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',260),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',261),
]
