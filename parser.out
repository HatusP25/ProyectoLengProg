Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    ARROBA
    BEGIN
    BOOLEANO
    BREAK
    CASE
    CLASS
    COMILLASDOBLE
    COMILLASIMPLE
    DARROBA
    DO
    DOLAR
    ELSIF
    ENSURE
    FOR
    GUIONBAJO
    ID
    LBRACKET
    LLLAVE
    MODULE
    NEXT
    NIL
    NOT
    RBRACKET
    REDO
    RESCUE
    RETRY
    RETURN
    RLLAVE
    SELF
    SUPER
    THEN
    UNDEF
    UNLES
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> estructurasControl
Rule 2     sentencias -> declaracion
Rule 3     estructurasControl -> estrucIf
Rule 4     estructurasControl -> estrucElse
Rule 5     estructurasControl -> estrucWhile
Rule 6     operadorMat -> IGUAL
Rule 7     operadorMat -> PLUS
Rule 8     operadorMat -> MINUS
Rule 9     operadorMat -> TIMES
Rule 10    operadorLog -> AND
Rule 11    operadorLog -> OR
Rule 12    estrucIf -> IF logica cuerpo END
Rule 13    estrucIf -> IF logica cuerpo estrucElse
Rule 14    logica -> condicion
Rule 15    logica -> condicion operadorLog logica
Rule 16    condicion -> comparador COMPARACION comparador
Rule 17    condicion -> boolean
Rule 18    comparador -> VARIABLE
Rule 19    comparador -> primitivo
Rule 20    estrucElse -> ELSE cuerpo END
Rule 21    estrucElse -> ELSE logica cuerpo END
Rule 22    estrucWhile -> WHILE declaracion cuerpo END
Rule 23    estrucWhile -> WHILE declaracion operadorLog declaracion cuerpo END
Rule 24    cuerpo -> declaracion
Rule 25    declaracion -> VARIABLE IGUAL asignacion
Rule 26    declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END
Rule 27    params -> rubyParams
Rule 28    params -> rubyParams COMA params
Rule 29    rubyParams -> VARIABLE
Rule 30    rubyParams -> boolean
Rule 31    rubyParams -> NUMBER
Rule 32    asignacion -> primitivo
Rule 33    asignacion -> HASH
Rule 34    asignacion -> ARREGLO
Rule 35    asignacion -> FICHERO
Rule 36    asignacion -> expresion
Rule 37    asignacion -> STRING
Rule 38    expresion -> NUMBER PLUS NUMBER
Rule 39    expresion -> NUMBER MINUS NUMBER
Rule 40    expresion -> termino
Rule 41    termino -> termino TIMES factor
Rule 42    termino -> termino DIVIDE factor
Rule 43    termino -> factor
Rule 44    factor -> NUMBER
Rule 45    factor -> LPAREN expresion RPAREN
Rule 46    primitivo -> NUMBER PUNTO NUMBER
Rule 47    primitivo -> NUMBER
Rule 48    primitivo -> boolean
Rule 49    boolean -> TRUE
Rule 50    boolean -> FALSE

Terminals, with rules where they appear

ALIAS                : 
AND                  : 10
ARREGLO              : 34
ARROBA               : 
BEGIN                : 
BOOLEANO             : 
BREAK                : 
CASE                 : 
CLASS                : 
COMA                 : 28
COMILLASDOBLE        : 
COMILLASIMPLE        : 
COMPARACION          : 16
DARROBA              : 
DEF                  : 26
DIVIDE               : 42
DO                   : 
DOLAR                : 
ELSE                 : 20 21
ELSIF                : 
END                  : 12 20 21 22 23 26
ENSURE               : 
FALSE                : 50
FICHERO              : 35
FOR                  : 
GUIONBAJO            : 
HASH                 : 33
ID                   : 
IF                   : 12 13
IGUAL                : 6 25
LBRACKET             : 
LLLAVE               : 
LPAREN               : 26 45
MINUS                : 8 39
MODULE               : 
NEXT                 : 
NIL                  : 
NOT                  : 
NUMBER               : 31 38 38 39 39 44 46 46 47
OR                   : 11
PLUS                 : 7 38
PUNTO                : 46
RBRACKET             : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
RLLAVE               : 
RPAREN               : 26 45
SELF                 : 
STRING               : 37
SUPER                : 
THEN                 : 
TIMES                : 9 41
TRUE                 : 49
UNDEF                : 
UNLES                : 
UNTIL                : 
VARIABLE             : 18 25 26 29
WHEN                 : 
WHILE                : 22 23
YIELD                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 25
boolean              : 17 30 48
comparador           : 16 16
condicion            : 14 15
cuerpo               : 12 13 20 21 22 23 26
declaracion          : 2 22 23 23 24
estrucElse           : 4 13
estrucIf             : 3
estrucWhile          : 5
estructurasControl   : 1
expresion            : 36 45
factor               : 41 42 43
logica               : 12 13 15 21
operadorLog          : 15 23
operadorMat          : 
params               : 26 28
primitivo            : 19 32
rubyParams           : 27 28
sentencias           : 0
termino              : 40 41 42

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) estructurasControl -> . estrucIf
    (4) estructurasControl -> . estrucElse
    (5) estructurasControl -> . estrucWhile
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (12) estrucIf -> . IF logica cuerpo END
    (13) estrucIf -> . IF logica cuerpo estrucElse
    (20) estrucElse -> . ELSE cuerpo END
    (21) estrucElse -> . ELSE logica cuerpo END
    (22) estrucWhile -> . WHILE declaracion cuerpo END
    (23) estrucWhile -> . WHILE declaracion operadorLog declaracion cuerpo END

    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8
    IF              shift and go to state 9
    ELSE            shift and go to state 10
    WHILE           shift and go to state 11

    sentencias                     shift and go to state 1
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    estrucIf                       shift and go to state 4
    estrucElse                     shift and go to state 5
    estrucWhile                    shift and go to state 6

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> estructurasControl .

    $end            reduce using rule 1 (sentencias -> estructurasControl .)


state 3

    (2) sentencias -> declaracion .

    $end            reduce using rule 2 (sentencias -> declaracion .)


state 4

    (3) estructurasControl -> estrucIf .

    $end            reduce using rule 3 (estructurasControl -> estrucIf .)


state 5

    (4) estructurasControl -> estrucElse .

    $end            reduce using rule 4 (estructurasControl -> estrucElse .)


state 6

    (5) estructurasControl -> estrucWhile .

    $end            reduce using rule 5 (estructurasControl -> estrucWhile .)


state 7

    (25) declaracion -> VARIABLE . IGUAL asignacion

    IGUAL           shift and go to state 12


state 8

    (26) declaracion -> DEF . VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 13


state 9

    (12) estrucIf -> IF . logica cuerpo END
    (13) estrucIf -> IF . logica cuerpo estrucElse
    (14) logica -> . condicion
    (15) logica -> . condicion operadorLog logica
    (16) condicion -> . comparador COMPARACION comparador
    (17) condicion -> . boolean
    (18) comparador -> . VARIABLE
    (19) comparador -> . primitivo
    (49) boolean -> . TRUE
    (50) boolean -> . FALSE
    (46) primitivo -> . NUMBER PUNTO NUMBER
    (47) primitivo -> . NUMBER
    (48) primitivo -> . boolean

    VARIABLE        shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    NUMBER          shift and go to state 22

    logica                         shift and go to state 14
    condicion                      shift and go to state 15
    comparador                     shift and go to state 16
    boolean                        shift and go to state 17
    primitivo                      shift and go to state 19

state 10

    (20) estrucElse -> ELSE . cuerpo END
    (21) estrucElse -> ELSE . logica cuerpo END
    (24) cuerpo -> . declaracion
    (14) logica -> . condicion
    (15) logica -> . condicion operadorLog logica
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (16) condicion -> . comparador COMPARACION comparador
    (17) condicion -> . boolean
    (18) comparador -> . VARIABLE
    (19) comparador -> . primitivo
    (49) boolean -> . TRUE
    (50) boolean -> . FALSE
    (46) primitivo -> . NUMBER PUNTO NUMBER
    (47) primitivo -> . NUMBER
    (48) primitivo -> . boolean

    VARIABLE        shift and go to state 26
    DEF             shift and go to state 8
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    NUMBER          shift and go to state 22

    cuerpo                         shift and go to state 23
    logica                         shift and go to state 24
    declaracion                    shift and go to state 25
    condicion                      shift and go to state 15
    comparador                     shift and go to state 16
    boolean                        shift and go to state 17
    primitivo                      shift and go to state 19

state 11

    (22) estrucWhile -> WHILE . declaracion cuerpo END
    (23) estrucWhile -> WHILE . declaracion operadorLog declaracion cuerpo END
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8

    declaracion                    shift and go to state 27

state 12

    (25) declaracion -> VARIABLE IGUAL . asignacion
    (32) asignacion -> . primitivo
    (33) asignacion -> . HASH
    (34) asignacion -> . ARREGLO
    (35) asignacion -> . FICHERO
    (36) asignacion -> . expresion
    (37) asignacion -> . STRING
    (46) primitivo -> . NUMBER PUNTO NUMBER
    (47) primitivo -> . NUMBER
    (48) primitivo -> . boolean
    (38) expresion -> . NUMBER PLUS NUMBER
    (39) expresion -> . NUMBER MINUS NUMBER
    (40) expresion -> . termino
    (49) boolean -> . TRUE
    (50) boolean -> . FALSE
    (41) termino -> . termino TIMES factor
    (42) termino -> . termino DIVIDE factor
    (43) termino -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . LPAREN expresion RPAREN

    HASH            shift and go to state 30
    ARREGLO         shift and go to state 31
    FICHERO         shift and go to state 32
    STRING          shift and go to state 34
    NUMBER          shift and go to state 35
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LPAREN          shift and go to state 39

    asignacion                     shift and go to state 28
    primitivo                      shift and go to state 29
    expresion                      shift and go to state 33
    boolean                        shift and go to state 36
    termino                        shift and go to state 37
    factor                         shift and go to state 38

state 13

    (26) declaracion -> DEF VARIABLE . LPAREN params RPAREN cuerpo END

    LPAREN          shift and go to state 40


state 14

    (12) estrucIf -> IF logica . cuerpo END
    (13) estrucIf -> IF logica . cuerpo estrucElse
    (24) cuerpo -> . declaracion
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8

    cuerpo                         shift and go to state 41
    declaracion                    shift and go to state 25

state 15

    (14) logica -> condicion .
    (15) logica -> condicion . operadorLog logica
    (10) operadorLog -> . AND
    (11) operadorLog -> . OR

    VARIABLE        reduce using rule 14 (logica -> condicion .)
    DEF             reduce using rule 14 (logica -> condicion .)
    AND             shift and go to state 43
    OR              shift and go to state 44

    operadorLog                    shift and go to state 42

state 16

    (16) condicion -> comparador . COMPARACION comparador

    COMPARACION     shift and go to state 45


state 17

    (17) condicion -> boolean .
    (48) primitivo -> boolean .

    AND             reduce using rule 17 (condicion -> boolean .)
    OR              reduce using rule 17 (condicion -> boolean .)
    VARIABLE        reduce using rule 17 (condicion -> boolean .)
    DEF             reduce using rule 17 (condicion -> boolean .)
    COMPARACION     reduce using rule 48 (primitivo -> boolean .)


state 18

    (18) comparador -> VARIABLE .

    COMPARACION     reduce using rule 18 (comparador -> VARIABLE .)
    AND             reduce using rule 18 (comparador -> VARIABLE .)
    OR              reduce using rule 18 (comparador -> VARIABLE .)
    VARIABLE        reduce using rule 18 (comparador -> VARIABLE .)
    DEF             reduce using rule 18 (comparador -> VARIABLE .)


state 19

    (19) comparador -> primitivo .

    COMPARACION     reduce using rule 19 (comparador -> primitivo .)
    AND             reduce using rule 19 (comparador -> primitivo .)
    OR              reduce using rule 19 (comparador -> primitivo .)
    VARIABLE        reduce using rule 19 (comparador -> primitivo .)
    DEF             reduce using rule 19 (comparador -> primitivo .)


state 20

    (49) boolean -> TRUE .

    AND             reduce using rule 49 (boolean -> TRUE .)
    OR              reduce using rule 49 (boolean -> TRUE .)
    VARIABLE        reduce using rule 49 (boolean -> TRUE .)
    DEF             reduce using rule 49 (boolean -> TRUE .)
    COMPARACION     reduce using rule 49 (boolean -> TRUE .)
    $end            reduce using rule 49 (boolean -> TRUE .)
    END             reduce using rule 49 (boolean -> TRUE .)
    ELSE            reduce using rule 49 (boolean -> TRUE .)
    COMA            reduce using rule 49 (boolean -> TRUE .)
    RPAREN          reduce using rule 49 (boolean -> TRUE .)


state 21

    (50) boolean -> FALSE .

    AND             reduce using rule 50 (boolean -> FALSE .)
    OR              reduce using rule 50 (boolean -> FALSE .)
    VARIABLE        reduce using rule 50 (boolean -> FALSE .)
    DEF             reduce using rule 50 (boolean -> FALSE .)
    COMPARACION     reduce using rule 50 (boolean -> FALSE .)
    $end            reduce using rule 50 (boolean -> FALSE .)
    END             reduce using rule 50 (boolean -> FALSE .)
    ELSE            reduce using rule 50 (boolean -> FALSE .)
    COMA            reduce using rule 50 (boolean -> FALSE .)
    RPAREN          reduce using rule 50 (boolean -> FALSE .)


state 22

    (46) primitivo -> NUMBER . PUNTO NUMBER
    (47) primitivo -> NUMBER .

    PUNTO           shift and go to state 46
    COMPARACION     reduce using rule 47 (primitivo -> NUMBER .)
    AND             reduce using rule 47 (primitivo -> NUMBER .)
    OR              reduce using rule 47 (primitivo -> NUMBER .)
    VARIABLE        reduce using rule 47 (primitivo -> NUMBER .)
    DEF             reduce using rule 47 (primitivo -> NUMBER .)


state 23

    (20) estrucElse -> ELSE cuerpo . END

    END             shift and go to state 47


state 24

    (21) estrucElse -> ELSE logica . cuerpo END
    (24) cuerpo -> . declaracion
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8

    cuerpo                         shift and go to state 48
    declaracion                    shift and go to state 25

state 25

    (24) cuerpo -> declaracion .

    END             reduce using rule 24 (cuerpo -> declaracion .)
    ELSE            reduce using rule 24 (cuerpo -> declaracion .)


state 26

    (25) declaracion -> VARIABLE . IGUAL asignacion
    (18) comparador -> VARIABLE .

    IGUAL           shift and go to state 12
    COMPARACION     reduce using rule 18 (comparador -> VARIABLE .)


state 27

    (22) estrucWhile -> WHILE declaracion . cuerpo END
    (23) estrucWhile -> WHILE declaracion . operadorLog declaracion cuerpo END
    (24) cuerpo -> . declaracion
    (10) operadorLog -> . AND
    (11) operadorLog -> . OR
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END

    AND             shift and go to state 43
    OR              shift and go to state 44
    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8

    declaracion                    shift and go to state 25
    cuerpo                         shift and go to state 49
    operadorLog                    shift and go to state 50

state 28

    (25) declaracion -> VARIABLE IGUAL asignacion .

    $end            reduce using rule 25 (declaracion -> VARIABLE IGUAL asignacion .)
    END             reduce using rule 25 (declaracion -> VARIABLE IGUAL asignacion .)
    AND             reduce using rule 25 (declaracion -> VARIABLE IGUAL asignacion .)
    OR              reduce using rule 25 (declaracion -> VARIABLE IGUAL asignacion .)
    VARIABLE        reduce using rule 25 (declaracion -> VARIABLE IGUAL asignacion .)
    DEF             reduce using rule 25 (declaracion -> VARIABLE IGUAL asignacion .)
    ELSE            reduce using rule 25 (declaracion -> VARIABLE IGUAL asignacion .)


state 29

    (32) asignacion -> primitivo .

    $end            reduce using rule 32 (asignacion -> primitivo .)
    END             reduce using rule 32 (asignacion -> primitivo .)
    AND             reduce using rule 32 (asignacion -> primitivo .)
    OR              reduce using rule 32 (asignacion -> primitivo .)
    VARIABLE        reduce using rule 32 (asignacion -> primitivo .)
    DEF             reduce using rule 32 (asignacion -> primitivo .)
    ELSE            reduce using rule 32 (asignacion -> primitivo .)


state 30

    (33) asignacion -> HASH .

    $end            reduce using rule 33 (asignacion -> HASH .)
    END             reduce using rule 33 (asignacion -> HASH .)
    AND             reduce using rule 33 (asignacion -> HASH .)
    OR              reduce using rule 33 (asignacion -> HASH .)
    VARIABLE        reduce using rule 33 (asignacion -> HASH .)
    DEF             reduce using rule 33 (asignacion -> HASH .)
    ELSE            reduce using rule 33 (asignacion -> HASH .)


state 31

    (34) asignacion -> ARREGLO .

    $end            reduce using rule 34 (asignacion -> ARREGLO .)
    END             reduce using rule 34 (asignacion -> ARREGLO .)
    AND             reduce using rule 34 (asignacion -> ARREGLO .)
    OR              reduce using rule 34 (asignacion -> ARREGLO .)
    VARIABLE        reduce using rule 34 (asignacion -> ARREGLO .)
    DEF             reduce using rule 34 (asignacion -> ARREGLO .)
    ELSE            reduce using rule 34 (asignacion -> ARREGLO .)


state 32

    (35) asignacion -> FICHERO .

    $end            reduce using rule 35 (asignacion -> FICHERO .)
    END             reduce using rule 35 (asignacion -> FICHERO .)
    AND             reduce using rule 35 (asignacion -> FICHERO .)
    OR              reduce using rule 35 (asignacion -> FICHERO .)
    VARIABLE        reduce using rule 35 (asignacion -> FICHERO .)
    DEF             reduce using rule 35 (asignacion -> FICHERO .)
    ELSE            reduce using rule 35 (asignacion -> FICHERO .)


state 33

    (36) asignacion -> expresion .

    $end            reduce using rule 36 (asignacion -> expresion .)
    END             reduce using rule 36 (asignacion -> expresion .)
    AND             reduce using rule 36 (asignacion -> expresion .)
    OR              reduce using rule 36 (asignacion -> expresion .)
    VARIABLE        reduce using rule 36 (asignacion -> expresion .)
    DEF             reduce using rule 36 (asignacion -> expresion .)
    ELSE            reduce using rule 36 (asignacion -> expresion .)


state 34

    (37) asignacion -> STRING .

    $end            reduce using rule 37 (asignacion -> STRING .)
    END             reduce using rule 37 (asignacion -> STRING .)
    AND             reduce using rule 37 (asignacion -> STRING .)
    OR              reduce using rule 37 (asignacion -> STRING .)
    VARIABLE        reduce using rule 37 (asignacion -> STRING .)
    DEF             reduce using rule 37 (asignacion -> STRING .)
    ELSE            reduce using rule 37 (asignacion -> STRING .)


state 35

    (46) primitivo -> NUMBER . PUNTO NUMBER
    (47) primitivo -> NUMBER .
    (38) expresion -> NUMBER . PLUS NUMBER
    (39) expresion -> NUMBER . MINUS NUMBER
    (44) factor -> NUMBER .

  ! reduce/reduce conflict for $end resolved using rule 44 (factor -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 44 (factor -> NUMBER .)
  ! reduce/reduce conflict for AND resolved using rule 44 (factor -> NUMBER .)
  ! reduce/reduce conflict for OR resolved using rule 44 (factor -> NUMBER .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 44 (factor -> NUMBER .)
  ! reduce/reduce conflict for DEF resolved using rule 44 (factor -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (factor -> NUMBER .)
    PUNTO           shift and go to state 46
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    $end            reduce using rule 44 (factor -> NUMBER .)
    END             reduce using rule 44 (factor -> NUMBER .)
    AND             reduce using rule 44 (factor -> NUMBER .)
    OR              reduce using rule 44 (factor -> NUMBER .)
    VARIABLE        reduce using rule 44 (factor -> NUMBER .)
    DEF             reduce using rule 44 (factor -> NUMBER .)
    ELSE            reduce using rule 44 (factor -> NUMBER .)

  ! $end            [ reduce using rule 47 (primitivo -> NUMBER .) ]
  ! END             [ reduce using rule 47 (primitivo -> NUMBER .) ]
  ! AND             [ reduce using rule 47 (primitivo -> NUMBER .) ]
  ! OR              [ reduce using rule 47 (primitivo -> NUMBER .) ]
  ! VARIABLE        [ reduce using rule 47 (primitivo -> NUMBER .) ]
  ! DEF             [ reduce using rule 47 (primitivo -> NUMBER .) ]
  ! ELSE            [ reduce using rule 47 (primitivo -> NUMBER .) ]


state 36

    (48) primitivo -> boolean .

    $end            reduce using rule 48 (primitivo -> boolean .)
    END             reduce using rule 48 (primitivo -> boolean .)
    AND             reduce using rule 48 (primitivo -> boolean .)
    OR              reduce using rule 48 (primitivo -> boolean .)
    VARIABLE        reduce using rule 48 (primitivo -> boolean .)
    DEF             reduce using rule 48 (primitivo -> boolean .)
    ELSE            reduce using rule 48 (primitivo -> boolean .)


state 37

    (40) expresion -> termino .
    (41) termino -> termino . TIMES factor
    (42) termino -> termino . DIVIDE factor

    $end            reduce using rule 40 (expresion -> termino .)
    END             reduce using rule 40 (expresion -> termino .)
    AND             reduce using rule 40 (expresion -> termino .)
    OR              reduce using rule 40 (expresion -> termino .)
    VARIABLE        reduce using rule 40 (expresion -> termino .)
    DEF             reduce using rule 40 (expresion -> termino .)
    ELSE            reduce using rule 40 (expresion -> termino .)
    RPAREN          reduce using rule 40 (expresion -> termino .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 38

    (43) termino -> factor .

    TIMES           reduce using rule 43 (termino -> factor .)
    DIVIDE          reduce using rule 43 (termino -> factor .)
    $end            reduce using rule 43 (termino -> factor .)
    END             reduce using rule 43 (termino -> factor .)
    AND             reduce using rule 43 (termino -> factor .)
    OR              reduce using rule 43 (termino -> factor .)
    VARIABLE        reduce using rule 43 (termino -> factor .)
    DEF             reduce using rule 43 (termino -> factor .)
    ELSE            reduce using rule 43 (termino -> factor .)
    RPAREN          reduce using rule 43 (termino -> factor .)


state 39

    (45) factor -> LPAREN . expresion RPAREN
    (38) expresion -> . NUMBER PLUS NUMBER
    (39) expresion -> . NUMBER MINUS NUMBER
    (40) expresion -> . termino
    (41) termino -> . termino TIMES factor
    (42) termino -> . termino DIVIDE factor
    (43) termino -> . factor
    (44) factor -> . NUMBER
    (45) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 56
    LPAREN          shift and go to state 39

    expresion                      shift and go to state 55
    termino                        shift and go to state 37
    factor                         shift and go to state 38

state 40

    (26) declaracion -> DEF VARIABLE LPAREN . params RPAREN cuerpo END
    (27) params -> . rubyParams
    (28) params -> . rubyParams COMA params
    (29) rubyParams -> . VARIABLE
    (30) rubyParams -> . boolean
    (31) rubyParams -> . NUMBER
    (49) boolean -> . TRUE
    (50) boolean -> . FALSE

    VARIABLE        shift and go to state 57
    NUMBER          shift and go to state 61
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21

    params                         shift and go to state 58
    rubyParams                     shift and go to state 59
    boolean                        shift and go to state 60

state 41

    (12) estrucIf -> IF logica cuerpo . END
    (13) estrucIf -> IF logica cuerpo . estrucElse
    (20) estrucElse -> . ELSE cuerpo END
    (21) estrucElse -> . ELSE logica cuerpo END

    END             shift and go to state 62
    ELSE            shift and go to state 10

    estrucElse                     shift and go to state 63

state 42

    (15) logica -> condicion operadorLog . logica
    (14) logica -> . condicion
    (15) logica -> . condicion operadorLog logica
    (16) condicion -> . comparador COMPARACION comparador
    (17) condicion -> . boolean
    (18) comparador -> . VARIABLE
    (19) comparador -> . primitivo
    (49) boolean -> . TRUE
    (50) boolean -> . FALSE
    (46) primitivo -> . NUMBER PUNTO NUMBER
    (47) primitivo -> . NUMBER
    (48) primitivo -> . boolean

    VARIABLE        shift and go to state 18
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    NUMBER          shift and go to state 22

    condicion                      shift and go to state 15
    logica                         shift and go to state 64
    comparador                     shift and go to state 16
    boolean                        shift and go to state 17
    primitivo                      shift and go to state 19

state 43

    (10) operadorLog -> AND .

    VARIABLE        reduce using rule 10 (operadorLog -> AND .)
    TRUE            reduce using rule 10 (operadorLog -> AND .)
    FALSE           reduce using rule 10 (operadorLog -> AND .)
    NUMBER          reduce using rule 10 (operadorLog -> AND .)
    DEF             reduce using rule 10 (operadorLog -> AND .)


state 44

    (11) operadorLog -> OR .

    VARIABLE        reduce using rule 11 (operadorLog -> OR .)
    TRUE            reduce using rule 11 (operadorLog -> OR .)
    FALSE           reduce using rule 11 (operadorLog -> OR .)
    NUMBER          reduce using rule 11 (operadorLog -> OR .)
    DEF             reduce using rule 11 (operadorLog -> OR .)


state 45

    (16) condicion -> comparador COMPARACION . comparador
    (18) comparador -> . VARIABLE
    (19) comparador -> . primitivo
    (46) primitivo -> . NUMBER PUNTO NUMBER
    (47) primitivo -> . NUMBER
    (48) primitivo -> . boolean
    (49) boolean -> . TRUE
    (50) boolean -> . FALSE

    VARIABLE        shift and go to state 18
    NUMBER          shift and go to state 22
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21

    comparador                     shift and go to state 65
    primitivo                      shift and go to state 19
    boolean                        shift and go to state 36

state 46

    (46) primitivo -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 66


state 47

    (20) estrucElse -> ELSE cuerpo END .

    $end            reduce using rule 20 (estrucElse -> ELSE cuerpo END .)


state 48

    (21) estrucElse -> ELSE logica cuerpo . END

    END             shift and go to state 67


state 49

    (22) estrucWhile -> WHILE declaracion cuerpo . END

    END             shift and go to state 68


state 50

    (23) estrucWhile -> WHILE declaracion operadorLog . declaracion cuerpo END
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8

    declaracion                    shift and go to state 69

state 51

    (38) expresion -> NUMBER PLUS . NUMBER

    NUMBER          shift and go to state 70


state 52

    (39) expresion -> NUMBER MINUS . NUMBER

    NUMBER          shift and go to state 71


state 53

    (41) termino -> termino TIMES . factor
    (44) factor -> . NUMBER
    (45) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 73
    LPAREN          shift and go to state 39

    factor                         shift and go to state 72

state 54

    (42) termino -> termino DIVIDE . factor
    (44) factor -> . NUMBER
    (45) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 73
    LPAREN          shift and go to state 39

    factor                         shift and go to state 74

state 55

    (45) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 75


state 56

    (38) expresion -> NUMBER . PLUS NUMBER
    (39) expresion -> NUMBER . MINUS NUMBER
    (44) factor -> NUMBER .

    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    RPAREN          reduce using rule 44 (factor -> NUMBER .)


state 57

    (29) rubyParams -> VARIABLE .

    COMA            reduce using rule 29 (rubyParams -> VARIABLE .)
    RPAREN          reduce using rule 29 (rubyParams -> VARIABLE .)


state 58

    (26) declaracion -> DEF VARIABLE LPAREN params . RPAREN cuerpo END

    RPAREN          shift and go to state 76


state 59

    (27) params -> rubyParams .
    (28) params -> rubyParams . COMA params

    RPAREN          reduce using rule 27 (params -> rubyParams .)
    COMA            shift and go to state 77


state 60

    (30) rubyParams -> boolean .

    COMA            reduce using rule 30 (rubyParams -> boolean .)
    RPAREN          reduce using rule 30 (rubyParams -> boolean .)


state 61

    (31) rubyParams -> NUMBER .

    COMA            reduce using rule 31 (rubyParams -> NUMBER .)
    RPAREN          reduce using rule 31 (rubyParams -> NUMBER .)


state 62

    (12) estrucIf -> IF logica cuerpo END .

    $end            reduce using rule 12 (estrucIf -> IF logica cuerpo END .)


state 63

    (13) estrucIf -> IF logica cuerpo estrucElse .

    $end            reduce using rule 13 (estrucIf -> IF logica cuerpo estrucElse .)


state 64

    (15) logica -> condicion operadorLog logica .

    VARIABLE        reduce using rule 15 (logica -> condicion operadorLog logica .)
    DEF             reduce using rule 15 (logica -> condicion operadorLog logica .)


state 65

    (16) condicion -> comparador COMPARACION comparador .

    AND             reduce using rule 16 (condicion -> comparador COMPARACION comparador .)
    OR              reduce using rule 16 (condicion -> comparador COMPARACION comparador .)
    VARIABLE        reduce using rule 16 (condicion -> comparador COMPARACION comparador .)
    DEF             reduce using rule 16 (condicion -> comparador COMPARACION comparador .)


state 66

    (46) primitivo -> NUMBER PUNTO NUMBER .

    COMPARACION     reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)
    $end            reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)
    END             reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)
    AND             reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)
    OR              reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)
    VARIABLE        reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)
    DEF             reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)
    ELSE            reduce using rule 46 (primitivo -> NUMBER PUNTO NUMBER .)


state 67

    (21) estrucElse -> ELSE logica cuerpo END .

    $end            reduce using rule 21 (estrucElse -> ELSE logica cuerpo END .)


state 68

    (22) estrucWhile -> WHILE declaracion cuerpo END .

    $end            reduce using rule 22 (estrucWhile -> WHILE declaracion cuerpo END .)


state 69

    (23) estrucWhile -> WHILE declaracion operadorLog declaracion . cuerpo END
    (24) cuerpo -> . declaracion
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8

    declaracion                    shift and go to state 25
    cuerpo                         shift and go to state 78

state 70

    (38) expresion -> NUMBER PLUS NUMBER .

    $end            reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)
    END             reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)
    AND             reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)
    OR              reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)
    VARIABLE        reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)
    DEF             reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)
    ELSE            reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 38 (expresion -> NUMBER PLUS NUMBER .)


state 71

    (39) expresion -> NUMBER MINUS NUMBER .

    $end            reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)
    END             reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)
    AND             reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)
    OR              reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)
    VARIABLE        reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)
    DEF             reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)
    ELSE            reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 39 (expresion -> NUMBER MINUS NUMBER .)


state 72

    (41) termino -> termino TIMES factor .

    TIMES           reduce using rule 41 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 41 (termino -> termino TIMES factor .)
    $end            reduce using rule 41 (termino -> termino TIMES factor .)
    END             reduce using rule 41 (termino -> termino TIMES factor .)
    AND             reduce using rule 41 (termino -> termino TIMES factor .)
    OR              reduce using rule 41 (termino -> termino TIMES factor .)
    VARIABLE        reduce using rule 41 (termino -> termino TIMES factor .)
    DEF             reduce using rule 41 (termino -> termino TIMES factor .)
    ELSE            reduce using rule 41 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 41 (termino -> termino TIMES factor .)


state 73

    (44) factor -> NUMBER .

    TIMES           reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    $end            reduce using rule 44 (factor -> NUMBER .)
    END             reduce using rule 44 (factor -> NUMBER .)
    AND             reduce using rule 44 (factor -> NUMBER .)
    OR              reduce using rule 44 (factor -> NUMBER .)
    VARIABLE        reduce using rule 44 (factor -> NUMBER .)
    DEF             reduce using rule 44 (factor -> NUMBER .)
    ELSE            reduce using rule 44 (factor -> NUMBER .)
    RPAREN          reduce using rule 44 (factor -> NUMBER .)


state 74

    (42) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 42 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 42 (termino -> termino DIVIDE factor .)
    $end            reduce using rule 42 (termino -> termino DIVIDE factor .)
    END             reduce using rule 42 (termino -> termino DIVIDE factor .)
    AND             reduce using rule 42 (termino -> termino DIVIDE factor .)
    OR              reduce using rule 42 (termino -> termino DIVIDE factor .)
    VARIABLE        reduce using rule 42 (termino -> termino DIVIDE factor .)
    DEF             reduce using rule 42 (termino -> termino DIVIDE factor .)
    ELSE            reduce using rule 42 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 42 (termino -> termino DIVIDE factor .)


state 75

    (45) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    $end            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    END             reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    AND             reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    OR              reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    DEF             reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 45 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 45 (factor -> LPAREN expresion RPAREN .)


state 76

    (26) declaracion -> DEF VARIABLE LPAREN params RPAREN . cuerpo END
    (24) cuerpo -> . declaracion
    (25) declaracion -> . VARIABLE IGUAL asignacion
    (26) declaracion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 7
    DEF             shift and go to state 8

    cuerpo                         shift and go to state 79
    declaracion                    shift and go to state 25

state 77

    (28) params -> rubyParams COMA . params
    (27) params -> . rubyParams
    (28) params -> . rubyParams COMA params
    (29) rubyParams -> . VARIABLE
    (30) rubyParams -> . boolean
    (31) rubyParams -> . NUMBER
    (49) boolean -> . TRUE
    (50) boolean -> . FALSE

    VARIABLE        shift and go to state 57
    NUMBER          shift and go to state 61
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21

    rubyParams                     shift and go to state 59
    params                         shift and go to state 80
    boolean                        shift and go to state 60

state 78

    (23) estrucWhile -> WHILE declaracion operadorLog declaracion cuerpo . END

    END             shift and go to state 81


state 79

    (26) declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo . END

    END             shift and go to state 82


state 80

    (28) params -> rubyParams COMA params .

    RPAREN          reduce using rule 28 (params -> rubyParams COMA params .)


state 81

    (23) estrucWhile -> WHILE declaracion operadorLog declaracion cuerpo END .

    $end            reduce using rule 23 (estrucWhile -> WHILE declaracion operadorLog declaracion cuerpo END .)


state 82

    (26) declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .

    $end            reduce using rule 26 (declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    END             reduce using rule 26 (declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    AND             reduce using rule 26 (declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    OR              reduce using rule 26 (declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    VARIABLE        reduce using rule 26 (declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    DEF             reduce using rule 26 (declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    ELSE            reduce using rule 26 (declaracion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 35 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (primitivo -> NUMBER) in state 35
