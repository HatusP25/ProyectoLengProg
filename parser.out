Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    ARROBA
    BEGIN
    BOOLEANO
    BREAK
    CASE
    CLASS
    COMILLASDOBLE
    COMILLASIMPLE
    DARROBA
    DO
    DOLAR
    ELSIF
    ENSURE
    GUIONBAJO
    HASH
    ID
    LBRACKET
    MODULE
    NEXT
    NIL
    NOT
    RBRACKET
    REDO
    RESCUE
    RETRY
    SELF
    SUPER
    THEN
    UNDEF
    UNLES
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> estructurasControl
Rule 2     sentencias -> declaracion
Rule 3     sentencias -> estructurasControl sentencias
Rule 4     sentencias -> declaracion sentencias
Rule 5     sentencias -> declaracion_funcion
Rule 6     sentencias -> declaracion_funcion sentencias
Rule 7     estructurasControl -> estrucIf
Rule 8     estructurasControl -> estrucWhile
Rule 9     estructurasControl -> sentenciafor
Rule 10    operadorMat -> IGUAL
Rule 11    operadorMat -> PLUS
Rule 12    operadorMat -> MINUS
Rule 13    operadorMat -> TIMES
Rule 14    operadorLog -> AND
Rule 15    operadorLog -> OR
Rule 16    estrucIf -> IF logica cuerpo END
Rule 17    estrucIf -> IF logica cuerpo estrucElse
Rule 18    logica -> condicion
Rule 19    logica -> condicion operadorLog logica
Rule 20    condicion -> comparador COMPARACION comparador
Rule 21    condicion -> boolean
Rule 22    comparador -> VARIABLE
Rule 23    comparador -> primitivo
Rule 24    estrucElse -> ELSE cuerpo END
Rule 25    estrucElse -> ELSE logica cuerpo END
Rule 26    estrucWhile -> WHILE logica cuerpo END
Rule 27    cuerpo -> declaracion
Rule 28    cuerpo -> declaracion cuerpo
Rule 29    cuerpo -> imprimir
Rule 30    cuerpo -> imprimir cuerpo
Rule 31    cuerpo -> estructurasControl
Rule 32    cuerpo -> estructurasControl cuerpo
Rule 33    cuerpo -> cuerpo RETURN retornos
Rule 34    retornos -> VARIABLE
Rule 35    retornos -> primitivo
Rule 36    retornos -> expresion
Rule 37    retornos -> asignacion
Rule 38    declaracion -> VARIABLE IGUAL asignacion
Rule 39    declaracion -> VARIABLE IGUAL asignacion declaracion
Rule 40    declaracion -> VARIABLE operadorMat IGUAL opcion
Rule 41    declaracion -> VARIABLE operadorMat IGUAL opcion declaracion
Rule 42    opcion -> VARIABLE
Rule 43    opcion -> NUMBER
Rule 44    declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END
Rule 45    params -> rubyParams
Rule 46    params -> rubyParams COMA params
Rule 47    sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
Rule 48    imprimir -> PUTS STRING
Rule 49    imprimir -> PUTS VARIABLE
Rule 50    rubyParams -> VARIABLE
Rule 51    rubyParams -> boolean
Rule 52    rubyParams -> NUMBER
Rule 53    asignacion -> NUMBER
Rule 54    asignacion -> boolean
Rule 55    contenidohash -> elemento
Rule 56    contenidohash -> elemento COMA contenidohash
Rule 57    asignacion -> LLLAVE contenidohash RLLAVE
Rule 58    elemento -> clave FHASH value
Rule 59    asignacion -> ARREGLO
Rule 60    asignacion -> FICHERO
Rule 61    asignacion -> expresion
Rule 62    asignacion -> STRING
Rule 63    expresion -> NUMBER PLUS NUMBER
Rule 64    expresion -> NUMBER MINUS NUMBER
Rule 65    expresion -> termino
Rule 66    termino -> termino TIMES factor
Rule 67    termino -> termino DIVIDE factor
Rule 68    termino -> factor
Rule 69    factor -> NUMBER
Rule 70    factor -> LPAREN expresion RPAREN
Rule 71    primitivo -> NUMBER PUNTO NUMBER
Rule 72    primitivo -> NUMBER
Rule 73    primitivo -> boolean
Rule 74    boolean -> TRUE
Rule 75    boolean -> FALSE
Rule 76    funcioneshash -> hlength
Rule 77    funcioneshash -> haskey
Rule 78    funcioneshash -> hkeys
Rule 79    funcioneshash -> hvalues
Rule 80    hlength -> asignacion PUNTO LENGTH LPAREN RPAREN
Rule 81    haskey -> asignacion HASKEY INTERROGACION LPAREN clave RPAREN
Rule 82    hkeys -> asignacion PUNTO KEY LPAREN value RPAREN
Rule 83    hvalues -> asignacion PUNTO VALUES
Rule 84    clave -> STRING
Rule 85    clave -> NUMBER
Rule 86    clave -> NUMBER PUNTO NUMBER
Rule 87    value -> NUMBER
Rule 88    value -> STRING
Rule 89    value -> boolean
Rule 90    value -> NUMBER PUNTO NUMBER

Terminals, with rules where they appear

ALIAS                : 
AND                  : 14
ARREGLO              : 59
ARROBA               : 
BEGIN                : 
BOOLEANO             : 
BREAK                : 
CASE                 : 
CLASS                : 
COMA                 : 46 56
COMILLASDOBLE        : 
COMILLASIMPLE        : 
COMPARACION          : 20
DARROBA              : 
DEF                  : 44
DIVIDE               : 67
DO                   : 
DOLAR                : 
ELSE                 : 24 25
ELSIF                : 
END                  : 16 24 25 26 44 47
ENSURE               : 
FALSE                : 75
FHASH                : 58
FICHERO              : 60
FOR                  : 47
GUIONBAJO            : 
HASH                 : 
HASKEY               : 81
ID                   : 
IF                   : 16 17
IGUAL                : 10 38 39 40 41
IN                   : 47
INTERROGACION        : 81
KEY                  : 82
LBRACKET             : 
LENGTH               : 80
LLLAVE               : 57
LPAREN               : 44 47 70 80 81 82
MINUS                : 12 64
MODULE               : 
NEXT                 : 
NIL                  : 
NOT                  : 
NUMBER               : 43 47 47 52 53 63 63 64 64 69 71 71 72 85 86 86 87 90 90
OR                   : 15
PLUS                 : 11 63
PUNTO                : 47 47 71 80 82 83 86 90
PUTS                 : 48 49
RBRACKET             : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 33
RLLAVE               : 57
RPAREN               : 44 47 70 80 81 82
SELF                 : 
STRING               : 48 62 84 88
SUPER                : 
THEN                 : 
TIMES                : 13 66
TRUE                 : 74
UNDEF                : 
UNLES                : 
UNTIL                : 
VALUES               : 83
VARIABLE             : 22 34 38 39 40 41 42 44 47 49 50
WHEN                 : 
WHILE                : 26
YIELD                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 37 38 39 80 81 82 83
boolean              : 21 51 54 73 89
clave                : 58 81
comparador           : 20 20
condicion            : 18 19
contenidohash        : 56 57
cuerpo               : 16 17 24 25 26 28 30 32 33 44 47
declaracion          : 2 4 27 28 39 41
declaracion_funcion  : 5 6
elemento             : 55 56
estrucElse           : 17
estrucIf             : 7
estrucWhile          : 8
estructurasControl   : 1 3 31 32
expresion            : 36 61 70
factor               : 66 67 68
funcioneshash        : 
haskey               : 77
hkeys                : 78
hlength              : 76
hvalues              : 79
imprimir             : 29 30
logica               : 16 17 19 25 26
opcion               : 40 41
operadorLog          : 19
operadorMat          : 40 41
params               : 44 46
primitivo            : 23 35
retornos             : 33
rubyParams           : 45 46
sentenciafor         : 9
sentencias           : 3 4 6 0
termino              : 65 66 67
value                : 58 82

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (44) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 8
    DEF             shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    sentencias                     shift and go to state 1
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    declaracion_funcion            shift and go to state 4
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> estructurasControl .
    (3) sentencias -> estructurasControl . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (44) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    $end            reduce using rule 1 (sentencias -> estructurasControl .)
    VARIABLE        shift and go to state 8
    DEF             shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    estructurasControl             shift and go to state 2
    sentencias                     shift and go to state 13
    declaracion                    shift and go to state 3
    declaracion_funcion            shift and go to state 4
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 3

    (2) sentencias -> declaracion .
    (4) sentencias -> declaracion . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (44) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    $end            reduce using rule 2 (sentencias -> declaracion .)
    VARIABLE        shift and go to state 8
    DEF             shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    declaracion                    shift and go to state 3
    sentencias                     shift and go to state 14
    estructurasControl             shift and go to state 2
    declaracion_funcion            shift and go to state 4
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 4

    (5) sentencias -> declaracion_funcion .
    (6) sentencias -> declaracion_funcion . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (44) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    $end            reduce using rule 5 (sentencias -> declaracion_funcion .)
    VARIABLE        shift and go to state 8
    DEF             shift and go to state 9
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    declaracion_funcion            shift and go to state 4
    sentencias                     shift and go to state 15
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 5

    (7) estructurasControl -> estrucIf .

    VARIABLE        reduce using rule 7 (estructurasControl -> estrucIf .)
    DEF             reduce using rule 7 (estructurasControl -> estrucIf .)
    IF              reduce using rule 7 (estructurasControl -> estrucIf .)
    WHILE           reduce using rule 7 (estructurasControl -> estrucIf .)
    FOR             reduce using rule 7 (estructurasControl -> estrucIf .)
    $end            reduce using rule 7 (estructurasControl -> estrucIf .)
    PUTS            reduce using rule 7 (estructurasControl -> estrucIf .)
    END             reduce using rule 7 (estructurasControl -> estrucIf .)
    RETURN          reduce using rule 7 (estructurasControl -> estrucIf .)
    ELSE            reduce using rule 7 (estructurasControl -> estrucIf .)


state 6

    (8) estructurasControl -> estrucWhile .

    VARIABLE        reduce using rule 8 (estructurasControl -> estrucWhile .)
    DEF             reduce using rule 8 (estructurasControl -> estrucWhile .)
    IF              reduce using rule 8 (estructurasControl -> estrucWhile .)
    WHILE           reduce using rule 8 (estructurasControl -> estrucWhile .)
    FOR             reduce using rule 8 (estructurasControl -> estrucWhile .)
    $end            reduce using rule 8 (estructurasControl -> estrucWhile .)
    PUTS            reduce using rule 8 (estructurasControl -> estrucWhile .)
    END             reduce using rule 8 (estructurasControl -> estrucWhile .)
    RETURN          reduce using rule 8 (estructurasControl -> estrucWhile .)
    ELSE            reduce using rule 8 (estructurasControl -> estrucWhile .)


state 7

    (9) estructurasControl -> sentenciafor .

    VARIABLE        reduce using rule 9 (estructurasControl -> sentenciafor .)
    DEF             reduce using rule 9 (estructurasControl -> sentenciafor .)
    IF              reduce using rule 9 (estructurasControl -> sentenciafor .)
    WHILE           reduce using rule 9 (estructurasControl -> sentenciafor .)
    FOR             reduce using rule 9 (estructurasControl -> sentenciafor .)
    $end            reduce using rule 9 (estructurasControl -> sentenciafor .)
    PUTS            reduce using rule 9 (estructurasControl -> sentenciafor .)
    END             reduce using rule 9 (estructurasControl -> sentenciafor .)
    RETURN          reduce using rule 9 (estructurasControl -> sentenciafor .)
    ELSE            reduce using rule 9 (estructurasControl -> sentenciafor .)


state 8

    (38) declaracion -> VARIABLE . IGUAL asignacion
    (39) declaracion -> VARIABLE . IGUAL asignacion declaracion
    (40) declaracion -> VARIABLE . operadorMat IGUAL opcion
    (41) declaracion -> VARIABLE . operadorMat IGUAL opcion declaracion
    (10) operadorMat -> . IGUAL
    (11) operadorMat -> . PLUS
    (12) operadorMat -> . MINUS
    (13) operadorMat -> . TIMES

    IGUAL           shift and go to state 16
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20

    operadorMat                    shift and go to state 17

state 9

    (44) declaracion_funcion -> DEF . VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 21


state 10

    (16) estrucIf -> IF . logica cuerpo END
    (17) estrucIf -> IF . logica cuerpo estrucElse
    (18) logica -> . condicion
    (19) logica -> . condicion operadorLog logica
    (20) condicion -> . comparador COMPARACION comparador
    (21) condicion -> . boolean
    (22) comparador -> . VARIABLE
    (23) comparador -> . primitivo
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE
    (71) primitivo -> . NUMBER PUNTO NUMBER
    (72) primitivo -> . NUMBER
    (73) primitivo -> . boolean

    VARIABLE        shift and go to state 26
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NUMBER          shift and go to state 30

    logica                         shift and go to state 22
    condicion                      shift and go to state 23
    comparador                     shift and go to state 24
    boolean                        shift and go to state 25
    primitivo                      shift and go to state 27

state 11

    (26) estrucWhile -> WHILE . logica cuerpo END
    (18) logica -> . condicion
    (19) logica -> . condicion operadorLog logica
    (20) condicion -> . comparador COMPARACION comparador
    (21) condicion -> . boolean
    (22) comparador -> . VARIABLE
    (23) comparador -> . primitivo
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE
    (71) primitivo -> . NUMBER PUNTO NUMBER
    (72) primitivo -> . NUMBER
    (73) primitivo -> . boolean

    VARIABLE        shift and go to state 26
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NUMBER          shift and go to state 30

    logica                         shift and go to state 31
    condicion                      shift and go to state 23
    comparador                     shift and go to state 24
    boolean                        shift and go to state 25
    primitivo                      shift and go to state 27

state 12

    (47) sentenciafor -> FOR . VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 32


state 13

    (3) sentencias -> estructurasControl sentencias .

    $end            reduce using rule 3 (sentencias -> estructurasControl sentencias .)


state 14

    (4) sentencias -> declaracion sentencias .

    $end            reduce using rule 4 (sentencias -> declaracion sentencias .)


state 15

    (6) sentencias -> declaracion_funcion sentencias .

    $end            reduce using rule 6 (sentencias -> declaracion_funcion sentencias .)


state 16

    (38) declaracion -> VARIABLE IGUAL . asignacion
    (39) declaracion -> VARIABLE IGUAL . asignacion declaracion
    (10) operadorMat -> IGUAL .
    (53) asignacion -> . NUMBER
    (54) asignacion -> . boolean
    (57) asignacion -> . LLLAVE contenidohash RLLAVE
    (59) asignacion -> . ARREGLO
    (60) asignacion -> . FICHERO
    (61) asignacion -> . expresion
    (62) asignacion -> . STRING
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE
    (63) expresion -> . NUMBER PLUS NUMBER
    (64) expresion -> . NUMBER MINUS NUMBER
    (65) expresion -> . termino
    (66) termino -> . termino TIMES factor
    (67) termino -> . termino DIVIDE factor
    (68) termino -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . LPAREN expresion RPAREN

    IGUAL           reduce using rule 10 (operadorMat -> IGUAL .)
    NUMBER          shift and go to state 34
    LLLAVE          shift and go to state 36
    ARREGLO         shift and go to state 37
    FICHERO         shift and go to state 38
    STRING          shift and go to state 40
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPAREN          shift and go to state 43

    asignacion                     shift and go to state 33
    boolean                        shift and go to state 35
    expresion                      shift and go to state 39
    termino                        shift and go to state 41
    factor                         shift and go to state 42

state 17

    (40) declaracion -> VARIABLE operadorMat . IGUAL opcion
    (41) declaracion -> VARIABLE operadorMat . IGUAL opcion declaracion

    IGUAL           shift and go to state 44


state 18

    (11) operadorMat -> PLUS .

    IGUAL           reduce using rule 11 (operadorMat -> PLUS .)


state 19

    (12) operadorMat -> MINUS .

    IGUAL           reduce using rule 12 (operadorMat -> MINUS .)


state 20

    (13) operadorMat -> TIMES .

    IGUAL           reduce using rule 13 (operadorMat -> TIMES .)


state 21

    (44) declaracion_funcion -> DEF VARIABLE . LPAREN params RPAREN cuerpo END

    LPAREN          shift and go to state 45


state 22

    (16) estrucIf -> IF logica . cuerpo END
    (17) estrucIf -> IF logica . cuerpo estrucElse
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    cuerpo                         shift and go to state 46
    declaracion                    shift and go to state 47
    imprimir                       shift and go to state 48
    estructurasControl             shift and go to state 49
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 23

    (18) logica -> condicion .
    (19) logica -> condicion . operadorLog logica
    (14) operadorLog -> . AND
    (15) operadorLog -> . OR

    VARIABLE        reduce using rule 18 (logica -> condicion .)
    PUTS            reduce using rule 18 (logica -> condicion .)
    IF              reduce using rule 18 (logica -> condicion .)
    WHILE           reduce using rule 18 (logica -> condicion .)
    FOR             reduce using rule 18 (logica -> condicion .)
    AND             shift and go to state 52
    OR              shift and go to state 53

    operadorLog                    shift and go to state 51

state 24

    (20) condicion -> comparador . COMPARACION comparador

    COMPARACION     shift and go to state 54


state 25

    (21) condicion -> boolean .
    (73) primitivo -> boolean .

    AND             reduce using rule 21 (condicion -> boolean .)
    OR              reduce using rule 21 (condicion -> boolean .)
    VARIABLE        reduce using rule 21 (condicion -> boolean .)
    PUTS            reduce using rule 21 (condicion -> boolean .)
    IF              reduce using rule 21 (condicion -> boolean .)
    WHILE           reduce using rule 21 (condicion -> boolean .)
    FOR             reduce using rule 21 (condicion -> boolean .)
    COMPARACION     reduce using rule 73 (primitivo -> boolean .)


state 26

    (22) comparador -> VARIABLE .

    COMPARACION     reduce using rule 22 (comparador -> VARIABLE .)
    AND             reduce using rule 22 (comparador -> VARIABLE .)
    OR              reduce using rule 22 (comparador -> VARIABLE .)
    VARIABLE        reduce using rule 22 (comparador -> VARIABLE .)
    PUTS            reduce using rule 22 (comparador -> VARIABLE .)
    IF              reduce using rule 22 (comparador -> VARIABLE .)
    WHILE           reduce using rule 22 (comparador -> VARIABLE .)
    FOR             reduce using rule 22 (comparador -> VARIABLE .)


state 27

    (23) comparador -> primitivo .

    COMPARACION     reduce using rule 23 (comparador -> primitivo .)
    AND             reduce using rule 23 (comparador -> primitivo .)
    OR              reduce using rule 23 (comparador -> primitivo .)
    VARIABLE        reduce using rule 23 (comparador -> primitivo .)
    PUTS            reduce using rule 23 (comparador -> primitivo .)
    IF              reduce using rule 23 (comparador -> primitivo .)
    WHILE           reduce using rule 23 (comparador -> primitivo .)
    FOR             reduce using rule 23 (comparador -> primitivo .)


state 28

    (74) boolean -> TRUE .

    AND             reduce using rule 74 (boolean -> TRUE .)
    OR              reduce using rule 74 (boolean -> TRUE .)
    VARIABLE        reduce using rule 74 (boolean -> TRUE .)
    PUTS            reduce using rule 74 (boolean -> TRUE .)
    IF              reduce using rule 74 (boolean -> TRUE .)
    WHILE           reduce using rule 74 (boolean -> TRUE .)
    FOR             reduce using rule 74 (boolean -> TRUE .)
    COMPARACION     reduce using rule 74 (boolean -> TRUE .)
    DEF             reduce using rule 74 (boolean -> TRUE .)
    $end            reduce using rule 74 (boolean -> TRUE .)
    END             reduce using rule 74 (boolean -> TRUE .)
    RETURN          reduce using rule 74 (boolean -> TRUE .)
    ELSE            reduce using rule 74 (boolean -> TRUE .)
    COMA            reduce using rule 74 (boolean -> TRUE .)
    RPAREN          reduce using rule 74 (boolean -> TRUE .)
    RLLAVE          reduce using rule 74 (boolean -> TRUE .)


state 29

    (75) boolean -> FALSE .

    AND             reduce using rule 75 (boolean -> FALSE .)
    OR              reduce using rule 75 (boolean -> FALSE .)
    VARIABLE        reduce using rule 75 (boolean -> FALSE .)
    PUTS            reduce using rule 75 (boolean -> FALSE .)
    IF              reduce using rule 75 (boolean -> FALSE .)
    WHILE           reduce using rule 75 (boolean -> FALSE .)
    FOR             reduce using rule 75 (boolean -> FALSE .)
    COMPARACION     reduce using rule 75 (boolean -> FALSE .)
    DEF             reduce using rule 75 (boolean -> FALSE .)
    $end            reduce using rule 75 (boolean -> FALSE .)
    END             reduce using rule 75 (boolean -> FALSE .)
    RETURN          reduce using rule 75 (boolean -> FALSE .)
    ELSE            reduce using rule 75 (boolean -> FALSE .)
    COMA            reduce using rule 75 (boolean -> FALSE .)
    RPAREN          reduce using rule 75 (boolean -> FALSE .)
    RLLAVE          reduce using rule 75 (boolean -> FALSE .)


state 30

    (71) primitivo -> NUMBER . PUNTO NUMBER
    (72) primitivo -> NUMBER .

    PUNTO           shift and go to state 55
    COMPARACION     reduce using rule 72 (primitivo -> NUMBER .)
    AND             reduce using rule 72 (primitivo -> NUMBER .)
    OR              reduce using rule 72 (primitivo -> NUMBER .)
    VARIABLE        reduce using rule 72 (primitivo -> NUMBER .)
    PUTS            reduce using rule 72 (primitivo -> NUMBER .)
    IF              reduce using rule 72 (primitivo -> NUMBER .)
    WHILE           reduce using rule 72 (primitivo -> NUMBER .)
    FOR             reduce using rule 72 (primitivo -> NUMBER .)


state 31

    (26) estrucWhile -> WHILE logica . cuerpo END
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    cuerpo                         shift and go to state 56
    declaracion                    shift and go to state 47
    imprimir                       shift and go to state 48
    estructurasControl             shift and go to state 49
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 32

    (47) sentenciafor -> FOR VARIABLE . IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    IN              shift and go to state 57


state 33

    (38) declaracion -> VARIABLE IGUAL asignacion .
    (39) declaracion -> VARIABLE IGUAL asignacion . declaracion
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    IF              reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    WHILE           reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    FOR             reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    $end            reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    PUTS            reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    END             reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    RETURN          reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    ELSE            reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .)
    VARIABLE        shift and go to state 8

  ! VARIABLE        [ reduce using rule 38 (declaracion -> VARIABLE IGUAL asignacion .) ]

    declaracion                    shift and go to state 58

state 34

    (53) asignacion -> NUMBER .
    (63) expresion -> NUMBER . PLUS NUMBER
    (64) expresion -> NUMBER . MINUS NUMBER
    (69) factor -> NUMBER .

  ! reduce/reduce conflict for VARIABLE resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for DEF resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for $end resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for PUTS resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (asignacion -> NUMBER .)
    VARIABLE        reduce using rule 53 (asignacion -> NUMBER .)
    DEF             reduce using rule 53 (asignacion -> NUMBER .)
    IF              reduce using rule 53 (asignacion -> NUMBER .)
    WHILE           reduce using rule 53 (asignacion -> NUMBER .)
    FOR             reduce using rule 53 (asignacion -> NUMBER .)
    $end            reduce using rule 53 (asignacion -> NUMBER .)
    PUTS            reduce using rule 53 (asignacion -> NUMBER .)
    END             reduce using rule 53 (asignacion -> NUMBER .)
    RETURN          reduce using rule 53 (asignacion -> NUMBER .)
    ELSE            reduce using rule 53 (asignacion -> NUMBER .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    TIMES           reduce using rule 69 (factor -> NUMBER .)
    DIVIDE          reduce using rule 69 (factor -> NUMBER .)

  ! VARIABLE        [ reduce using rule 69 (factor -> NUMBER .) ]
  ! DEF             [ reduce using rule 69 (factor -> NUMBER .) ]
  ! IF              [ reduce using rule 69 (factor -> NUMBER .) ]
  ! WHILE           [ reduce using rule 69 (factor -> NUMBER .) ]
  ! FOR             [ reduce using rule 69 (factor -> NUMBER .) ]
  ! $end            [ reduce using rule 69 (factor -> NUMBER .) ]
  ! PUTS            [ reduce using rule 69 (factor -> NUMBER .) ]
  ! END             [ reduce using rule 69 (factor -> NUMBER .) ]
  ! RETURN          [ reduce using rule 69 (factor -> NUMBER .) ]
  ! ELSE            [ reduce using rule 69 (factor -> NUMBER .) ]


state 35

    (54) asignacion -> boolean .

    VARIABLE        reduce using rule 54 (asignacion -> boolean .)
    DEF             reduce using rule 54 (asignacion -> boolean .)
    IF              reduce using rule 54 (asignacion -> boolean .)
    WHILE           reduce using rule 54 (asignacion -> boolean .)
    FOR             reduce using rule 54 (asignacion -> boolean .)
    $end            reduce using rule 54 (asignacion -> boolean .)
    PUTS            reduce using rule 54 (asignacion -> boolean .)
    END             reduce using rule 54 (asignacion -> boolean .)
    RETURN          reduce using rule 54 (asignacion -> boolean .)
    ELSE            reduce using rule 54 (asignacion -> boolean .)


state 36

    (57) asignacion -> LLLAVE . contenidohash RLLAVE
    (55) contenidohash -> . elemento
    (56) contenidohash -> . elemento COMA contenidohash
    (58) elemento -> . clave FHASH value
    (84) clave -> . STRING
    (85) clave -> . NUMBER
    (86) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 64
    NUMBER          shift and go to state 65

    contenidohash                  shift and go to state 61
    elemento                       shift and go to state 62
    clave                          shift and go to state 63

state 37

    (59) asignacion -> ARREGLO .

    VARIABLE        reduce using rule 59 (asignacion -> ARREGLO .)
    DEF             reduce using rule 59 (asignacion -> ARREGLO .)
    IF              reduce using rule 59 (asignacion -> ARREGLO .)
    WHILE           reduce using rule 59 (asignacion -> ARREGLO .)
    FOR             reduce using rule 59 (asignacion -> ARREGLO .)
    $end            reduce using rule 59 (asignacion -> ARREGLO .)
    PUTS            reduce using rule 59 (asignacion -> ARREGLO .)
    END             reduce using rule 59 (asignacion -> ARREGLO .)
    RETURN          reduce using rule 59 (asignacion -> ARREGLO .)
    ELSE            reduce using rule 59 (asignacion -> ARREGLO .)


state 38

    (60) asignacion -> FICHERO .

    VARIABLE        reduce using rule 60 (asignacion -> FICHERO .)
    DEF             reduce using rule 60 (asignacion -> FICHERO .)
    IF              reduce using rule 60 (asignacion -> FICHERO .)
    WHILE           reduce using rule 60 (asignacion -> FICHERO .)
    FOR             reduce using rule 60 (asignacion -> FICHERO .)
    $end            reduce using rule 60 (asignacion -> FICHERO .)
    PUTS            reduce using rule 60 (asignacion -> FICHERO .)
    END             reduce using rule 60 (asignacion -> FICHERO .)
    RETURN          reduce using rule 60 (asignacion -> FICHERO .)
    ELSE            reduce using rule 60 (asignacion -> FICHERO .)


state 39

    (61) asignacion -> expresion .

    VARIABLE        reduce using rule 61 (asignacion -> expresion .)
    DEF             reduce using rule 61 (asignacion -> expresion .)
    IF              reduce using rule 61 (asignacion -> expresion .)
    WHILE           reduce using rule 61 (asignacion -> expresion .)
    FOR             reduce using rule 61 (asignacion -> expresion .)
    $end            reduce using rule 61 (asignacion -> expresion .)
    PUTS            reduce using rule 61 (asignacion -> expresion .)
    END             reduce using rule 61 (asignacion -> expresion .)
    RETURN          reduce using rule 61 (asignacion -> expresion .)
    ELSE            reduce using rule 61 (asignacion -> expresion .)


state 40

    (62) asignacion -> STRING .

    VARIABLE        reduce using rule 62 (asignacion -> STRING .)
    DEF             reduce using rule 62 (asignacion -> STRING .)
    IF              reduce using rule 62 (asignacion -> STRING .)
    WHILE           reduce using rule 62 (asignacion -> STRING .)
    FOR             reduce using rule 62 (asignacion -> STRING .)
    $end            reduce using rule 62 (asignacion -> STRING .)
    PUTS            reduce using rule 62 (asignacion -> STRING .)
    END             reduce using rule 62 (asignacion -> STRING .)
    RETURN          reduce using rule 62 (asignacion -> STRING .)
    ELSE            reduce using rule 62 (asignacion -> STRING .)


state 41

    (65) expresion -> termino .
    (66) termino -> termino . TIMES factor
    (67) termino -> termino . DIVIDE factor

    VARIABLE        reduce using rule 65 (expresion -> termino .)
    DEF             reduce using rule 65 (expresion -> termino .)
    IF              reduce using rule 65 (expresion -> termino .)
    WHILE           reduce using rule 65 (expresion -> termino .)
    FOR             reduce using rule 65 (expresion -> termino .)
    $end            reduce using rule 65 (expresion -> termino .)
    PUTS            reduce using rule 65 (expresion -> termino .)
    END             reduce using rule 65 (expresion -> termino .)
    RETURN          reduce using rule 65 (expresion -> termino .)
    ELSE            reduce using rule 65 (expresion -> termino .)
    RPAREN          reduce using rule 65 (expresion -> termino .)
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67


state 42

    (68) termino -> factor .

    TIMES           reduce using rule 68 (termino -> factor .)
    DIVIDE          reduce using rule 68 (termino -> factor .)
    VARIABLE        reduce using rule 68 (termino -> factor .)
    DEF             reduce using rule 68 (termino -> factor .)
    IF              reduce using rule 68 (termino -> factor .)
    WHILE           reduce using rule 68 (termino -> factor .)
    FOR             reduce using rule 68 (termino -> factor .)
    $end            reduce using rule 68 (termino -> factor .)
    PUTS            reduce using rule 68 (termino -> factor .)
    END             reduce using rule 68 (termino -> factor .)
    RETURN          reduce using rule 68 (termino -> factor .)
    ELSE            reduce using rule 68 (termino -> factor .)
    RPAREN          reduce using rule 68 (termino -> factor .)


state 43

    (70) factor -> LPAREN . expresion RPAREN
    (63) expresion -> . NUMBER PLUS NUMBER
    (64) expresion -> . NUMBER MINUS NUMBER
    (65) expresion -> . termino
    (66) termino -> . termino TIMES factor
    (67) termino -> . termino DIVIDE factor
    (68) termino -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 69
    LPAREN          shift and go to state 43

    expresion                      shift and go to state 68
    termino                        shift and go to state 41
    factor                         shift and go to state 42

state 44

    (40) declaracion -> VARIABLE operadorMat IGUAL . opcion
    (41) declaracion -> VARIABLE operadorMat IGUAL . opcion declaracion
    (42) opcion -> . VARIABLE
    (43) opcion -> . NUMBER

    VARIABLE        shift and go to state 70
    NUMBER          shift and go to state 72

    opcion                         shift and go to state 71

state 45

    (44) declaracion_funcion -> DEF VARIABLE LPAREN . params RPAREN cuerpo END
    (45) params -> . rubyParams
    (46) params -> . rubyParams COMA params
    (50) rubyParams -> . VARIABLE
    (51) rubyParams -> . boolean
    (52) rubyParams -> . NUMBER
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE

    VARIABLE        shift and go to state 73
    NUMBER          shift and go to state 77
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    params                         shift and go to state 74
    rubyParams                     shift and go to state 75
    boolean                        shift and go to state 76

state 46

    (16) estrucIf -> IF logica cuerpo . END
    (17) estrucIf -> IF logica cuerpo . estrucElse
    (33) cuerpo -> cuerpo . RETURN retornos
    (24) estrucElse -> . ELSE cuerpo END
    (25) estrucElse -> . ELSE logica cuerpo END

    END             shift and go to state 78
    RETURN          shift and go to state 80
    ELSE            shift and go to state 81

    estrucElse                     shift and go to state 79

state 47

    (27) cuerpo -> declaracion .
    (28) cuerpo -> declaracion . cuerpo
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 27 (cuerpo -> declaracion .)
    RETURN          reduce using rule 27 (cuerpo -> declaracion .)
    ELSE            reduce using rule 27 (cuerpo -> declaracion .)
    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    declaracion                    shift and go to state 47
    cuerpo                         shift and go to state 82
    imprimir                       shift and go to state 48
    estructurasControl             shift and go to state 49
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 48

    (29) cuerpo -> imprimir .
    (30) cuerpo -> imprimir . cuerpo
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 29 (cuerpo -> imprimir .)
    RETURN          reduce using rule 29 (cuerpo -> imprimir .)
    ELSE            reduce using rule 29 (cuerpo -> imprimir .)
    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    imprimir                       shift and go to state 48
    cuerpo                         shift and go to state 83
    declaracion                    shift and go to state 47
    estructurasControl             shift and go to state 49
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 49

    (31) cuerpo -> estructurasControl .
    (32) cuerpo -> estructurasControl . cuerpo
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 31 (cuerpo -> estructurasControl .)
    RETURN          reduce using rule 31 (cuerpo -> estructurasControl .)
    ELSE            reduce using rule 31 (cuerpo -> estructurasControl .)
    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    estructurasControl             shift and go to state 49
    cuerpo                         shift and go to state 84
    declaracion                    shift and go to state 47
    imprimir                       shift and go to state 48
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 50

    (48) imprimir -> PUTS . STRING
    (49) imprimir -> PUTS . VARIABLE

    STRING          shift and go to state 85
    VARIABLE        shift and go to state 86


state 51

    (19) logica -> condicion operadorLog . logica
    (18) logica -> . condicion
    (19) logica -> . condicion operadorLog logica
    (20) condicion -> . comparador COMPARACION comparador
    (21) condicion -> . boolean
    (22) comparador -> . VARIABLE
    (23) comparador -> . primitivo
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE
    (71) primitivo -> . NUMBER PUNTO NUMBER
    (72) primitivo -> . NUMBER
    (73) primitivo -> . boolean

    VARIABLE        shift and go to state 26
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NUMBER          shift and go to state 30

    condicion                      shift and go to state 23
    logica                         shift and go to state 87
    comparador                     shift and go to state 24
    boolean                        shift and go to state 25
    primitivo                      shift and go to state 27

state 52

    (14) operadorLog -> AND .

    VARIABLE        reduce using rule 14 (operadorLog -> AND .)
    TRUE            reduce using rule 14 (operadorLog -> AND .)
    FALSE           reduce using rule 14 (operadorLog -> AND .)
    NUMBER          reduce using rule 14 (operadorLog -> AND .)


state 53

    (15) operadorLog -> OR .

    VARIABLE        reduce using rule 15 (operadorLog -> OR .)
    TRUE            reduce using rule 15 (operadorLog -> OR .)
    FALSE           reduce using rule 15 (operadorLog -> OR .)
    NUMBER          reduce using rule 15 (operadorLog -> OR .)


state 54

    (20) condicion -> comparador COMPARACION . comparador
    (22) comparador -> . VARIABLE
    (23) comparador -> . primitivo
    (71) primitivo -> . NUMBER PUNTO NUMBER
    (72) primitivo -> . NUMBER
    (73) primitivo -> . boolean
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE

    VARIABLE        shift and go to state 26
    NUMBER          shift and go to state 30
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    comparador                     shift and go to state 88
    primitivo                      shift and go to state 27
    boolean                        shift and go to state 89

state 55

    (71) primitivo -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 90


state 56

    (26) estrucWhile -> WHILE logica cuerpo . END
    (33) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 91
    RETURN          shift and go to state 80


state 57

    (47) sentenciafor -> FOR VARIABLE IN . LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    LPAREN          shift and go to state 92


state 58

    (39) declaracion -> VARIABLE IGUAL asignacion declaracion .

    VARIABLE        reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    DEF             reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    IF              reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    WHILE           reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    FOR             reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    $end            reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    PUTS            reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    END             reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    RETURN          reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    ELSE            reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion declaracion .)


state 59

    (63) expresion -> NUMBER PLUS . NUMBER

    NUMBER          shift and go to state 93


state 60

    (64) expresion -> NUMBER MINUS . NUMBER

    NUMBER          shift and go to state 94


state 61

    (57) asignacion -> LLLAVE contenidohash . RLLAVE

    RLLAVE          shift and go to state 95


state 62

    (55) contenidohash -> elemento .
    (56) contenidohash -> elemento . COMA contenidohash

    RLLAVE          reduce using rule 55 (contenidohash -> elemento .)
    COMA            shift and go to state 96


state 63

    (58) elemento -> clave . FHASH value

    FHASH           shift and go to state 97


state 64

    (84) clave -> STRING .

    FHASH           reduce using rule 84 (clave -> STRING .)


state 65

    (85) clave -> NUMBER .
    (86) clave -> NUMBER . PUNTO NUMBER

    FHASH           reduce using rule 85 (clave -> NUMBER .)
    PUNTO           shift and go to state 98


state 66

    (66) termino -> termino TIMES . factor
    (69) factor -> . NUMBER
    (70) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 100
    LPAREN          shift and go to state 43

    factor                         shift and go to state 99

state 67

    (67) termino -> termino DIVIDE . factor
    (69) factor -> . NUMBER
    (70) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 100
    LPAREN          shift and go to state 43

    factor                         shift and go to state 101

state 68

    (70) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 102


state 69

    (63) expresion -> NUMBER . PLUS NUMBER
    (64) expresion -> NUMBER . MINUS NUMBER
    (69) factor -> NUMBER .

    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    TIMES           reduce using rule 69 (factor -> NUMBER .)
    DIVIDE          reduce using rule 69 (factor -> NUMBER .)
    RPAREN          reduce using rule 69 (factor -> NUMBER .)


state 70

    (42) opcion -> VARIABLE .

    VARIABLE        reduce using rule 42 (opcion -> VARIABLE .)
    DEF             reduce using rule 42 (opcion -> VARIABLE .)
    IF              reduce using rule 42 (opcion -> VARIABLE .)
    WHILE           reduce using rule 42 (opcion -> VARIABLE .)
    FOR             reduce using rule 42 (opcion -> VARIABLE .)
    $end            reduce using rule 42 (opcion -> VARIABLE .)
    PUTS            reduce using rule 42 (opcion -> VARIABLE .)
    END             reduce using rule 42 (opcion -> VARIABLE .)
    RETURN          reduce using rule 42 (opcion -> VARIABLE .)
    ELSE            reduce using rule 42 (opcion -> VARIABLE .)


state 71

    (40) declaracion -> VARIABLE operadorMat IGUAL opcion .
    (41) declaracion -> VARIABLE operadorMat IGUAL opcion . declaracion
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    IF              reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    WHILE           reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    FOR             reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    $end            reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    PUTS            reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    END             reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    RETURN          reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    ELSE            reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    VARIABLE        shift and go to state 8

  ! VARIABLE        [ reduce using rule 40 (declaracion -> VARIABLE operadorMat IGUAL opcion .) ]

    declaracion                    shift and go to state 103

state 72

    (43) opcion -> NUMBER .

    VARIABLE        reduce using rule 43 (opcion -> NUMBER .)
    DEF             reduce using rule 43 (opcion -> NUMBER .)
    IF              reduce using rule 43 (opcion -> NUMBER .)
    WHILE           reduce using rule 43 (opcion -> NUMBER .)
    FOR             reduce using rule 43 (opcion -> NUMBER .)
    $end            reduce using rule 43 (opcion -> NUMBER .)
    PUTS            reduce using rule 43 (opcion -> NUMBER .)
    END             reduce using rule 43 (opcion -> NUMBER .)
    RETURN          reduce using rule 43 (opcion -> NUMBER .)
    ELSE            reduce using rule 43 (opcion -> NUMBER .)


state 73

    (50) rubyParams -> VARIABLE .

    COMA            reduce using rule 50 (rubyParams -> VARIABLE .)
    RPAREN          reduce using rule 50 (rubyParams -> VARIABLE .)


state 74

    (44) declaracion_funcion -> DEF VARIABLE LPAREN params . RPAREN cuerpo END

    RPAREN          shift and go to state 104


state 75

    (45) params -> rubyParams .
    (46) params -> rubyParams . COMA params

    RPAREN          reduce using rule 45 (params -> rubyParams .)
    COMA            shift and go to state 105


state 76

    (51) rubyParams -> boolean .

    COMA            reduce using rule 51 (rubyParams -> boolean .)
    RPAREN          reduce using rule 51 (rubyParams -> boolean .)


state 77

    (52) rubyParams -> NUMBER .

    COMA            reduce using rule 52 (rubyParams -> NUMBER .)
    RPAREN          reduce using rule 52 (rubyParams -> NUMBER .)


state 78

    (16) estrucIf -> IF logica cuerpo END .

    VARIABLE        reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    DEF             reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    IF              reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    WHILE           reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    FOR             reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    $end            reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    PUTS            reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    END             reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    RETURN          reduce using rule 16 (estrucIf -> IF logica cuerpo END .)
    ELSE            reduce using rule 16 (estrucIf -> IF logica cuerpo END .)


state 79

    (17) estrucIf -> IF logica cuerpo estrucElse .

    VARIABLE        reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    DEF             reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    IF              reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    WHILE           reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    FOR             reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    $end            reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    PUTS            reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    END             reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    RETURN          reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)
    ELSE            reduce using rule 17 (estrucIf -> IF logica cuerpo estrucElse .)


state 80

    (33) cuerpo -> cuerpo RETURN . retornos
    (34) retornos -> . VARIABLE
    (35) retornos -> . primitivo
    (36) retornos -> . expresion
    (37) retornos -> . asignacion
    (71) primitivo -> . NUMBER PUNTO NUMBER
    (72) primitivo -> . NUMBER
    (73) primitivo -> . boolean
    (63) expresion -> . NUMBER PLUS NUMBER
    (64) expresion -> . NUMBER MINUS NUMBER
    (65) expresion -> . termino
    (53) asignacion -> . NUMBER
    (54) asignacion -> . boolean
    (57) asignacion -> . LLLAVE contenidohash RLLAVE
    (59) asignacion -> . ARREGLO
    (60) asignacion -> . FICHERO
    (61) asignacion -> . expresion
    (62) asignacion -> . STRING
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE
    (66) termino -> . termino TIMES factor
    (67) termino -> . termino DIVIDE factor
    (68) termino -> . factor
    (69) factor -> . NUMBER
    (70) factor -> . LPAREN expresion RPAREN

    VARIABLE        shift and go to state 107
    NUMBER          shift and go to state 111
    LLLAVE          shift and go to state 36
    ARREGLO         shift and go to state 37
    FICHERO         shift and go to state 38
    STRING          shift and go to state 40
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPAREN          shift and go to state 43

    retornos                       shift and go to state 106
    primitivo                      shift and go to state 108
    expresion                      shift and go to state 109
    asignacion                     shift and go to state 110
    boolean                        shift and go to state 112
    termino                        shift and go to state 41
    factor                         shift and go to state 42

state 81

    (24) estrucElse -> ELSE . cuerpo END
    (25) estrucElse -> ELSE . logica cuerpo END
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (18) logica -> . condicion
    (19) logica -> . condicion operadorLog logica
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (20) condicion -> . comparador COMPARACION comparador
    (21) condicion -> . boolean
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (22) comparador -> . VARIABLE
    (23) comparador -> . primitivo
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE
    (71) primitivo -> . NUMBER PUNTO NUMBER
    (72) primitivo -> . NUMBER
    (73) primitivo -> . boolean

    VARIABLE        shift and go to state 115
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    NUMBER          shift and go to state 30

    cuerpo                         shift and go to state 113
    logica                         shift and go to state 114
    declaracion                    shift and go to state 47
    imprimir                       shift and go to state 48
    estructurasControl             shift and go to state 49
    condicion                      shift and go to state 23
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7
    comparador                     shift and go to state 24
    boolean                        shift and go to state 25
    primitivo                      shift and go to state 27

state 82

    (28) cuerpo -> declaracion cuerpo .
    (33) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 28 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 28 (cuerpo -> declaracion cuerpo .)
    RETURN          shift and go to state 80

  ! RETURN          [ reduce using rule 28 (cuerpo -> declaracion cuerpo .) ]


state 83

    (30) cuerpo -> imprimir cuerpo .
    (33) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 30 (cuerpo -> imprimir cuerpo .)
    ELSE            reduce using rule 30 (cuerpo -> imprimir cuerpo .)
    RETURN          shift and go to state 80

  ! RETURN          [ reduce using rule 30 (cuerpo -> imprimir cuerpo .) ]


state 84

    (32) cuerpo -> estructurasControl cuerpo .
    (33) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 32 (cuerpo -> estructurasControl cuerpo .)
    ELSE            reduce using rule 32 (cuerpo -> estructurasControl cuerpo .)
    RETURN          shift and go to state 80

  ! RETURN          [ reduce using rule 32 (cuerpo -> estructurasControl cuerpo .) ]


state 85

    (48) imprimir -> PUTS STRING .

    VARIABLE        reduce using rule 48 (imprimir -> PUTS STRING .)
    PUTS            reduce using rule 48 (imprimir -> PUTS STRING .)
    IF              reduce using rule 48 (imprimir -> PUTS STRING .)
    WHILE           reduce using rule 48 (imprimir -> PUTS STRING .)
    FOR             reduce using rule 48 (imprimir -> PUTS STRING .)
    END             reduce using rule 48 (imprimir -> PUTS STRING .)
    RETURN          reduce using rule 48 (imprimir -> PUTS STRING .)
    ELSE            reduce using rule 48 (imprimir -> PUTS STRING .)


state 86

    (49) imprimir -> PUTS VARIABLE .

    VARIABLE        reduce using rule 49 (imprimir -> PUTS VARIABLE .)
    PUTS            reduce using rule 49 (imprimir -> PUTS VARIABLE .)
    IF              reduce using rule 49 (imprimir -> PUTS VARIABLE .)
    WHILE           reduce using rule 49 (imprimir -> PUTS VARIABLE .)
    FOR             reduce using rule 49 (imprimir -> PUTS VARIABLE .)
    END             reduce using rule 49 (imprimir -> PUTS VARIABLE .)
    RETURN          reduce using rule 49 (imprimir -> PUTS VARIABLE .)
    ELSE            reduce using rule 49 (imprimir -> PUTS VARIABLE .)


state 87

    (19) logica -> condicion operadorLog logica .

    VARIABLE        reduce using rule 19 (logica -> condicion operadorLog logica .)
    PUTS            reduce using rule 19 (logica -> condicion operadorLog logica .)
    IF              reduce using rule 19 (logica -> condicion operadorLog logica .)
    WHILE           reduce using rule 19 (logica -> condicion operadorLog logica .)
    FOR             reduce using rule 19 (logica -> condicion operadorLog logica .)


state 88

    (20) condicion -> comparador COMPARACION comparador .

    AND             reduce using rule 20 (condicion -> comparador COMPARACION comparador .)
    OR              reduce using rule 20 (condicion -> comparador COMPARACION comparador .)
    VARIABLE        reduce using rule 20 (condicion -> comparador COMPARACION comparador .)
    PUTS            reduce using rule 20 (condicion -> comparador COMPARACION comparador .)
    IF              reduce using rule 20 (condicion -> comparador COMPARACION comparador .)
    WHILE           reduce using rule 20 (condicion -> comparador COMPARACION comparador .)
    FOR             reduce using rule 20 (condicion -> comparador COMPARACION comparador .)


state 89

    (73) primitivo -> boolean .

    AND             reduce using rule 73 (primitivo -> boolean .)
    OR              reduce using rule 73 (primitivo -> boolean .)
    VARIABLE        reduce using rule 73 (primitivo -> boolean .)
    PUTS            reduce using rule 73 (primitivo -> boolean .)
    IF              reduce using rule 73 (primitivo -> boolean .)
    WHILE           reduce using rule 73 (primitivo -> boolean .)
    FOR             reduce using rule 73 (primitivo -> boolean .)


state 90

    (71) primitivo -> NUMBER PUNTO NUMBER .

    COMPARACION     reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    AND             reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    OR              reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    VARIABLE        reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    PUTS            reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    IF              reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    WHILE           reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    FOR             reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    END             reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    RETURN          reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)
    ELSE            reduce using rule 71 (primitivo -> NUMBER PUNTO NUMBER .)


state 91

    (26) estrucWhile -> WHILE logica cuerpo END .

    VARIABLE        reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    DEF             reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    IF              reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    WHILE           reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    FOR             reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    $end            reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    PUTS            reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    END             reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    RETURN          reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)
    ELSE            reduce using rule 26 (estrucWhile -> WHILE logica cuerpo END .)


state 92

    (47) sentenciafor -> FOR VARIABLE IN LPAREN . NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    NUMBER          shift and go to state 116


state 93

    (63) expresion -> NUMBER PLUS NUMBER .

    VARIABLE        reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    DEF             reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    IF              reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    WHILE           reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    FOR             reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    $end            reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    PUTS            reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    END             reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    RETURN          reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    ELSE            reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 63 (expresion -> NUMBER PLUS NUMBER .)


state 94

    (64) expresion -> NUMBER MINUS NUMBER .

    VARIABLE        reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    DEF             reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    IF              reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    WHILE           reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    FOR             reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    $end            reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    PUTS            reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    END             reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    RETURN          reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    ELSE            reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 64 (expresion -> NUMBER MINUS NUMBER .)


state 95

    (57) asignacion -> LLLAVE contenidohash RLLAVE .

    VARIABLE        reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    DEF             reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    IF              reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    WHILE           reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    FOR             reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    $end            reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    PUTS            reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    END             reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    RETURN          reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)
    ELSE            reduce using rule 57 (asignacion -> LLLAVE contenidohash RLLAVE .)


state 96

    (56) contenidohash -> elemento COMA . contenidohash
    (55) contenidohash -> . elemento
    (56) contenidohash -> . elemento COMA contenidohash
    (58) elemento -> . clave FHASH value
    (84) clave -> . STRING
    (85) clave -> . NUMBER
    (86) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 64
    NUMBER          shift and go to state 65

    elemento                       shift and go to state 62
    contenidohash                  shift and go to state 117
    clave                          shift and go to state 63

state 97

    (58) elemento -> clave FHASH . value
    (87) value -> . NUMBER
    (88) value -> . STRING
    (89) value -> . boolean
    (90) value -> . NUMBER PUNTO NUMBER
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE

    NUMBER          shift and go to state 119
    STRING          shift and go to state 120
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    value                          shift and go to state 118
    boolean                        shift and go to state 121

state 98

    (86) clave -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 122


state 99

    (66) termino -> termino TIMES factor .

    TIMES           reduce using rule 66 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 66 (termino -> termino TIMES factor .)
    VARIABLE        reduce using rule 66 (termino -> termino TIMES factor .)
    DEF             reduce using rule 66 (termino -> termino TIMES factor .)
    IF              reduce using rule 66 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 66 (termino -> termino TIMES factor .)
    FOR             reduce using rule 66 (termino -> termino TIMES factor .)
    $end            reduce using rule 66 (termino -> termino TIMES factor .)
    PUTS            reduce using rule 66 (termino -> termino TIMES factor .)
    END             reduce using rule 66 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 66 (termino -> termino TIMES factor .)
    ELSE            reduce using rule 66 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 66 (termino -> termino TIMES factor .)


state 100

    (69) factor -> NUMBER .

    TIMES           reduce using rule 69 (factor -> NUMBER .)
    DIVIDE          reduce using rule 69 (factor -> NUMBER .)
    VARIABLE        reduce using rule 69 (factor -> NUMBER .)
    DEF             reduce using rule 69 (factor -> NUMBER .)
    IF              reduce using rule 69 (factor -> NUMBER .)
    WHILE           reduce using rule 69 (factor -> NUMBER .)
    FOR             reduce using rule 69 (factor -> NUMBER .)
    $end            reduce using rule 69 (factor -> NUMBER .)
    PUTS            reduce using rule 69 (factor -> NUMBER .)
    END             reduce using rule 69 (factor -> NUMBER .)
    RETURN          reduce using rule 69 (factor -> NUMBER .)
    ELSE            reduce using rule 69 (factor -> NUMBER .)
    RPAREN          reduce using rule 69 (factor -> NUMBER .)


state 101

    (67) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 67 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 67 (termino -> termino DIVIDE factor .)
    VARIABLE        reduce using rule 67 (termino -> termino DIVIDE factor .)
    DEF             reduce using rule 67 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 67 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 67 (termino -> termino DIVIDE factor .)
    FOR             reduce using rule 67 (termino -> termino DIVIDE factor .)
    $end            reduce using rule 67 (termino -> termino DIVIDE factor .)
    PUTS            reduce using rule 67 (termino -> termino DIVIDE factor .)
    END             reduce using rule 67 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 67 (termino -> termino DIVIDE factor .)
    ELSE            reduce using rule 67 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 67 (termino -> termino DIVIDE factor .)


state 102

    (70) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    DEF             reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    $end            reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    PUTS            reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    END             reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 70 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 70 (factor -> LPAREN expresion RPAREN .)


state 103

    (41) declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .

    VARIABLE        reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    DEF             reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    IF              reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    WHILE           reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    FOR             reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    $end            reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    PUTS            reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    END             reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    RETURN          reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    ELSE            reduce using rule 41 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)


state 104

    (44) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN . cuerpo END
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    cuerpo                         shift and go to state 123
    declaracion                    shift and go to state 47
    imprimir                       shift and go to state 48
    estructurasControl             shift and go to state 49
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 105

    (46) params -> rubyParams COMA . params
    (45) params -> . rubyParams
    (46) params -> . rubyParams COMA params
    (50) rubyParams -> . VARIABLE
    (51) rubyParams -> . boolean
    (52) rubyParams -> . NUMBER
    (74) boolean -> . TRUE
    (75) boolean -> . FALSE

    VARIABLE        shift and go to state 73
    NUMBER          shift and go to state 77
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    rubyParams                     shift and go to state 75
    params                         shift and go to state 124
    boolean                        shift and go to state 76

state 106

    (33) cuerpo -> cuerpo RETURN retornos .

    END             reduce using rule 33 (cuerpo -> cuerpo RETURN retornos .)
    RETURN          reduce using rule 33 (cuerpo -> cuerpo RETURN retornos .)
    ELSE            reduce using rule 33 (cuerpo -> cuerpo RETURN retornos .)


state 107

    (34) retornos -> VARIABLE .

    END             reduce using rule 34 (retornos -> VARIABLE .)
    RETURN          reduce using rule 34 (retornos -> VARIABLE .)
    ELSE            reduce using rule 34 (retornos -> VARIABLE .)


state 108

    (35) retornos -> primitivo .

    END             reduce using rule 35 (retornos -> primitivo .)
    RETURN          reduce using rule 35 (retornos -> primitivo .)
    ELSE            reduce using rule 35 (retornos -> primitivo .)


state 109

    (36) retornos -> expresion .
    (61) asignacion -> expresion .

  ! reduce/reduce conflict for END resolved using rule 36 (retornos -> expresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 36 (retornos -> expresion .)
  ! reduce/reduce conflict for ELSE resolved using rule 36 (retornos -> expresion .)
    END             reduce using rule 36 (retornos -> expresion .)
    RETURN          reduce using rule 36 (retornos -> expresion .)
    ELSE            reduce using rule 36 (retornos -> expresion .)

  ! END             [ reduce using rule 61 (asignacion -> expresion .) ]
  ! RETURN          [ reduce using rule 61 (asignacion -> expresion .) ]
  ! ELSE            [ reduce using rule 61 (asignacion -> expresion .) ]


state 110

    (37) retornos -> asignacion .

    END             reduce using rule 37 (retornos -> asignacion .)
    RETURN          reduce using rule 37 (retornos -> asignacion .)
    ELSE            reduce using rule 37 (retornos -> asignacion .)


state 111

    (71) primitivo -> NUMBER . PUNTO NUMBER
    (72) primitivo -> NUMBER .
    (63) expresion -> NUMBER . PLUS NUMBER
    (64) expresion -> NUMBER . MINUS NUMBER
    (53) asignacion -> NUMBER .
    (69) factor -> NUMBER .

  ! reduce/reduce conflict for END resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 53 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 53 (asignacion -> NUMBER .)
    PUNTO           shift and go to state 55
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    END             reduce using rule 53 (asignacion -> NUMBER .)
    RETURN          reduce using rule 53 (asignacion -> NUMBER .)
    ELSE            reduce using rule 53 (asignacion -> NUMBER .)
    TIMES           reduce using rule 69 (factor -> NUMBER .)
    DIVIDE          reduce using rule 69 (factor -> NUMBER .)

  ! END             [ reduce using rule 72 (primitivo -> NUMBER .) ]
  ! RETURN          [ reduce using rule 72 (primitivo -> NUMBER .) ]
  ! ELSE            [ reduce using rule 72 (primitivo -> NUMBER .) ]
  ! END             [ reduce using rule 69 (factor -> NUMBER .) ]
  ! RETURN          [ reduce using rule 69 (factor -> NUMBER .) ]
  ! ELSE            [ reduce using rule 69 (factor -> NUMBER .) ]


state 112

    (73) primitivo -> boolean .
    (54) asignacion -> boolean .

  ! reduce/reduce conflict for END resolved using rule 54 (asignacion -> boolean .)
  ! reduce/reduce conflict for RETURN resolved using rule 54 (asignacion -> boolean .)
  ! reduce/reduce conflict for ELSE resolved using rule 54 (asignacion -> boolean .)
    END             reduce using rule 54 (asignacion -> boolean .)
    RETURN          reduce using rule 54 (asignacion -> boolean .)
    ELSE            reduce using rule 54 (asignacion -> boolean .)

  ! END             [ reduce using rule 73 (primitivo -> boolean .) ]
  ! RETURN          [ reduce using rule 73 (primitivo -> boolean .) ]
  ! ELSE            [ reduce using rule 73 (primitivo -> boolean .) ]


state 113

    (24) estrucElse -> ELSE cuerpo . END
    (33) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 125
    RETURN          shift and go to state 80


state 114

    (25) estrucElse -> ELSE logica . cuerpo END
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    cuerpo                         shift and go to state 126
    declaracion                    shift and go to state 47
    imprimir                       shift and go to state 48
    estructurasControl             shift and go to state 49
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 115

    (38) declaracion -> VARIABLE . IGUAL asignacion
    (39) declaracion -> VARIABLE . IGUAL asignacion declaracion
    (40) declaracion -> VARIABLE . operadorMat IGUAL opcion
    (41) declaracion -> VARIABLE . operadorMat IGUAL opcion declaracion
    (22) comparador -> VARIABLE .
    (10) operadorMat -> . IGUAL
    (11) operadorMat -> . PLUS
    (12) operadorMat -> . MINUS
    (13) operadorMat -> . TIMES

    IGUAL           shift and go to state 16
    COMPARACION     reduce using rule 22 (comparador -> VARIABLE .)
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    TIMES           shift and go to state 20

    operadorMat                    shift and go to state 17

state 116

    (47) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER . PUNTO PUNTO NUMBER RPAREN cuerpo END

    PUNTO           shift and go to state 127


state 117

    (56) contenidohash -> elemento COMA contenidohash .

    RLLAVE          reduce using rule 56 (contenidohash -> elemento COMA contenidohash .)


state 118

    (58) elemento -> clave FHASH value .

    COMA            reduce using rule 58 (elemento -> clave FHASH value .)
    RLLAVE          reduce using rule 58 (elemento -> clave FHASH value .)


state 119

    (87) value -> NUMBER .
    (90) value -> NUMBER . PUNTO NUMBER

    COMA            reduce using rule 87 (value -> NUMBER .)
    RLLAVE          reduce using rule 87 (value -> NUMBER .)
    PUNTO           shift and go to state 128


state 120

    (88) value -> STRING .

    COMA            reduce using rule 88 (value -> STRING .)
    RLLAVE          reduce using rule 88 (value -> STRING .)


state 121

    (89) value -> boolean .

    COMA            reduce using rule 89 (value -> boolean .)
    RLLAVE          reduce using rule 89 (value -> boolean .)


state 122

    (86) clave -> NUMBER PUNTO NUMBER .

    FHASH           reduce using rule 86 (clave -> NUMBER PUNTO NUMBER .)


state 123

    (44) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo . END
    (33) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 129
    RETURN          shift and go to state 80


state 124

    (46) params -> rubyParams COMA params .

    RPAREN          reduce using rule 46 (params -> rubyParams COMA params .)


state 125

    (24) estrucElse -> ELSE cuerpo END .

    VARIABLE        reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    DEF             reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    IF              reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    WHILE           reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    FOR             reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    $end            reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    PUTS            reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    END             reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    RETURN          reduce using rule 24 (estrucElse -> ELSE cuerpo END .)
    ELSE            reduce using rule 24 (estrucElse -> ELSE cuerpo END .)


state 126

    (25) estrucElse -> ELSE logica cuerpo . END
    (33) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 130
    RETURN          shift and go to state 80


state 127

    (47) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO . PUNTO NUMBER RPAREN cuerpo END

    PUNTO           shift and go to state 131


state 128

    (90) value -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 132


state 129

    (44) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .

    VARIABLE        reduce using rule 44 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    DEF             reduce using rule 44 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    IF              reduce using rule 44 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    WHILE           reduce using rule 44 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    FOR             reduce using rule 44 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    $end            reduce using rule 44 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)


state 130

    (25) estrucElse -> ELSE logica cuerpo END .

    VARIABLE        reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    DEF             reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    IF              reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    WHILE           reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    FOR             reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    $end            reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    PUTS            reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    END             reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    RETURN          reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)
    ELSE            reduce using rule 25 (estrucElse -> ELSE logica cuerpo END .)


state 131

    (47) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO . NUMBER RPAREN cuerpo END

    NUMBER          shift and go to state 133


state 132

    (90) value -> NUMBER PUNTO NUMBER .

    COMA            reduce using rule 90 (value -> NUMBER PUNTO NUMBER .)
    RLLAVE          reduce using rule 90 (value -> NUMBER PUNTO NUMBER .)


state 133

    (47) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER . RPAREN cuerpo END

    RPAREN          shift and go to state 134


state 134

    (47) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN . cuerpo END
    (27) cuerpo -> . declaracion
    (28) cuerpo -> . declaracion cuerpo
    (29) cuerpo -> . imprimir
    (30) cuerpo -> . imprimir cuerpo
    (31) cuerpo -> . estructurasControl
    (32) cuerpo -> . estructurasControl cuerpo
    (33) cuerpo -> . cuerpo RETURN retornos
    (38) declaracion -> . VARIABLE IGUAL asignacion
    (39) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (40) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (41) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) imprimir -> . PUTS STRING
    (49) imprimir -> . PUTS VARIABLE
    (7) estructurasControl -> . estrucIf
    (8) estructurasControl -> . estrucWhile
    (9) estructurasControl -> . sentenciafor
    (16) estrucIf -> . IF logica cuerpo END
    (17) estrucIf -> . IF logica cuerpo estrucElse
    (26) estrucWhile -> . WHILE logica cuerpo END
    (47) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 8
    PUTS            shift and go to state 50
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12

    cuerpo                         shift and go to state 135
    declaracion                    shift and go to state 47
    imprimir                       shift and go to state 48
    estructurasControl             shift and go to state 49
    estrucIf                       shift and go to state 5
    estrucWhile                    shift and go to state 6
    sentenciafor                   shift and go to state 7

state 135

    (47) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo . END
    (33) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 136
    RETURN          shift and go to state 80


state 136

    (47) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .

    VARIABLE        reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    DEF             reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    IF              reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    WHILE           reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    FOR             reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    $end            reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    PUTS            reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    END             reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    RETURN          reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    ELSE            reduce using rule 47 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 33 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 71 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 82 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 83 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 84 resolved as shift
WARNING: reduce/reduce conflict in state 34 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 34
WARNING: reduce/reduce conflict in state 109 resolved using rule (retornos -> expresion)
WARNING: rejected rule (asignacion -> expresion) in state 109
WARNING: reduce/reduce conflict in state 111 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (primitivo -> NUMBER) in state 111
WARNING: reduce/reduce conflict in state 111 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 111
WARNING: reduce/reduce conflict in state 112 resolved using rule (asignacion -> boolean)
WARNING: rejected rule (primitivo -> boolean) in state 112
