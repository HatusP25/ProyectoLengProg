Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    ARROBA
    BEGIN
    BOOLEANO
    BREAK
    CASE
    CLASS
    COMILLASDOBLE
    COMILLASIMPLE
    DARROBA
    DO
    DOLAR
    ELSIF
    ENSURE
    GUIONBAJO
    ID
    LBRACKET
    MODULE
    NEXT
    NIL
    NOT
    RBRACKET
    REDO
    RESCUE
    RETRY
    SELF
    SUPER
    THEN
    UNDEF
    UNLES
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> estructurasControl
Rule 2     sentencias -> declaracion
Rule 3     sentencias -> estructurasControl sentencias
Rule 4     sentencias -> declaracion sentencias
Rule 5     sentencias -> declaracion_funcion
Rule 6     sentencias -> declaracion_funcion sentencias
Rule 7     sentencias -> funcioneshash
Rule 8     estructurasControl -> estrucIf
Rule 9     estructurasControl -> estrucWhile
Rule 10    estructurasControl -> sentenciafor
Rule 11    operadorMat -> IGUAL
Rule 12    operadorMat -> PLUS
Rule 13    operadorMat -> MINUS
Rule 14    operadorMat -> TIMES
Rule 15    operadorLog -> AND
Rule 16    operadorLog -> OR
Rule 17    estrucIf -> IF logica cuerpo END
Rule 18    estrucIf -> IF logica cuerpo estrucElse
Rule 19    logica -> condicion
Rule 20    logica -> condicion operadorLog logica
Rule 21    condicion -> comparador COMPARACION comparador
Rule 22    condicion -> boolean
Rule 23    comparador -> VARIABLE
Rule 24    comparador -> primitivo
Rule 25    estrucElse -> ELSE cuerpo END
Rule 26    estrucElse -> ELSE logica cuerpo END
Rule 27    estrucWhile -> WHILE logica cuerpo END
Rule 28    cuerpo -> declaracion
Rule 29    cuerpo -> declaracion cuerpo
Rule 30    cuerpo -> imprimir
Rule 31    cuerpo -> imprimir cuerpo
Rule 32    cuerpo -> estructurasControl
Rule 33    cuerpo -> estructurasControl cuerpo
Rule 34    cuerpo -> cuerpo RETURN retornos
Rule 35    retornos -> VARIABLE
Rule 36    retornos -> primitivo
Rule 37    retornos -> expresion
Rule 38    retornos -> asignacion
Rule 39    declaracion -> VARIABLE IGUAL asignacion
Rule 40    declaracion -> VARIABLE IGUAL asignacion declaracion
Rule 41    declaracion -> VARIABLE IGUAL hashf
Rule 42    declaracion -> VARIABLE IGUAL hashf declaracion
Rule 43    declaracion -> VARIABLE operadorMat IGUAL opcion
Rule 44    declaracion -> VARIABLE operadorMat IGUAL opcion declaracion
Rule 45    opcion -> VARIABLE
Rule 46    opcion -> NUMBER
Rule 47    declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END
Rule 48    params -> rubyParams
Rule 49    params -> rubyParams COMA params
Rule 50    sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
Rule 51    imprimir -> PUTS STRING
Rule 52    imprimir -> PUTS VARIABLE
Rule 53    rubyParams -> VARIABLE
Rule 54    rubyParams -> boolean
Rule 55    rubyParams -> NUMBER
Rule 56    asignacion -> NUMBER
Rule 57    asignacion -> boolean
Rule 58    contenidohash -> elemento
Rule 59    contenidohash -> elemento COMA contenidohash
Rule 60    hashf -> LLLAVE contenidohash RLLAVE
Rule 61    elemento -> clave FHASH value
Rule 62    asignacion -> ARREGLO
Rule 63    asignacion -> FICHERO
Rule 64    asignacion -> expresion
Rule 65    asignacion -> STRING
Rule 66    expresion -> NUMBER PLUS NUMBER
Rule 67    expresion -> NUMBER MINUS NUMBER
Rule 68    expresion -> termino
Rule 69    termino -> termino TIMES factor
Rule 70    termino -> termino DIVIDE factor
Rule 71    termino -> factor
Rule 72    factor -> NUMBER
Rule 73    factor -> LPAREN expresion RPAREN
Rule 74    primitivo -> NUMBER PUNTO NUMBER
Rule 75    primitivo -> NUMBER
Rule 76    primitivo -> boolean
Rule 77    boolean -> TRUE
Rule 78    boolean -> FALSE
Rule 79    funcioneshash -> hlength
Rule 80    funcioneshash -> haskey
Rule 81    funcioneshash -> hkeys
Rule 82    funcioneshash -> hvalues
Rule 83    hlength -> hashf PUNTO LENGTH LPAREN RPAREN
Rule 84    haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN
Rule 85    hkeys -> hashf PUNTO KEY
Rule 86    hvalues -> hashf PUNTO VALUES
Rule 87    clave -> STRING
Rule 88    clave -> VARIABLE
Rule 89    clave -> NUMBER
Rule 90    clave -> NUMBER PUNTO NUMBER
Rule 91    value -> NUMBER
Rule 92    value -> VARIABLE
Rule 93    value -> STRING
Rule 94    value -> boolean
Rule 95    value -> NUMBER PUNTO NUMBER

Terminals, with rules where they appear

ALIAS                : 
AND                  : 15
ARREGLO              : 62
ARROBA               : 
BEGIN                : 
BOOLEANO             : 
BREAK                : 
CASE                 : 
CLASS                : 
COMA                 : 49 59
COMILLASDOBLE        : 
COMILLASIMPLE        : 
COMPARACION          : 21
DARROBA              : 
DEF                  : 47
DIVIDE               : 70
DO                   : 
DOLAR                : 
ELSE                 : 25 26
ELSIF                : 
END                  : 17 25 26 27 47 50
ENSURE               : 
FALSE                : 78
FHASH                : 61
FICHERO              : 63
FOR                  : 50
GUIONBAJO            : 
HASKEY               : 84
ID                   : 
IF                   : 17 18
IGUAL                : 11 39 40 41 42 43 44
IN                   : 50
INTERROGACION        : 84
KEY                  : 85
LBRACKET             : 
LENGTH               : 83
LLLAVE               : 60
LPAREN               : 47 50 73 83 84
MINUS                : 13 67
MODULE               : 
NEXT                 : 
NIL                  : 
NOT                  : 
NUMBER               : 46 50 50 55 56 66 66 67 67 72 74 74 75 89 90 90 91 95 95
OR                   : 16
PLUS                 : 12 66
PUNTO                : 50 50 74 83 85 86 90 95
PUTS                 : 51 52
RBRACKET             : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 34
RLLAVE               : 60
RPAREN               : 47 50 73 83 84
SELF                 : 
STRING               : 51 65 87 93
SUPER                : 
THEN                 : 
TIMES                : 14 69
TRUE                 : 77
UNDEF                : 
UNLES                : 
UNTIL                : 
VALUES               : 86
VARIABLE             : 23 35 39 40 41 42 43 44 45 47 50 52 53 88 92
WHEN                 : 
WHILE                : 27
YIELD                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 38 39 40
boolean              : 22 54 57 76 94
clave                : 61 84
comparador           : 21 21
condicion            : 19 20
contenidohash        : 59 60
cuerpo               : 17 18 25 26 27 29 31 33 34 47 50
declaracion          : 2 4 28 29 40 42 44
declaracion_funcion  : 5 6
elemento             : 58 59
estrucElse           : 18
estrucIf             : 8
estrucWhile          : 9
estructurasControl   : 1 3 32 33
expresion            : 37 64 73
factor               : 69 70 71
funcioneshash        : 7
hashf                : 41 42 83 84 85 86
haskey               : 80
hkeys                : 81
hlength              : 79
hvalues              : 82
imprimir             : 30 31
logica               : 17 18 20 26 27
opcion               : 43 44
operadorLog          : 20
operadorMat          : 43 44
params               : 47 49
primitivo            : 24 36
retornos             : 34
rubyParams           : 48 49
sentenciafor         : 10
sentencias           : 3 4 6 0
termino              : 68 69 70
value                : 61

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (47) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (79) funcioneshash -> . hlength
    (80) funcioneshash -> . haskey
    (81) funcioneshash -> . hkeys
    (82) funcioneshash -> . hvalues
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (83) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (84) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (85) hkeys -> . hashf PUNTO KEY
    (86) hvalues -> . hashf PUNTO VALUES
    (60) hashf -> . LLLAVE contenidohash RLLAVE

    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    sentencias                     shift and go to state 1
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    declaracion_funcion            shift and go to state 4
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> estructurasControl .
    (3) sentencias -> estructurasControl . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (47) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (79) funcioneshash -> . hlength
    (80) funcioneshash -> . haskey
    (81) funcioneshash -> . hkeys
    (82) funcioneshash -> . hvalues
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (83) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (84) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (85) hkeys -> . hashf PUNTO KEY
    (86) hvalues -> . hashf PUNTO VALUES
    (60) hashf -> . LLLAVE contenidohash RLLAVE

    $end            reduce using rule 1 (sentencias -> estructurasControl .)
    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    estructurasControl             shift and go to state 2
    sentencias                     shift and go to state 20
    declaracion                    shift and go to state 3
    declaracion_funcion            shift and go to state 4
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 3

    (2) sentencias -> declaracion .
    (4) sentencias -> declaracion . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (47) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (79) funcioneshash -> . hlength
    (80) funcioneshash -> . haskey
    (81) funcioneshash -> . hkeys
    (82) funcioneshash -> . hvalues
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (83) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (84) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (85) hkeys -> . hashf PUNTO KEY
    (86) hvalues -> . hashf PUNTO VALUES
    (60) hashf -> . LLLAVE contenidohash RLLAVE

    $end            reduce using rule 2 (sentencias -> declaracion .)
    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    declaracion                    shift and go to state 3
    sentencias                     shift and go to state 21
    estructurasControl             shift and go to state 2
    declaracion_funcion            shift and go to state 4
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 4

    (5) sentencias -> declaracion_funcion .
    (6) sentencias -> declaracion_funcion . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (47) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (79) funcioneshash -> . hlength
    (80) funcioneshash -> . haskey
    (81) funcioneshash -> . hkeys
    (82) funcioneshash -> . hvalues
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (83) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (84) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (85) hkeys -> . hashf PUNTO KEY
    (86) hvalues -> . hashf PUNTO VALUES
    (60) hashf -> . LLLAVE contenidohash RLLAVE

    $end            reduce using rule 5 (sentencias -> declaracion_funcion .)
    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    declaracion_funcion            shift and go to state 4
    sentencias                     shift and go to state 22
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 5

    (7) sentencias -> funcioneshash .

    $end            reduce using rule 7 (sentencias -> funcioneshash .)


state 6

    (8) estructurasControl -> estrucIf .

    VARIABLE        reduce using rule 8 (estructurasControl -> estrucIf .)
    DEF             reduce using rule 8 (estructurasControl -> estrucIf .)
    IF              reduce using rule 8 (estructurasControl -> estrucIf .)
    WHILE           reduce using rule 8 (estructurasControl -> estrucIf .)
    FOR             reduce using rule 8 (estructurasControl -> estrucIf .)
    LLLAVE          reduce using rule 8 (estructurasControl -> estrucIf .)
    $end            reduce using rule 8 (estructurasControl -> estrucIf .)
    PUTS            reduce using rule 8 (estructurasControl -> estrucIf .)
    END             reduce using rule 8 (estructurasControl -> estrucIf .)
    RETURN          reduce using rule 8 (estructurasControl -> estrucIf .)
    ELSE            reduce using rule 8 (estructurasControl -> estrucIf .)


state 7

    (9) estructurasControl -> estrucWhile .

    VARIABLE        reduce using rule 9 (estructurasControl -> estrucWhile .)
    DEF             reduce using rule 9 (estructurasControl -> estrucWhile .)
    IF              reduce using rule 9 (estructurasControl -> estrucWhile .)
    WHILE           reduce using rule 9 (estructurasControl -> estrucWhile .)
    FOR             reduce using rule 9 (estructurasControl -> estrucWhile .)
    LLLAVE          reduce using rule 9 (estructurasControl -> estrucWhile .)
    $end            reduce using rule 9 (estructurasControl -> estrucWhile .)
    PUTS            reduce using rule 9 (estructurasControl -> estrucWhile .)
    END             reduce using rule 9 (estructurasControl -> estrucWhile .)
    RETURN          reduce using rule 9 (estructurasControl -> estrucWhile .)
    ELSE            reduce using rule 9 (estructurasControl -> estrucWhile .)


state 8

    (10) estructurasControl -> sentenciafor .

    VARIABLE        reduce using rule 10 (estructurasControl -> sentenciafor .)
    DEF             reduce using rule 10 (estructurasControl -> sentenciafor .)
    IF              reduce using rule 10 (estructurasControl -> sentenciafor .)
    WHILE           reduce using rule 10 (estructurasControl -> sentenciafor .)
    FOR             reduce using rule 10 (estructurasControl -> sentenciafor .)
    LLLAVE          reduce using rule 10 (estructurasControl -> sentenciafor .)
    $end            reduce using rule 10 (estructurasControl -> sentenciafor .)
    PUTS            reduce using rule 10 (estructurasControl -> sentenciafor .)
    END             reduce using rule 10 (estructurasControl -> sentenciafor .)
    RETURN          reduce using rule 10 (estructurasControl -> sentenciafor .)
    ELSE            reduce using rule 10 (estructurasControl -> sentenciafor .)


state 9

    (39) declaracion -> VARIABLE . IGUAL asignacion
    (40) declaracion -> VARIABLE . IGUAL asignacion declaracion
    (41) declaracion -> VARIABLE . IGUAL hashf
    (42) declaracion -> VARIABLE . IGUAL hashf declaracion
    (43) declaracion -> VARIABLE . operadorMat IGUAL opcion
    (44) declaracion -> VARIABLE . operadorMat IGUAL opcion declaracion
    (11) operadorMat -> . IGUAL
    (12) operadorMat -> . PLUS
    (13) operadorMat -> . MINUS
    (14) operadorMat -> . TIMES

    IGUAL           shift and go to state 23
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27

    operadorMat                    shift and go to state 24

state 10

    (83) hlength -> hashf . PUNTO LENGTH LPAREN RPAREN
    (84) haskey -> hashf . HASKEY INTERROGACION LPAREN clave RPAREN
    (85) hkeys -> hashf . PUNTO KEY
    (86) hvalues -> hashf . PUNTO VALUES

    PUNTO           shift and go to state 28
    HASKEY          shift and go to state 29


state 11

    (47) declaracion_funcion -> DEF . VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 30


state 12

    (79) funcioneshash -> hlength .

    $end            reduce using rule 79 (funcioneshash -> hlength .)


state 13

    (80) funcioneshash -> haskey .

    $end            reduce using rule 80 (funcioneshash -> haskey .)


state 14

    (81) funcioneshash -> hkeys .

    $end            reduce using rule 81 (funcioneshash -> hkeys .)


state 15

    (82) funcioneshash -> hvalues .

    $end            reduce using rule 82 (funcioneshash -> hvalues .)


state 16

    (17) estrucIf -> IF . logica cuerpo END
    (18) estrucIf -> IF . logica cuerpo estrucElse
    (19) logica -> . condicion
    (20) logica -> . condicion operadorLog logica
    (21) condicion -> . comparador COMPARACION comparador
    (22) condicion -> . boolean
    (23) comparador -> . VARIABLE
    (24) comparador -> . primitivo
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (74) primitivo -> . NUMBER PUNTO NUMBER
    (75) primitivo -> . NUMBER
    (76) primitivo -> . boolean

    VARIABLE        shift and go to state 35
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 39

    logica                         shift and go to state 31
    condicion                      shift and go to state 32
    comparador                     shift and go to state 33
    boolean                        shift and go to state 34
    primitivo                      shift and go to state 36

state 17

    (27) estrucWhile -> WHILE . logica cuerpo END
    (19) logica -> . condicion
    (20) logica -> . condicion operadorLog logica
    (21) condicion -> . comparador COMPARACION comparador
    (22) condicion -> . boolean
    (23) comparador -> . VARIABLE
    (24) comparador -> . primitivo
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (74) primitivo -> . NUMBER PUNTO NUMBER
    (75) primitivo -> . NUMBER
    (76) primitivo -> . boolean

    VARIABLE        shift and go to state 35
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 39

    logica                         shift and go to state 40
    condicion                      shift and go to state 32
    comparador                     shift and go to state 33
    boolean                        shift and go to state 34
    primitivo                      shift and go to state 36

state 18

    (50) sentenciafor -> FOR . VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 41


state 19

    (60) hashf -> LLLAVE . contenidohash RLLAVE
    (58) contenidohash -> . elemento
    (59) contenidohash -> . elemento COMA contenidohash
    (61) elemento -> . clave FHASH value
    (87) clave -> . STRING
    (88) clave -> . VARIABLE
    (89) clave -> . NUMBER
    (90) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 45
    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 47

    contenidohash                  shift and go to state 42
    elemento                       shift and go to state 43
    clave                          shift and go to state 44

state 20

    (3) sentencias -> estructurasControl sentencias .

    $end            reduce using rule 3 (sentencias -> estructurasControl sentencias .)


state 21

    (4) sentencias -> declaracion sentencias .

    $end            reduce using rule 4 (sentencias -> declaracion sentencias .)


state 22

    (6) sentencias -> declaracion_funcion sentencias .

    $end            reduce using rule 6 (sentencias -> declaracion_funcion sentencias .)


state 23

    (39) declaracion -> VARIABLE IGUAL . asignacion
    (40) declaracion -> VARIABLE IGUAL . asignacion declaracion
    (41) declaracion -> VARIABLE IGUAL . hashf
    (42) declaracion -> VARIABLE IGUAL . hashf declaracion
    (11) operadorMat -> IGUAL .
    (56) asignacion -> . NUMBER
    (57) asignacion -> . boolean
    (62) asignacion -> . ARREGLO
    (63) asignacion -> . FICHERO
    (64) asignacion -> . expresion
    (65) asignacion -> . STRING
    (60) hashf -> . LLLAVE contenidohash RLLAVE
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (66) expresion -> . NUMBER PLUS NUMBER
    (67) expresion -> . NUMBER MINUS NUMBER
    (68) expresion -> . termino
    (69) termino -> . termino TIMES factor
    (70) termino -> . termino DIVIDE factor
    (71) termino -> . factor
    (72) factor -> . NUMBER
    (73) factor -> . LPAREN expresion RPAREN

    IGUAL           reduce using rule 11 (operadorMat -> IGUAL .)
    NUMBER          shift and go to state 50
    ARREGLO         shift and go to state 52
    FICHERO         shift and go to state 53
    STRING          shift and go to state 55
    LLLAVE          shift and go to state 19
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAREN          shift and go to state 58

    asignacion                     shift and go to state 48
    hashf                          shift and go to state 49
    boolean                        shift and go to state 51
    expresion                      shift and go to state 54
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 24

    (43) declaracion -> VARIABLE operadorMat . IGUAL opcion
    (44) declaracion -> VARIABLE operadorMat . IGUAL opcion declaracion

    IGUAL           shift and go to state 59


state 25

    (12) operadorMat -> PLUS .

    IGUAL           reduce using rule 12 (operadorMat -> PLUS .)


state 26

    (13) operadorMat -> MINUS .

    IGUAL           reduce using rule 13 (operadorMat -> MINUS .)


state 27

    (14) operadorMat -> TIMES .

    IGUAL           reduce using rule 14 (operadorMat -> TIMES .)


state 28

    (83) hlength -> hashf PUNTO . LENGTH LPAREN RPAREN
    (85) hkeys -> hashf PUNTO . KEY
    (86) hvalues -> hashf PUNTO . VALUES

    LENGTH          shift and go to state 60
    KEY             shift and go to state 61
    VALUES          shift and go to state 62


state 29

    (84) haskey -> hashf HASKEY . INTERROGACION LPAREN clave RPAREN

    INTERROGACION   shift and go to state 63


state 30

    (47) declaracion_funcion -> DEF VARIABLE . LPAREN params RPAREN cuerpo END

    LPAREN          shift and go to state 64


state 31

    (17) estrucIf -> IF logica . cuerpo END
    (18) estrucIf -> IF logica . cuerpo estrucElse
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 65
    declaracion                    shift and go to state 66
    imprimir                       shift and go to state 67
    estructurasControl             shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 32

    (19) logica -> condicion .
    (20) logica -> condicion . operadorLog logica
    (15) operadorLog -> . AND
    (16) operadorLog -> . OR

    VARIABLE        reduce using rule 19 (logica -> condicion .)
    PUTS            reduce using rule 19 (logica -> condicion .)
    IF              reduce using rule 19 (logica -> condicion .)
    WHILE           reduce using rule 19 (logica -> condicion .)
    FOR             reduce using rule 19 (logica -> condicion .)
    AND             shift and go to state 71
    OR              shift and go to state 72

    operadorLog                    shift and go to state 70

state 33

    (21) condicion -> comparador . COMPARACION comparador

    COMPARACION     shift and go to state 73


state 34

    (22) condicion -> boolean .
    (76) primitivo -> boolean .

    AND             reduce using rule 22 (condicion -> boolean .)
    OR              reduce using rule 22 (condicion -> boolean .)
    VARIABLE        reduce using rule 22 (condicion -> boolean .)
    PUTS            reduce using rule 22 (condicion -> boolean .)
    IF              reduce using rule 22 (condicion -> boolean .)
    WHILE           reduce using rule 22 (condicion -> boolean .)
    FOR             reduce using rule 22 (condicion -> boolean .)
    COMPARACION     reduce using rule 76 (primitivo -> boolean .)


state 35

    (23) comparador -> VARIABLE .

    COMPARACION     reduce using rule 23 (comparador -> VARIABLE .)
    AND             reduce using rule 23 (comparador -> VARIABLE .)
    OR              reduce using rule 23 (comparador -> VARIABLE .)
    VARIABLE        reduce using rule 23 (comparador -> VARIABLE .)
    PUTS            reduce using rule 23 (comparador -> VARIABLE .)
    IF              reduce using rule 23 (comparador -> VARIABLE .)
    WHILE           reduce using rule 23 (comparador -> VARIABLE .)
    FOR             reduce using rule 23 (comparador -> VARIABLE .)


state 36

    (24) comparador -> primitivo .

    COMPARACION     reduce using rule 24 (comparador -> primitivo .)
    AND             reduce using rule 24 (comparador -> primitivo .)
    OR              reduce using rule 24 (comparador -> primitivo .)
    VARIABLE        reduce using rule 24 (comparador -> primitivo .)
    PUTS            reduce using rule 24 (comparador -> primitivo .)
    IF              reduce using rule 24 (comparador -> primitivo .)
    WHILE           reduce using rule 24 (comparador -> primitivo .)
    FOR             reduce using rule 24 (comparador -> primitivo .)


state 37

    (77) boolean -> TRUE .

    AND             reduce using rule 77 (boolean -> TRUE .)
    OR              reduce using rule 77 (boolean -> TRUE .)
    VARIABLE        reduce using rule 77 (boolean -> TRUE .)
    PUTS            reduce using rule 77 (boolean -> TRUE .)
    IF              reduce using rule 77 (boolean -> TRUE .)
    WHILE           reduce using rule 77 (boolean -> TRUE .)
    FOR             reduce using rule 77 (boolean -> TRUE .)
    COMPARACION     reduce using rule 77 (boolean -> TRUE .)
    DEF             reduce using rule 77 (boolean -> TRUE .)
    LLLAVE          reduce using rule 77 (boolean -> TRUE .)
    $end            reduce using rule 77 (boolean -> TRUE .)
    END             reduce using rule 77 (boolean -> TRUE .)
    RETURN          reduce using rule 77 (boolean -> TRUE .)
    ELSE            reduce using rule 77 (boolean -> TRUE .)
    COMA            reduce using rule 77 (boolean -> TRUE .)
    RPAREN          reduce using rule 77 (boolean -> TRUE .)
    RLLAVE          reduce using rule 77 (boolean -> TRUE .)


state 38

    (78) boolean -> FALSE .

    AND             reduce using rule 78 (boolean -> FALSE .)
    OR              reduce using rule 78 (boolean -> FALSE .)
    VARIABLE        reduce using rule 78 (boolean -> FALSE .)
    PUTS            reduce using rule 78 (boolean -> FALSE .)
    IF              reduce using rule 78 (boolean -> FALSE .)
    WHILE           reduce using rule 78 (boolean -> FALSE .)
    FOR             reduce using rule 78 (boolean -> FALSE .)
    COMPARACION     reduce using rule 78 (boolean -> FALSE .)
    DEF             reduce using rule 78 (boolean -> FALSE .)
    LLLAVE          reduce using rule 78 (boolean -> FALSE .)
    $end            reduce using rule 78 (boolean -> FALSE .)
    END             reduce using rule 78 (boolean -> FALSE .)
    RETURN          reduce using rule 78 (boolean -> FALSE .)
    ELSE            reduce using rule 78 (boolean -> FALSE .)
    COMA            reduce using rule 78 (boolean -> FALSE .)
    RPAREN          reduce using rule 78 (boolean -> FALSE .)
    RLLAVE          reduce using rule 78 (boolean -> FALSE .)


state 39

    (74) primitivo -> NUMBER . PUNTO NUMBER
    (75) primitivo -> NUMBER .

    PUNTO           shift and go to state 74
    COMPARACION     reduce using rule 75 (primitivo -> NUMBER .)
    AND             reduce using rule 75 (primitivo -> NUMBER .)
    OR              reduce using rule 75 (primitivo -> NUMBER .)
    VARIABLE        reduce using rule 75 (primitivo -> NUMBER .)
    PUTS            reduce using rule 75 (primitivo -> NUMBER .)
    IF              reduce using rule 75 (primitivo -> NUMBER .)
    WHILE           reduce using rule 75 (primitivo -> NUMBER .)
    FOR             reduce using rule 75 (primitivo -> NUMBER .)


state 40

    (27) estrucWhile -> WHILE logica . cuerpo END
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 75
    declaracion                    shift and go to state 66
    imprimir                       shift and go to state 67
    estructurasControl             shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 41

    (50) sentenciafor -> FOR VARIABLE . IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    IN              shift and go to state 76


state 42

    (60) hashf -> LLLAVE contenidohash . RLLAVE

    RLLAVE          shift and go to state 77


state 43

    (58) contenidohash -> elemento .
    (59) contenidohash -> elemento . COMA contenidohash

    RLLAVE          reduce using rule 58 (contenidohash -> elemento .)
    COMA            shift and go to state 78


state 44

    (61) elemento -> clave . FHASH value

    FHASH           shift and go to state 79


state 45

    (87) clave -> STRING .

    FHASH           reduce using rule 87 (clave -> STRING .)
    RPAREN          reduce using rule 87 (clave -> STRING .)


state 46

    (88) clave -> VARIABLE .

    FHASH           reduce using rule 88 (clave -> VARIABLE .)
    RPAREN          reduce using rule 88 (clave -> VARIABLE .)


state 47

    (89) clave -> NUMBER .
    (90) clave -> NUMBER . PUNTO NUMBER

    FHASH           reduce using rule 89 (clave -> NUMBER .)
    RPAREN          reduce using rule 89 (clave -> NUMBER .)
    PUNTO           shift and go to state 80


state 48

    (39) declaracion -> VARIABLE IGUAL asignacion .
    (40) declaracion -> VARIABLE IGUAL asignacion . declaracion
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    IF              reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    WHILE           reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    FOR             reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    LLLAVE          reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    $end            reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    PUTS            reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    END             reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    RETURN          reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    ELSE            reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .)
    VARIABLE        shift and go to state 9

  ! VARIABLE        [ reduce using rule 39 (declaracion -> VARIABLE IGUAL asignacion .) ]

    declaracion                    shift and go to state 81

state 49

    (41) declaracion -> VARIABLE IGUAL hashf .
    (42) declaracion -> VARIABLE IGUAL hashf . declaracion
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    IF              reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    WHILE           reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    FOR             reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    LLLAVE          reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    $end            reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    PUTS            reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    END             reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    RETURN          reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    ELSE            reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .)
    VARIABLE        shift and go to state 9

  ! VARIABLE        [ reduce using rule 41 (declaracion -> VARIABLE IGUAL hashf .) ]

    declaracion                    shift and go to state 82

state 50

    (56) asignacion -> NUMBER .
    (66) expresion -> NUMBER . PLUS NUMBER
    (67) expresion -> NUMBER . MINUS NUMBER
    (72) factor -> NUMBER .

  ! reduce/reduce conflict for VARIABLE resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for DEF resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for $end resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for PUTS resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (asignacion -> NUMBER .)
    VARIABLE        reduce using rule 56 (asignacion -> NUMBER .)
    DEF             reduce using rule 56 (asignacion -> NUMBER .)
    IF              reduce using rule 56 (asignacion -> NUMBER .)
    WHILE           reduce using rule 56 (asignacion -> NUMBER .)
    FOR             reduce using rule 56 (asignacion -> NUMBER .)
    LLLAVE          reduce using rule 56 (asignacion -> NUMBER .)
    $end            reduce using rule 56 (asignacion -> NUMBER .)
    PUTS            reduce using rule 56 (asignacion -> NUMBER .)
    END             reduce using rule 56 (asignacion -> NUMBER .)
    RETURN          reduce using rule 56 (asignacion -> NUMBER .)
    ELSE            reduce using rule 56 (asignacion -> NUMBER .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           reduce using rule 72 (factor -> NUMBER .)
    DIVIDE          reduce using rule 72 (factor -> NUMBER .)

  ! VARIABLE        [ reduce using rule 72 (factor -> NUMBER .) ]
  ! DEF             [ reduce using rule 72 (factor -> NUMBER .) ]
  ! IF              [ reduce using rule 72 (factor -> NUMBER .) ]
  ! WHILE           [ reduce using rule 72 (factor -> NUMBER .) ]
  ! FOR             [ reduce using rule 72 (factor -> NUMBER .) ]
  ! LLLAVE          [ reduce using rule 72 (factor -> NUMBER .) ]
  ! $end            [ reduce using rule 72 (factor -> NUMBER .) ]
  ! PUTS            [ reduce using rule 72 (factor -> NUMBER .) ]
  ! END             [ reduce using rule 72 (factor -> NUMBER .) ]
  ! RETURN          [ reduce using rule 72 (factor -> NUMBER .) ]
  ! ELSE            [ reduce using rule 72 (factor -> NUMBER .) ]


state 51

    (57) asignacion -> boolean .

    VARIABLE        reduce using rule 57 (asignacion -> boolean .)
    DEF             reduce using rule 57 (asignacion -> boolean .)
    IF              reduce using rule 57 (asignacion -> boolean .)
    WHILE           reduce using rule 57 (asignacion -> boolean .)
    FOR             reduce using rule 57 (asignacion -> boolean .)
    LLLAVE          reduce using rule 57 (asignacion -> boolean .)
    $end            reduce using rule 57 (asignacion -> boolean .)
    PUTS            reduce using rule 57 (asignacion -> boolean .)
    END             reduce using rule 57 (asignacion -> boolean .)
    RETURN          reduce using rule 57 (asignacion -> boolean .)
    ELSE            reduce using rule 57 (asignacion -> boolean .)


state 52

    (62) asignacion -> ARREGLO .

    VARIABLE        reduce using rule 62 (asignacion -> ARREGLO .)
    DEF             reduce using rule 62 (asignacion -> ARREGLO .)
    IF              reduce using rule 62 (asignacion -> ARREGLO .)
    WHILE           reduce using rule 62 (asignacion -> ARREGLO .)
    FOR             reduce using rule 62 (asignacion -> ARREGLO .)
    LLLAVE          reduce using rule 62 (asignacion -> ARREGLO .)
    $end            reduce using rule 62 (asignacion -> ARREGLO .)
    PUTS            reduce using rule 62 (asignacion -> ARREGLO .)
    END             reduce using rule 62 (asignacion -> ARREGLO .)
    RETURN          reduce using rule 62 (asignacion -> ARREGLO .)
    ELSE            reduce using rule 62 (asignacion -> ARREGLO .)


state 53

    (63) asignacion -> FICHERO .

    VARIABLE        reduce using rule 63 (asignacion -> FICHERO .)
    DEF             reduce using rule 63 (asignacion -> FICHERO .)
    IF              reduce using rule 63 (asignacion -> FICHERO .)
    WHILE           reduce using rule 63 (asignacion -> FICHERO .)
    FOR             reduce using rule 63 (asignacion -> FICHERO .)
    LLLAVE          reduce using rule 63 (asignacion -> FICHERO .)
    $end            reduce using rule 63 (asignacion -> FICHERO .)
    PUTS            reduce using rule 63 (asignacion -> FICHERO .)
    END             reduce using rule 63 (asignacion -> FICHERO .)
    RETURN          reduce using rule 63 (asignacion -> FICHERO .)
    ELSE            reduce using rule 63 (asignacion -> FICHERO .)


state 54

    (64) asignacion -> expresion .

    VARIABLE        reduce using rule 64 (asignacion -> expresion .)
    DEF             reduce using rule 64 (asignacion -> expresion .)
    IF              reduce using rule 64 (asignacion -> expresion .)
    WHILE           reduce using rule 64 (asignacion -> expresion .)
    FOR             reduce using rule 64 (asignacion -> expresion .)
    LLLAVE          reduce using rule 64 (asignacion -> expresion .)
    $end            reduce using rule 64 (asignacion -> expresion .)
    PUTS            reduce using rule 64 (asignacion -> expresion .)
    END             reduce using rule 64 (asignacion -> expresion .)
    RETURN          reduce using rule 64 (asignacion -> expresion .)
    ELSE            reduce using rule 64 (asignacion -> expresion .)


state 55

    (65) asignacion -> STRING .

    VARIABLE        reduce using rule 65 (asignacion -> STRING .)
    DEF             reduce using rule 65 (asignacion -> STRING .)
    IF              reduce using rule 65 (asignacion -> STRING .)
    WHILE           reduce using rule 65 (asignacion -> STRING .)
    FOR             reduce using rule 65 (asignacion -> STRING .)
    LLLAVE          reduce using rule 65 (asignacion -> STRING .)
    $end            reduce using rule 65 (asignacion -> STRING .)
    PUTS            reduce using rule 65 (asignacion -> STRING .)
    END             reduce using rule 65 (asignacion -> STRING .)
    RETURN          reduce using rule 65 (asignacion -> STRING .)
    ELSE            reduce using rule 65 (asignacion -> STRING .)


state 56

    (68) expresion -> termino .
    (69) termino -> termino . TIMES factor
    (70) termino -> termino . DIVIDE factor

    VARIABLE        reduce using rule 68 (expresion -> termino .)
    DEF             reduce using rule 68 (expresion -> termino .)
    IF              reduce using rule 68 (expresion -> termino .)
    WHILE           reduce using rule 68 (expresion -> termino .)
    FOR             reduce using rule 68 (expresion -> termino .)
    LLLAVE          reduce using rule 68 (expresion -> termino .)
    $end            reduce using rule 68 (expresion -> termino .)
    PUTS            reduce using rule 68 (expresion -> termino .)
    END             reduce using rule 68 (expresion -> termino .)
    RETURN          reduce using rule 68 (expresion -> termino .)
    ELSE            reduce using rule 68 (expresion -> termino .)
    RPAREN          reduce using rule 68 (expresion -> termino .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 57

    (71) termino -> factor .

    TIMES           reduce using rule 71 (termino -> factor .)
    DIVIDE          reduce using rule 71 (termino -> factor .)
    VARIABLE        reduce using rule 71 (termino -> factor .)
    DEF             reduce using rule 71 (termino -> factor .)
    IF              reduce using rule 71 (termino -> factor .)
    WHILE           reduce using rule 71 (termino -> factor .)
    FOR             reduce using rule 71 (termino -> factor .)
    LLLAVE          reduce using rule 71 (termino -> factor .)
    $end            reduce using rule 71 (termino -> factor .)
    PUTS            reduce using rule 71 (termino -> factor .)
    END             reduce using rule 71 (termino -> factor .)
    RETURN          reduce using rule 71 (termino -> factor .)
    ELSE            reduce using rule 71 (termino -> factor .)
    RPAREN          reduce using rule 71 (termino -> factor .)


state 58

    (73) factor -> LPAREN . expresion RPAREN
    (66) expresion -> . NUMBER PLUS NUMBER
    (67) expresion -> . NUMBER MINUS NUMBER
    (68) expresion -> . termino
    (69) termino -> . termino TIMES factor
    (70) termino -> . termino DIVIDE factor
    (71) termino -> . factor
    (72) factor -> . NUMBER
    (73) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 88
    LPAREN          shift and go to state 58

    expresion                      shift and go to state 87
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 59

    (43) declaracion -> VARIABLE operadorMat IGUAL . opcion
    (44) declaracion -> VARIABLE operadorMat IGUAL . opcion declaracion
    (45) opcion -> . VARIABLE
    (46) opcion -> . NUMBER

    VARIABLE        shift and go to state 89
    NUMBER          shift and go to state 91

    opcion                         shift and go to state 90

state 60

    (83) hlength -> hashf PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 92


state 61

    (85) hkeys -> hashf PUNTO KEY .

    $end            reduce using rule 85 (hkeys -> hashf PUNTO KEY .)


state 62

    (86) hvalues -> hashf PUNTO VALUES .

    $end            reduce using rule 86 (hvalues -> hashf PUNTO VALUES .)


state 63

    (84) haskey -> hashf HASKEY INTERROGACION . LPAREN clave RPAREN

    LPAREN          shift and go to state 93


state 64

    (47) declaracion_funcion -> DEF VARIABLE LPAREN . params RPAREN cuerpo END
    (48) params -> . rubyParams
    (49) params -> . rubyParams COMA params
    (53) rubyParams -> . VARIABLE
    (54) rubyParams -> . boolean
    (55) rubyParams -> . NUMBER
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    VARIABLE        shift and go to state 94
    NUMBER          shift and go to state 98
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    params                         shift and go to state 95
    rubyParams                     shift and go to state 96
    boolean                        shift and go to state 97

state 65

    (17) estrucIf -> IF logica cuerpo . END
    (18) estrucIf -> IF logica cuerpo . estrucElse
    (34) cuerpo -> cuerpo . RETURN retornos
    (25) estrucElse -> . ELSE cuerpo END
    (26) estrucElse -> . ELSE logica cuerpo END

    END             shift and go to state 99
    RETURN          shift and go to state 101
    ELSE            shift and go to state 102

    estrucElse                     shift and go to state 100

state 66

    (28) cuerpo -> declaracion .
    (29) cuerpo -> declaracion . cuerpo
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 28 (cuerpo -> declaracion .)
    RETURN          reduce using rule 28 (cuerpo -> declaracion .)
    ELSE            reduce using rule 28 (cuerpo -> declaracion .)
    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    declaracion                    shift and go to state 66
    cuerpo                         shift and go to state 103
    imprimir                       shift and go to state 67
    estructurasControl             shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 67

    (30) cuerpo -> imprimir .
    (31) cuerpo -> imprimir . cuerpo
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 30 (cuerpo -> imprimir .)
    RETURN          reduce using rule 30 (cuerpo -> imprimir .)
    ELSE            reduce using rule 30 (cuerpo -> imprimir .)
    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    imprimir                       shift and go to state 67
    cuerpo                         shift and go to state 104
    declaracion                    shift and go to state 66
    estructurasControl             shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 68

    (32) cuerpo -> estructurasControl .
    (33) cuerpo -> estructurasControl . cuerpo
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 32 (cuerpo -> estructurasControl .)
    RETURN          reduce using rule 32 (cuerpo -> estructurasControl .)
    ELSE            reduce using rule 32 (cuerpo -> estructurasControl .)
    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    estructurasControl             shift and go to state 68
    cuerpo                         shift and go to state 105
    declaracion                    shift and go to state 66
    imprimir                       shift and go to state 67
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 69

    (51) imprimir -> PUTS . STRING
    (52) imprimir -> PUTS . VARIABLE

    STRING          shift and go to state 106
    VARIABLE        shift and go to state 107


state 70

    (20) logica -> condicion operadorLog . logica
    (19) logica -> . condicion
    (20) logica -> . condicion operadorLog logica
    (21) condicion -> . comparador COMPARACION comparador
    (22) condicion -> . boolean
    (23) comparador -> . VARIABLE
    (24) comparador -> . primitivo
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (74) primitivo -> . NUMBER PUNTO NUMBER
    (75) primitivo -> . NUMBER
    (76) primitivo -> . boolean

    VARIABLE        shift and go to state 35
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 39

    condicion                      shift and go to state 32
    logica                         shift and go to state 108
    comparador                     shift and go to state 33
    boolean                        shift and go to state 34
    primitivo                      shift and go to state 36

state 71

    (15) operadorLog -> AND .

    VARIABLE        reduce using rule 15 (operadorLog -> AND .)
    TRUE            reduce using rule 15 (operadorLog -> AND .)
    FALSE           reduce using rule 15 (operadorLog -> AND .)
    NUMBER          reduce using rule 15 (operadorLog -> AND .)


state 72

    (16) operadorLog -> OR .

    VARIABLE        reduce using rule 16 (operadorLog -> OR .)
    TRUE            reduce using rule 16 (operadorLog -> OR .)
    FALSE           reduce using rule 16 (operadorLog -> OR .)
    NUMBER          reduce using rule 16 (operadorLog -> OR .)


state 73

    (21) condicion -> comparador COMPARACION . comparador
    (23) comparador -> . VARIABLE
    (24) comparador -> . primitivo
    (74) primitivo -> . NUMBER PUNTO NUMBER
    (75) primitivo -> . NUMBER
    (76) primitivo -> . boolean
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    VARIABLE        shift and go to state 35
    NUMBER          shift and go to state 39
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    comparador                     shift and go to state 109
    primitivo                      shift and go to state 36
    boolean                        shift and go to state 110

state 74

    (74) primitivo -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 111


state 75

    (27) estrucWhile -> WHILE logica cuerpo . END
    (34) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 112
    RETURN          shift and go to state 101


state 76

    (50) sentenciafor -> FOR VARIABLE IN . LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    LPAREN          shift and go to state 113


state 77

    (60) hashf -> LLLAVE contenidohash RLLAVE .

    PUNTO           reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    HASKEY          reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    VARIABLE        reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    DEF             reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    IF              reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    WHILE           reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    FOR             reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    LLLAVE          reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    $end            reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    PUTS            reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    END             reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    RETURN          reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)
    ELSE            reduce using rule 60 (hashf -> LLLAVE contenidohash RLLAVE .)


state 78

    (59) contenidohash -> elemento COMA . contenidohash
    (58) contenidohash -> . elemento
    (59) contenidohash -> . elemento COMA contenidohash
    (61) elemento -> . clave FHASH value
    (87) clave -> . STRING
    (88) clave -> . VARIABLE
    (89) clave -> . NUMBER
    (90) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 45
    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 47

    elemento                       shift and go to state 43
    contenidohash                  shift and go to state 114
    clave                          shift and go to state 44

state 79

    (61) elemento -> clave FHASH . value
    (91) value -> . NUMBER
    (92) value -> . VARIABLE
    (93) value -> . STRING
    (94) value -> . boolean
    (95) value -> . NUMBER PUNTO NUMBER
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    NUMBER          shift and go to state 116
    VARIABLE        shift and go to state 117
    STRING          shift and go to state 118
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    value                          shift and go to state 115
    boolean                        shift and go to state 119

state 80

    (90) clave -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 120


state 81

    (40) declaracion -> VARIABLE IGUAL asignacion declaracion .

    VARIABLE        reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    DEF             reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    IF              reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    WHILE           reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    FOR             reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    LLLAVE          reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    $end            reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    PUTS            reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    END             reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    RETURN          reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    ELSE            reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion declaracion .)


state 82

    (42) declaracion -> VARIABLE IGUAL hashf declaracion .

    VARIABLE        reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    DEF             reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    IF              reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    WHILE           reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    FOR             reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    LLLAVE          reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    $end            reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    PUTS            reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    END             reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    RETURN          reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    ELSE            reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf declaracion .)


state 83

    (66) expresion -> NUMBER PLUS . NUMBER

    NUMBER          shift and go to state 121


state 84

    (67) expresion -> NUMBER MINUS . NUMBER

    NUMBER          shift and go to state 122


state 85

    (69) termino -> termino TIMES . factor
    (72) factor -> . NUMBER
    (73) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 124
    LPAREN          shift and go to state 58

    factor                         shift and go to state 123

state 86

    (70) termino -> termino DIVIDE . factor
    (72) factor -> . NUMBER
    (73) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 124
    LPAREN          shift and go to state 58

    factor                         shift and go to state 125

state 87

    (73) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 126


state 88

    (66) expresion -> NUMBER . PLUS NUMBER
    (67) expresion -> NUMBER . MINUS NUMBER
    (72) factor -> NUMBER .

    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    TIMES           reduce using rule 72 (factor -> NUMBER .)
    DIVIDE          reduce using rule 72 (factor -> NUMBER .)
    RPAREN          reduce using rule 72 (factor -> NUMBER .)


state 89

    (45) opcion -> VARIABLE .

    VARIABLE        reduce using rule 45 (opcion -> VARIABLE .)
    DEF             reduce using rule 45 (opcion -> VARIABLE .)
    IF              reduce using rule 45 (opcion -> VARIABLE .)
    WHILE           reduce using rule 45 (opcion -> VARIABLE .)
    FOR             reduce using rule 45 (opcion -> VARIABLE .)
    LLLAVE          reduce using rule 45 (opcion -> VARIABLE .)
    $end            reduce using rule 45 (opcion -> VARIABLE .)
    PUTS            reduce using rule 45 (opcion -> VARIABLE .)
    END             reduce using rule 45 (opcion -> VARIABLE .)
    RETURN          reduce using rule 45 (opcion -> VARIABLE .)
    ELSE            reduce using rule 45 (opcion -> VARIABLE .)


state 90

    (43) declaracion -> VARIABLE operadorMat IGUAL opcion .
    (44) declaracion -> VARIABLE operadorMat IGUAL opcion . declaracion
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    IF              reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    WHILE           reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    FOR             reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    LLLAVE          reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    $end            reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    PUTS            reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    END             reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    RETURN          reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    ELSE            reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    VARIABLE        shift and go to state 9

  ! VARIABLE        [ reduce using rule 43 (declaracion -> VARIABLE operadorMat IGUAL opcion .) ]

    declaracion                    shift and go to state 127

state 91

    (46) opcion -> NUMBER .

    VARIABLE        reduce using rule 46 (opcion -> NUMBER .)
    DEF             reduce using rule 46 (opcion -> NUMBER .)
    IF              reduce using rule 46 (opcion -> NUMBER .)
    WHILE           reduce using rule 46 (opcion -> NUMBER .)
    FOR             reduce using rule 46 (opcion -> NUMBER .)
    LLLAVE          reduce using rule 46 (opcion -> NUMBER .)
    $end            reduce using rule 46 (opcion -> NUMBER .)
    PUTS            reduce using rule 46 (opcion -> NUMBER .)
    END             reduce using rule 46 (opcion -> NUMBER .)
    RETURN          reduce using rule 46 (opcion -> NUMBER .)
    ELSE            reduce using rule 46 (opcion -> NUMBER .)


state 92

    (83) hlength -> hashf PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 128


state 93

    (84) haskey -> hashf HASKEY INTERROGACION LPAREN . clave RPAREN
    (87) clave -> . STRING
    (88) clave -> . VARIABLE
    (89) clave -> . NUMBER
    (90) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 45
    VARIABLE        shift and go to state 46
    NUMBER          shift and go to state 47

    clave                          shift and go to state 129

state 94

    (53) rubyParams -> VARIABLE .

    COMA            reduce using rule 53 (rubyParams -> VARIABLE .)
    RPAREN          reduce using rule 53 (rubyParams -> VARIABLE .)


state 95

    (47) declaracion_funcion -> DEF VARIABLE LPAREN params . RPAREN cuerpo END

    RPAREN          shift and go to state 130


state 96

    (48) params -> rubyParams .
    (49) params -> rubyParams . COMA params

    RPAREN          reduce using rule 48 (params -> rubyParams .)
    COMA            shift and go to state 131


state 97

    (54) rubyParams -> boolean .

    COMA            reduce using rule 54 (rubyParams -> boolean .)
    RPAREN          reduce using rule 54 (rubyParams -> boolean .)


state 98

    (55) rubyParams -> NUMBER .

    COMA            reduce using rule 55 (rubyParams -> NUMBER .)
    RPAREN          reduce using rule 55 (rubyParams -> NUMBER .)


state 99

    (17) estrucIf -> IF logica cuerpo END .

    VARIABLE        reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    DEF             reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    IF              reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    WHILE           reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    FOR             reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    LLLAVE          reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    $end            reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    PUTS            reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    END             reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    RETURN          reduce using rule 17 (estrucIf -> IF logica cuerpo END .)
    ELSE            reduce using rule 17 (estrucIf -> IF logica cuerpo END .)


state 100

    (18) estrucIf -> IF logica cuerpo estrucElse .

    VARIABLE        reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    DEF             reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    IF              reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    WHILE           reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    FOR             reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    LLLAVE          reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    $end            reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    PUTS            reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    END             reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    RETURN          reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)
    ELSE            reduce using rule 18 (estrucIf -> IF logica cuerpo estrucElse .)


state 101

    (34) cuerpo -> cuerpo RETURN . retornos
    (35) retornos -> . VARIABLE
    (36) retornos -> . primitivo
    (37) retornos -> . expresion
    (38) retornos -> . asignacion
    (74) primitivo -> . NUMBER PUNTO NUMBER
    (75) primitivo -> . NUMBER
    (76) primitivo -> . boolean
    (66) expresion -> . NUMBER PLUS NUMBER
    (67) expresion -> . NUMBER MINUS NUMBER
    (68) expresion -> . termino
    (56) asignacion -> . NUMBER
    (57) asignacion -> . boolean
    (62) asignacion -> . ARREGLO
    (63) asignacion -> . FICHERO
    (64) asignacion -> . expresion
    (65) asignacion -> . STRING
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (69) termino -> . termino TIMES factor
    (70) termino -> . termino DIVIDE factor
    (71) termino -> . factor
    (72) factor -> . NUMBER
    (73) factor -> . LPAREN expresion RPAREN

    VARIABLE        shift and go to state 133
    NUMBER          shift and go to state 137
    ARREGLO         shift and go to state 52
    FICHERO         shift and go to state 53
    STRING          shift and go to state 55
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAREN          shift and go to state 58

    retornos                       shift and go to state 132
    primitivo                      shift and go to state 134
    expresion                      shift and go to state 135
    asignacion                     shift and go to state 136
    boolean                        shift and go to state 138
    termino                        shift and go to state 56
    factor                         shift and go to state 57

state 102

    (25) estrucElse -> ELSE . cuerpo END
    (26) estrucElse -> ELSE . logica cuerpo END
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (19) logica -> . condicion
    (20) logica -> . condicion operadorLog logica
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (21) condicion -> . comparador COMPARACION comparador
    (22) condicion -> . boolean
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (23) comparador -> . VARIABLE
    (24) comparador -> . primitivo
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE
    (74) primitivo -> . NUMBER PUNTO NUMBER
    (75) primitivo -> . NUMBER
    (76) primitivo -> . boolean

    VARIABLE        shift and go to state 141
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 39

    cuerpo                         shift and go to state 139
    logica                         shift and go to state 140
    declaracion                    shift and go to state 66
    imprimir                       shift and go to state 67
    estructurasControl             shift and go to state 68
    condicion                      shift and go to state 32
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    comparador                     shift and go to state 33
    boolean                        shift and go to state 34
    primitivo                      shift and go to state 36

state 103

    (29) cuerpo -> declaracion cuerpo .
    (34) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 29 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 29 (cuerpo -> declaracion cuerpo .)
    RETURN          shift and go to state 101

  ! RETURN          [ reduce using rule 29 (cuerpo -> declaracion cuerpo .) ]


state 104

    (31) cuerpo -> imprimir cuerpo .
    (34) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 31 (cuerpo -> imprimir cuerpo .)
    ELSE            reduce using rule 31 (cuerpo -> imprimir cuerpo .)
    RETURN          shift and go to state 101

  ! RETURN          [ reduce using rule 31 (cuerpo -> imprimir cuerpo .) ]


state 105

    (33) cuerpo -> estructurasControl cuerpo .
    (34) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 33 (cuerpo -> estructurasControl cuerpo .)
    ELSE            reduce using rule 33 (cuerpo -> estructurasControl cuerpo .)
    RETURN          shift and go to state 101

  ! RETURN          [ reduce using rule 33 (cuerpo -> estructurasControl cuerpo .) ]


state 106

    (51) imprimir -> PUTS STRING .

    VARIABLE        reduce using rule 51 (imprimir -> PUTS STRING .)
    PUTS            reduce using rule 51 (imprimir -> PUTS STRING .)
    IF              reduce using rule 51 (imprimir -> PUTS STRING .)
    WHILE           reduce using rule 51 (imprimir -> PUTS STRING .)
    FOR             reduce using rule 51 (imprimir -> PUTS STRING .)
    END             reduce using rule 51 (imprimir -> PUTS STRING .)
    RETURN          reduce using rule 51 (imprimir -> PUTS STRING .)
    ELSE            reduce using rule 51 (imprimir -> PUTS STRING .)


state 107

    (52) imprimir -> PUTS VARIABLE .

    VARIABLE        reduce using rule 52 (imprimir -> PUTS VARIABLE .)
    PUTS            reduce using rule 52 (imprimir -> PUTS VARIABLE .)
    IF              reduce using rule 52 (imprimir -> PUTS VARIABLE .)
    WHILE           reduce using rule 52 (imprimir -> PUTS VARIABLE .)
    FOR             reduce using rule 52 (imprimir -> PUTS VARIABLE .)
    END             reduce using rule 52 (imprimir -> PUTS VARIABLE .)
    RETURN          reduce using rule 52 (imprimir -> PUTS VARIABLE .)
    ELSE            reduce using rule 52 (imprimir -> PUTS VARIABLE .)


state 108

    (20) logica -> condicion operadorLog logica .

    VARIABLE        reduce using rule 20 (logica -> condicion operadorLog logica .)
    PUTS            reduce using rule 20 (logica -> condicion operadorLog logica .)
    IF              reduce using rule 20 (logica -> condicion operadorLog logica .)
    WHILE           reduce using rule 20 (logica -> condicion operadorLog logica .)
    FOR             reduce using rule 20 (logica -> condicion operadorLog logica .)


state 109

    (21) condicion -> comparador COMPARACION comparador .

    AND             reduce using rule 21 (condicion -> comparador COMPARACION comparador .)
    OR              reduce using rule 21 (condicion -> comparador COMPARACION comparador .)
    VARIABLE        reduce using rule 21 (condicion -> comparador COMPARACION comparador .)
    PUTS            reduce using rule 21 (condicion -> comparador COMPARACION comparador .)
    IF              reduce using rule 21 (condicion -> comparador COMPARACION comparador .)
    WHILE           reduce using rule 21 (condicion -> comparador COMPARACION comparador .)
    FOR             reduce using rule 21 (condicion -> comparador COMPARACION comparador .)


state 110

    (76) primitivo -> boolean .

    AND             reduce using rule 76 (primitivo -> boolean .)
    OR              reduce using rule 76 (primitivo -> boolean .)
    VARIABLE        reduce using rule 76 (primitivo -> boolean .)
    PUTS            reduce using rule 76 (primitivo -> boolean .)
    IF              reduce using rule 76 (primitivo -> boolean .)
    WHILE           reduce using rule 76 (primitivo -> boolean .)
    FOR             reduce using rule 76 (primitivo -> boolean .)


state 111

    (74) primitivo -> NUMBER PUNTO NUMBER .

    COMPARACION     reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    AND             reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    OR              reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    VARIABLE        reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    PUTS            reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    IF              reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    WHILE           reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    FOR             reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    END             reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    RETURN          reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)
    ELSE            reduce using rule 74 (primitivo -> NUMBER PUNTO NUMBER .)


state 112

    (27) estrucWhile -> WHILE logica cuerpo END .

    VARIABLE        reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    DEF             reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    IF              reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    WHILE           reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    FOR             reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    LLLAVE          reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    $end            reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    PUTS            reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    END             reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    RETURN          reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)
    ELSE            reduce using rule 27 (estrucWhile -> WHILE logica cuerpo END .)


state 113

    (50) sentenciafor -> FOR VARIABLE IN LPAREN . NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    NUMBER          shift and go to state 142


state 114

    (59) contenidohash -> elemento COMA contenidohash .

    RLLAVE          reduce using rule 59 (contenidohash -> elemento COMA contenidohash .)


state 115

    (61) elemento -> clave FHASH value .

    COMA            reduce using rule 61 (elemento -> clave FHASH value .)
    RLLAVE          reduce using rule 61 (elemento -> clave FHASH value .)


state 116

    (91) value -> NUMBER .
    (95) value -> NUMBER . PUNTO NUMBER

    COMA            reduce using rule 91 (value -> NUMBER .)
    RLLAVE          reduce using rule 91 (value -> NUMBER .)
    PUNTO           shift and go to state 143


state 117

    (92) value -> VARIABLE .

    COMA            reduce using rule 92 (value -> VARIABLE .)
    RLLAVE          reduce using rule 92 (value -> VARIABLE .)


state 118

    (93) value -> STRING .

    COMA            reduce using rule 93 (value -> STRING .)
    RLLAVE          reduce using rule 93 (value -> STRING .)


state 119

    (94) value -> boolean .

    COMA            reduce using rule 94 (value -> boolean .)
    RLLAVE          reduce using rule 94 (value -> boolean .)


state 120

    (90) clave -> NUMBER PUNTO NUMBER .

    FHASH           reduce using rule 90 (clave -> NUMBER PUNTO NUMBER .)
    RPAREN          reduce using rule 90 (clave -> NUMBER PUNTO NUMBER .)


state 121

    (66) expresion -> NUMBER PLUS NUMBER .

    VARIABLE        reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    DEF             reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    IF              reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    WHILE           reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    FOR             reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    LLLAVE          reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    $end            reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    PUTS            reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    END             reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    RETURN          reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    ELSE            reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 66 (expresion -> NUMBER PLUS NUMBER .)


state 122

    (67) expresion -> NUMBER MINUS NUMBER .

    VARIABLE        reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    DEF             reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    IF              reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    WHILE           reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    FOR             reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    LLLAVE          reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    $end            reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    PUTS            reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    END             reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    RETURN          reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    ELSE            reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 67 (expresion -> NUMBER MINUS NUMBER .)


state 123

    (69) termino -> termino TIMES factor .

    TIMES           reduce using rule 69 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 69 (termino -> termino TIMES factor .)
    VARIABLE        reduce using rule 69 (termino -> termino TIMES factor .)
    DEF             reduce using rule 69 (termino -> termino TIMES factor .)
    IF              reduce using rule 69 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 69 (termino -> termino TIMES factor .)
    FOR             reduce using rule 69 (termino -> termino TIMES factor .)
    LLLAVE          reduce using rule 69 (termino -> termino TIMES factor .)
    $end            reduce using rule 69 (termino -> termino TIMES factor .)
    PUTS            reduce using rule 69 (termino -> termino TIMES factor .)
    END             reduce using rule 69 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 69 (termino -> termino TIMES factor .)
    ELSE            reduce using rule 69 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 69 (termino -> termino TIMES factor .)


state 124

    (72) factor -> NUMBER .

    TIMES           reduce using rule 72 (factor -> NUMBER .)
    DIVIDE          reduce using rule 72 (factor -> NUMBER .)
    VARIABLE        reduce using rule 72 (factor -> NUMBER .)
    DEF             reduce using rule 72 (factor -> NUMBER .)
    IF              reduce using rule 72 (factor -> NUMBER .)
    WHILE           reduce using rule 72 (factor -> NUMBER .)
    FOR             reduce using rule 72 (factor -> NUMBER .)
    LLLAVE          reduce using rule 72 (factor -> NUMBER .)
    $end            reduce using rule 72 (factor -> NUMBER .)
    PUTS            reduce using rule 72 (factor -> NUMBER .)
    END             reduce using rule 72 (factor -> NUMBER .)
    RETURN          reduce using rule 72 (factor -> NUMBER .)
    ELSE            reduce using rule 72 (factor -> NUMBER .)
    RPAREN          reduce using rule 72 (factor -> NUMBER .)


state 125

    (70) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 70 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 70 (termino -> termino DIVIDE factor .)
    VARIABLE        reduce using rule 70 (termino -> termino DIVIDE factor .)
    DEF             reduce using rule 70 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 70 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 70 (termino -> termino DIVIDE factor .)
    FOR             reduce using rule 70 (termino -> termino DIVIDE factor .)
    LLLAVE          reduce using rule 70 (termino -> termino DIVIDE factor .)
    $end            reduce using rule 70 (termino -> termino DIVIDE factor .)
    PUTS            reduce using rule 70 (termino -> termino DIVIDE factor .)
    END             reduce using rule 70 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 70 (termino -> termino DIVIDE factor .)
    ELSE            reduce using rule 70 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 70 (termino -> termino DIVIDE factor .)


state 126

    (73) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    DEF             reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    LLLAVE          reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    $end            reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    PUTS            reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    END             reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 73 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 73 (factor -> LPAREN expresion RPAREN .)


state 127

    (44) declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .

    VARIABLE        reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    DEF             reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    IF              reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    WHILE           reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    FOR             reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    LLLAVE          reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    $end            reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    PUTS            reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    END             reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    RETURN          reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    ELSE            reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)


state 128

    (83) hlength -> hashf PUNTO LENGTH LPAREN RPAREN .

    $end            reduce using rule 83 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)


state 129

    (84) haskey -> hashf HASKEY INTERROGACION LPAREN clave . RPAREN

    RPAREN          shift and go to state 144


state 130

    (47) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN . cuerpo END
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 145
    declaracion                    shift and go to state 66
    imprimir                       shift and go to state 67
    estructurasControl             shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 131

    (49) params -> rubyParams COMA . params
    (48) params -> . rubyParams
    (49) params -> . rubyParams COMA params
    (53) rubyParams -> . VARIABLE
    (54) rubyParams -> . boolean
    (55) rubyParams -> . NUMBER
    (77) boolean -> . TRUE
    (78) boolean -> . FALSE

    VARIABLE        shift and go to state 94
    NUMBER          shift and go to state 98
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38

    rubyParams                     shift and go to state 96
    params                         shift and go to state 146
    boolean                        shift and go to state 97

state 132

    (34) cuerpo -> cuerpo RETURN retornos .

    END             reduce using rule 34 (cuerpo -> cuerpo RETURN retornos .)
    RETURN          reduce using rule 34 (cuerpo -> cuerpo RETURN retornos .)
    ELSE            reduce using rule 34 (cuerpo -> cuerpo RETURN retornos .)


state 133

    (35) retornos -> VARIABLE .

    END             reduce using rule 35 (retornos -> VARIABLE .)
    RETURN          reduce using rule 35 (retornos -> VARIABLE .)
    ELSE            reduce using rule 35 (retornos -> VARIABLE .)


state 134

    (36) retornos -> primitivo .

    END             reduce using rule 36 (retornos -> primitivo .)
    RETURN          reduce using rule 36 (retornos -> primitivo .)
    ELSE            reduce using rule 36 (retornos -> primitivo .)


state 135

    (37) retornos -> expresion .
    (64) asignacion -> expresion .

  ! reduce/reduce conflict for END resolved using rule 37 (retornos -> expresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 37 (retornos -> expresion .)
  ! reduce/reduce conflict for ELSE resolved using rule 37 (retornos -> expresion .)
    END             reduce using rule 37 (retornos -> expresion .)
    RETURN          reduce using rule 37 (retornos -> expresion .)
    ELSE            reduce using rule 37 (retornos -> expresion .)

  ! END             [ reduce using rule 64 (asignacion -> expresion .) ]
  ! RETURN          [ reduce using rule 64 (asignacion -> expresion .) ]
  ! ELSE            [ reduce using rule 64 (asignacion -> expresion .) ]


state 136

    (38) retornos -> asignacion .

    END             reduce using rule 38 (retornos -> asignacion .)
    RETURN          reduce using rule 38 (retornos -> asignacion .)
    ELSE            reduce using rule 38 (retornos -> asignacion .)


state 137

    (74) primitivo -> NUMBER . PUNTO NUMBER
    (75) primitivo -> NUMBER .
    (66) expresion -> NUMBER . PLUS NUMBER
    (67) expresion -> NUMBER . MINUS NUMBER
    (56) asignacion -> NUMBER .
    (72) factor -> NUMBER .

  ! reduce/reduce conflict for END resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 56 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 56 (asignacion -> NUMBER .)
    PUNTO           shift and go to state 74
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    END             reduce using rule 56 (asignacion -> NUMBER .)
    RETURN          reduce using rule 56 (asignacion -> NUMBER .)
    ELSE            reduce using rule 56 (asignacion -> NUMBER .)
    TIMES           reduce using rule 72 (factor -> NUMBER .)
    DIVIDE          reduce using rule 72 (factor -> NUMBER .)

  ! END             [ reduce using rule 75 (primitivo -> NUMBER .) ]
  ! RETURN          [ reduce using rule 75 (primitivo -> NUMBER .) ]
  ! ELSE            [ reduce using rule 75 (primitivo -> NUMBER .) ]
  ! END             [ reduce using rule 72 (factor -> NUMBER .) ]
  ! RETURN          [ reduce using rule 72 (factor -> NUMBER .) ]
  ! ELSE            [ reduce using rule 72 (factor -> NUMBER .) ]


state 138

    (76) primitivo -> boolean .
    (57) asignacion -> boolean .

  ! reduce/reduce conflict for END resolved using rule 57 (asignacion -> boolean .)
  ! reduce/reduce conflict for RETURN resolved using rule 57 (asignacion -> boolean .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (asignacion -> boolean .)
    END             reduce using rule 57 (asignacion -> boolean .)
    RETURN          reduce using rule 57 (asignacion -> boolean .)
    ELSE            reduce using rule 57 (asignacion -> boolean .)

  ! END             [ reduce using rule 76 (primitivo -> boolean .) ]
  ! RETURN          [ reduce using rule 76 (primitivo -> boolean .) ]
  ! ELSE            [ reduce using rule 76 (primitivo -> boolean .) ]


state 139

    (25) estrucElse -> ELSE cuerpo . END
    (34) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 147
    RETURN          shift and go to state 101


state 140

    (26) estrucElse -> ELSE logica . cuerpo END
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 148
    declaracion                    shift and go to state 66
    imprimir                       shift and go to state 67
    estructurasControl             shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 141

    (39) declaracion -> VARIABLE . IGUAL asignacion
    (40) declaracion -> VARIABLE . IGUAL asignacion declaracion
    (41) declaracion -> VARIABLE . IGUAL hashf
    (42) declaracion -> VARIABLE . IGUAL hashf declaracion
    (43) declaracion -> VARIABLE . operadorMat IGUAL opcion
    (44) declaracion -> VARIABLE . operadorMat IGUAL opcion declaracion
    (23) comparador -> VARIABLE .
    (11) operadorMat -> . IGUAL
    (12) operadorMat -> . PLUS
    (13) operadorMat -> . MINUS
    (14) operadorMat -> . TIMES

    IGUAL           shift and go to state 23
    COMPARACION     reduce using rule 23 (comparador -> VARIABLE .)
    PLUS            shift and go to state 25
    MINUS           shift and go to state 26
    TIMES           shift and go to state 27

    operadorMat                    shift and go to state 24

state 142

    (50) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER . PUNTO PUNTO NUMBER RPAREN cuerpo END

    PUNTO           shift and go to state 149


state 143

    (95) value -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 150


state 144

    (84) haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .

    $end            reduce using rule 84 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)


state 145

    (47) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo . END
    (34) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 151
    RETURN          shift and go to state 101


state 146

    (49) params -> rubyParams COMA params .

    RPAREN          reduce using rule 49 (params -> rubyParams COMA params .)


state 147

    (25) estrucElse -> ELSE cuerpo END .

    VARIABLE        reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    DEF             reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    IF              reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    WHILE           reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    FOR             reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    LLLAVE          reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    $end            reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    PUTS            reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    END             reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    RETURN          reduce using rule 25 (estrucElse -> ELSE cuerpo END .)
    ELSE            reduce using rule 25 (estrucElse -> ELSE cuerpo END .)


state 148

    (26) estrucElse -> ELSE logica cuerpo . END
    (34) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 152
    RETURN          shift and go to state 101


state 149

    (50) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO . PUNTO NUMBER RPAREN cuerpo END

    PUNTO           shift and go to state 153


state 150

    (95) value -> NUMBER PUNTO NUMBER .

    COMA            reduce using rule 95 (value -> NUMBER PUNTO NUMBER .)
    RLLAVE          reduce using rule 95 (value -> NUMBER PUNTO NUMBER .)


state 151

    (47) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .

    VARIABLE        reduce using rule 47 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    DEF             reduce using rule 47 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    IF              reduce using rule 47 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    WHILE           reduce using rule 47 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    FOR             reduce using rule 47 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    LLLAVE          reduce using rule 47 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    $end            reduce using rule 47 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)


state 152

    (26) estrucElse -> ELSE logica cuerpo END .

    VARIABLE        reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    DEF             reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    IF              reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    WHILE           reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    FOR             reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    LLLAVE          reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    $end            reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    PUTS            reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    END             reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    RETURN          reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)
    ELSE            reduce using rule 26 (estrucElse -> ELSE logica cuerpo END .)


state 153

    (50) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO . NUMBER RPAREN cuerpo END

    NUMBER          shift and go to state 154


state 154

    (50) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER . RPAREN cuerpo END

    RPAREN          shift and go to state 155


state 155

    (50) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN . cuerpo END
    (28) cuerpo -> . declaracion
    (29) cuerpo -> . declaracion cuerpo
    (30) cuerpo -> . imprimir
    (31) cuerpo -> . imprimir cuerpo
    (32) cuerpo -> . estructurasControl
    (33) cuerpo -> . estructurasControl cuerpo
    (34) cuerpo -> . cuerpo RETURN retornos
    (39) declaracion -> . VARIABLE IGUAL asignacion
    (40) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (41) declaracion -> . VARIABLE IGUAL hashf
    (42) declaracion -> . VARIABLE IGUAL hashf declaracion
    (43) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (51) imprimir -> . PUTS STRING
    (52) imprimir -> . PUTS VARIABLE
    (8) estructurasControl -> . estrucIf
    (9) estructurasControl -> . estrucWhile
    (10) estructurasControl -> . sentenciafor
    (17) estrucIf -> . IF logica cuerpo END
    (18) estrucIf -> . IF logica cuerpo estrucElse
    (27) estrucWhile -> . WHILE logica cuerpo END
    (50) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 69
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 156
    declaracion                    shift and go to state 66
    imprimir                       shift and go to state 67
    estructurasControl             shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 156

    (50) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo . END
    (34) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 157
    RETURN          shift and go to state 101


state 157

    (50) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .

    VARIABLE        reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    DEF             reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    IF              reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    WHILE           reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    FOR             reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    LLLAVE          reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    $end            reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    PUTS            reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    END             reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    RETURN          reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    ELSE            reduce using rule 50 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 48 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 49 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 90 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 103 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 104 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 105 resolved as shift
WARNING: reduce/reduce conflict in state 50 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 50
WARNING: reduce/reduce conflict in state 135 resolved using rule (retornos -> expresion)
WARNING: rejected rule (asignacion -> expresion) in state 135
WARNING: reduce/reduce conflict in state 137 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (primitivo -> NUMBER) in state 137
WARNING: reduce/reduce conflict in state 137 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (asignacion -> boolean)
WARNING: rejected rule (primitivo -> boolean) in state 138
