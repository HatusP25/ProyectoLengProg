Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    ARROBA
    BEGIN
    BOOLEANO
    BREAK
    CASE
    CLASS
    COMILLASDOBLE
    COMILLASIMPLE
    DARROBA
    DO
    DOLAR
    ELSIF
    ENSURE
    GUIONBAJO
    ID
    LBRACKET
    MODULE
    NEXT
    NIL
    NOT
    RBRACKET
    REDO
    RESCUE
    RETRY
    SELF
    SUPER
    THEN
    UNDEF
    UNLES
    UNTIL
    WHEN
    YIELD

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> estructurasControl
Rule 2     sentencias -> declaracion
Rule 3     sentencias -> estructurasControl sentencias
Rule 4     sentencias -> declaracion sentencias
Rule 5     sentencias -> declaracion_funcion
Rule 6     sentencias -> declaracion_funcion sentencias
Rule 7     sentencias -> funcioneshash
Rule 8     sentencias -> funcioneshash sentencias
Rule 9     estructurasControl -> estrucIf
Rule 10    estructurasControl -> estrucWhile
Rule 11    estructurasControl -> sentenciafor
Rule 12    operadorMat -> IGUAL
Rule 13    operadorMat -> PLUS
Rule 14    operadorMat -> MINUS
Rule 15    operadorMat -> TIMES
Rule 16    operadorLog -> AND
Rule 17    operadorLog -> OR
Rule 18    estrucIf -> IF logica cuerpo END
Rule 19    estrucIf -> IF logica cuerpo estrucElse
Rule 20    logica -> condicion
Rule 21    logica -> condicion operadorLog logica
Rule 22    condicion -> comparador COMPARACION comparador
Rule 23    condicion -> boolean
Rule 24    comparador -> VARIABLE
Rule 25    comparador -> primitivo
Rule 26    estrucElse -> ELSE cuerpo END
Rule 27    estrucElse -> ELSE logica cuerpo END
Rule 28    estrucWhile -> WHILE logica cuerpo END
Rule 29    cuerpo -> declaracion
Rule 30    cuerpo -> declaracion cuerpo
Rule 31    cuerpo -> imprimir
Rule 32    cuerpo -> imprimir cuerpo
Rule 33    cuerpo -> estructurasControl
Rule 34    cuerpo -> estructurasControl cuerpo
Rule 35    cuerpo -> cuerpo RETURN retornos
Rule 36    retornos -> VARIABLE
Rule 37    retornos -> primitivo
Rule 38    retornos -> expresion
Rule 39    retornos -> asignacion
Rule 40    declaracion -> VARIABLE IGUAL asignacion
Rule 41    declaracion -> VARIABLE IGUAL asignacion declaracion
Rule 42    declaracion -> VARIABLE IGUAL hashf
Rule 43    declaracion -> VARIABLE IGUAL hashf declaracion
Rule 44    declaracion -> VARIABLE operadorMat IGUAL opcion
Rule 45    declaracion -> VARIABLE operadorMat IGUAL opcion declaracion
Rule 46    opcion -> VARIABLE
Rule 47    opcion -> NUMBER
Rule 48    declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END
Rule 49    params -> rubyParams
Rule 50    params -> rubyParams COMA params
Rule 51    sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
Rule 52    imprimir -> PUTS STRING
Rule 53    imprimir -> PUTS VARIABLE
Rule 54    rubyParams -> VARIABLE
Rule 55    rubyParams -> boolean
Rule 56    rubyParams -> NUMBER
Rule 57    asignacion -> NUMBER
Rule 58    asignacion -> boolean
Rule 59    contenidohash -> elemento
Rule 60    contenidohash -> elemento COMA contenidohash
Rule 61    hashf -> LLLAVE contenidohash RLLAVE
Rule 62    elemento -> clave FHASH value
Rule 63    asignacion -> ARREGLO
Rule 64    asignacion -> FICHERO
Rule 65    asignacion -> expresion
Rule 66    asignacion -> STRING
Rule 67    expresion -> NUMBER PLUS NUMBER
Rule 68    expresion -> NUMBER MINUS NUMBER
Rule 69    expresion -> termino
Rule 70    termino -> termino TIMES factor
Rule 71    termino -> termino DIVIDE factor
Rule 72    termino -> factor
Rule 73    factor -> NUMBER
Rule 74    factor -> LPAREN expresion RPAREN
Rule 75    primitivo -> NUMBER PUNTO NUMBER
Rule 76    primitivo -> NUMBER
Rule 77    primitivo -> boolean
Rule 78    boolean -> TRUE
Rule 79    boolean -> FALSE
Rule 80    funcioneshash -> hlength
Rule 81    funcioneshash -> haskey
Rule 82    funcioneshash -> hkeys
Rule 83    funcioneshash -> hvalues
Rule 84    hlength -> hashf PUNTO LENGTH LPAREN RPAREN
Rule 85    haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN
Rule 86    hkeys -> hashf PUNTO KEY
Rule 87    hvalues -> hashf PUNTO VALUES
Rule 88    clave -> STRING
Rule 89    clave -> VARIABLE
Rule 90    clave -> NUMBER
Rule 91    clave -> NUMBER PUNTO NUMBER
Rule 92    value -> NUMBER
Rule 93    value -> VARIABLE
Rule 94    value -> STRING
Rule 95    value -> boolean
Rule 96    value -> NUMBER PUNTO NUMBER

Terminals, with rules where they appear

ALIAS                : 
AND                  : 16
ARREGLO              : 63
ARROBA               : 
BEGIN                : 
BOOLEANO             : 
BREAK                : 
CASE                 : 
CLASS                : 
COMA                 : 50 60
COMILLASDOBLE        : 
COMILLASIMPLE        : 
COMPARACION          : 22
DARROBA              : 
DEF                  : 48
DIVIDE               : 71
DO                   : 
DOLAR                : 
ELSE                 : 26 27
ELSIF                : 
END                  : 18 26 27 28 48 51
ENSURE               : 
FALSE                : 79
FHASH                : 62
FICHERO              : 64
FOR                  : 51
GUIONBAJO            : 
HASKEY               : 85
ID                   : 
IF                   : 18 19
IGUAL                : 12 40 41 42 43 44 45
IN                   : 51
INTERROGACION        : 85
KEY                  : 86
LBRACKET             : 
LENGTH               : 84
LLLAVE               : 61
LPAREN               : 48 51 74 84 85
MINUS                : 14 68
MODULE               : 
NEXT                 : 
NIL                  : 
NOT                  : 
NUMBER               : 47 51 51 56 57 67 67 68 68 73 75 75 76 90 91 91 92 96 96
OR                   : 17
PLUS                 : 13 67
PUNTO                : 51 51 75 84 86 87 91 96
PUTS                 : 52 53
RBRACKET             : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 35
RLLAVE               : 61
RPAREN               : 48 51 74 84 85
SELF                 : 
STRING               : 52 66 88 94
SUPER                : 
THEN                 : 
TIMES                : 15 70
TRUE                 : 78
UNDEF                : 
UNLES                : 
UNTIL                : 
VALUES               : 87
VARIABLE             : 24 36 40 41 42 43 44 45 46 48 51 53 54 89 93
WHEN                 : 
WHILE                : 28
YIELD                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 39 40 41
boolean              : 23 55 58 77 95
clave                : 62 85
comparador           : 22 22
condicion            : 20 21
contenidohash        : 60 61
cuerpo               : 18 19 26 27 28 30 32 34 35 48 51
declaracion          : 2 4 29 30 41 43 45
declaracion_funcion  : 5 6
elemento             : 59 60
estrucElse           : 19
estrucIf             : 9
estrucWhile          : 10
estructurasControl   : 1 3 33 34
expresion            : 38 65 74
factor               : 70 71 72
funcioneshash        : 7 8
hashf                : 42 43 84 85 86 87
haskey               : 81
hkeys                : 82
hlength              : 80
hvalues              : 83
imprimir             : 31 32
logica               : 18 19 21 27 28
opcion               : 44 45
operadorLog          : 21
operadorMat          : 44 45
params               : 48 50
primitivo            : 25 37
retornos             : 35
rubyParams           : 49 50
sentenciafor         : 11
sentencias           : 3 4 6 8 0
termino              : 69 70 71
value                : 62

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) sentencias -> . funcioneshash sentencias
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (80) funcioneshash -> . hlength
    (81) funcioneshash -> . haskey
    (82) funcioneshash -> . hkeys
    (83) funcioneshash -> . hvalues
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (84) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (85) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (86) hkeys -> . hashf PUNTO KEY
    (87) hvalues -> . hashf PUNTO VALUES
    (61) hashf -> . LLLAVE contenidohash RLLAVE

    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    sentencias                     shift and go to state 1
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    declaracion_funcion            shift and go to state 4
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> estructurasControl .
    (3) sentencias -> estructurasControl . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) sentencias -> . funcioneshash sentencias
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (80) funcioneshash -> . hlength
    (81) funcioneshash -> . haskey
    (82) funcioneshash -> . hkeys
    (83) funcioneshash -> . hvalues
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (84) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (85) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (86) hkeys -> . hashf PUNTO KEY
    (87) hvalues -> . hashf PUNTO VALUES
    (61) hashf -> . LLLAVE contenidohash RLLAVE

    $end            reduce using rule 1 (sentencias -> estructurasControl .)
    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    estructurasControl             shift and go to state 2
    sentencias                     shift and go to state 20
    declaracion                    shift and go to state 3
    declaracion_funcion            shift and go to state 4
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 3

    (2) sentencias -> declaracion .
    (4) sentencias -> declaracion . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) sentencias -> . funcioneshash sentencias
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (80) funcioneshash -> . hlength
    (81) funcioneshash -> . haskey
    (82) funcioneshash -> . hkeys
    (83) funcioneshash -> . hvalues
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (84) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (85) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (86) hkeys -> . hashf PUNTO KEY
    (87) hvalues -> . hashf PUNTO VALUES
    (61) hashf -> . LLLAVE contenidohash RLLAVE

    $end            reduce using rule 2 (sentencias -> declaracion .)
    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    declaracion                    shift and go to state 3
    sentencias                     shift and go to state 21
    estructurasControl             shift and go to state 2
    declaracion_funcion            shift and go to state 4
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 4

    (5) sentencias -> declaracion_funcion .
    (6) sentencias -> declaracion_funcion . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) sentencias -> . funcioneshash sentencias
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (80) funcioneshash -> . hlength
    (81) funcioneshash -> . haskey
    (82) funcioneshash -> . hkeys
    (83) funcioneshash -> . hvalues
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (84) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (85) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (86) hkeys -> . hashf PUNTO KEY
    (87) hvalues -> . hashf PUNTO VALUES
    (61) hashf -> . LLLAVE contenidohash RLLAVE

    $end            reduce using rule 5 (sentencias -> declaracion_funcion .)
    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    declaracion_funcion            shift and go to state 4
    sentencias                     shift and go to state 22
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    funcioneshash                  shift and go to state 5
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 5

    (7) sentencias -> funcioneshash .
    (8) sentencias -> funcioneshash . sentencias
    (1) sentencias -> . estructurasControl
    (2) sentencias -> . declaracion
    (3) sentencias -> . estructurasControl sentencias
    (4) sentencias -> . declaracion sentencias
    (5) sentencias -> . declaracion_funcion
    (6) sentencias -> . declaracion_funcion sentencias
    (7) sentencias -> . funcioneshash
    (8) sentencias -> . funcioneshash sentencias
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (48) declaracion_funcion -> . DEF VARIABLE LPAREN params RPAREN cuerpo END
    (80) funcioneshash -> . hlength
    (81) funcioneshash -> . haskey
    (82) funcioneshash -> . hkeys
    (83) funcioneshash -> . hvalues
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (84) hlength -> . hashf PUNTO LENGTH LPAREN RPAREN
    (85) haskey -> . hashf HASKEY INTERROGACION LPAREN clave RPAREN
    (86) hkeys -> . hashf PUNTO KEY
    (87) hvalues -> . hashf PUNTO VALUES
    (61) hashf -> . LLLAVE contenidohash RLLAVE

    $end            reduce using rule 7 (sentencias -> funcioneshash .)
    VARIABLE        shift and go to state 9
    DEF             shift and go to state 11
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    LLLAVE          shift and go to state 19

    funcioneshash                  shift and go to state 5
    sentencias                     shift and go to state 23
    estructurasControl             shift and go to state 2
    declaracion                    shift and go to state 3
    declaracion_funcion            shift and go to state 4
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    hashf                          shift and go to state 10
    hlength                        shift and go to state 12
    haskey                         shift and go to state 13
    hkeys                          shift and go to state 14
    hvalues                        shift and go to state 15

state 6

    (9) estructurasControl -> estrucIf .

    VARIABLE        reduce using rule 9 (estructurasControl -> estrucIf .)
    DEF             reduce using rule 9 (estructurasControl -> estrucIf .)
    IF              reduce using rule 9 (estructurasControl -> estrucIf .)
    WHILE           reduce using rule 9 (estructurasControl -> estrucIf .)
    FOR             reduce using rule 9 (estructurasControl -> estrucIf .)
    LLLAVE          reduce using rule 9 (estructurasControl -> estrucIf .)
    $end            reduce using rule 9 (estructurasControl -> estrucIf .)
    PUTS            reduce using rule 9 (estructurasControl -> estrucIf .)
    END             reduce using rule 9 (estructurasControl -> estrucIf .)
    RETURN          reduce using rule 9 (estructurasControl -> estrucIf .)
    ELSE            reduce using rule 9 (estructurasControl -> estrucIf .)


state 7

    (10) estructurasControl -> estrucWhile .

    VARIABLE        reduce using rule 10 (estructurasControl -> estrucWhile .)
    DEF             reduce using rule 10 (estructurasControl -> estrucWhile .)
    IF              reduce using rule 10 (estructurasControl -> estrucWhile .)
    WHILE           reduce using rule 10 (estructurasControl -> estrucWhile .)
    FOR             reduce using rule 10 (estructurasControl -> estrucWhile .)
    LLLAVE          reduce using rule 10 (estructurasControl -> estrucWhile .)
    $end            reduce using rule 10 (estructurasControl -> estrucWhile .)
    PUTS            reduce using rule 10 (estructurasControl -> estrucWhile .)
    END             reduce using rule 10 (estructurasControl -> estrucWhile .)
    RETURN          reduce using rule 10 (estructurasControl -> estrucWhile .)
    ELSE            reduce using rule 10 (estructurasControl -> estrucWhile .)


state 8

    (11) estructurasControl -> sentenciafor .

    VARIABLE        reduce using rule 11 (estructurasControl -> sentenciafor .)
    DEF             reduce using rule 11 (estructurasControl -> sentenciafor .)
    IF              reduce using rule 11 (estructurasControl -> sentenciafor .)
    WHILE           reduce using rule 11 (estructurasControl -> sentenciafor .)
    FOR             reduce using rule 11 (estructurasControl -> sentenciafor .)
    LLLAVE          reduce using rule 11 (estructurasControl -> sentenciafor .)
    $end            reduce using rule 11 (estructurasControl -> sentenciafor .)
    PUTS            reduce using rule 11 (estructurasControl -> sentenciafor .)
    END             reduce using rule 11 (estructurasControl -> sentenciafor .)
    RETURN          reduce using rule 11 (estructurasControl -> sentenciafor .)
    ELSE            reduce using rule 11 (estructurasControl -> sentenciafor .)


state 9

    (40) declaracion -> VARIABLE . IGUAL asignacion
    (41) declaracion -> VARIABLE . IGUAL asignacion declaracion
    (42) declaracion -> VARIABLE . IGUAL hashf
    (43) declaracion -> VARIABLE . IGUAL hashf declaracion
    (44) declaracion -> VARIABLE . operadorMat IGUAL opcion
    (45) declaracion -> VARIABLE . operadorMat IGUAL opcion declaracion
    (12) operadorMat -> . IGUAL
    (13) operadorMat -> . PLUS
    (14) operadorMat -> . MINUS
    (15) operadorMat -> . TIMES

    IGUAL           shift and go to state 24
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28

    operadorMat                    shift and go to state 25

state 10

    (84) hlength -> hashf . PUNTO LENGTH LPAREN RPAREN
    (85) haskey -> hashf . HASKEY INTERROGACION LPAREN clave RPAREN
    (86) hkeys -> hashf . PUNTO KEY
    (87) hvalues -> hashf . PUNTO VALUES

    PUNTO           shift and go to state 29
    HASKEY          shift and go to state 30


state 11

    (48) declaracion_funcion -> DEF . VARIABLE LPAREN params RPAREN cuerpo END

    VARIABLE        shift and go to state 31


state 12

    (80) funcioneshash -> hlength .

    VARIABLE        reduce using rule 80 (funcioneshash -> hlength .)
    DEF             reduce using rule 80 (funcioneshash -> hlength .)
    IF              reduce using rule 80 (funcioneshash -> hlength .)
    WHILE           reduce using rule 80 (funcioneshash -> hlength .)
    FOR             reduce using rule 80 (funcioneshash -> hlength .)
    LLLAVE          reduce using rule 80 (funcioneshash -> hlength .)
    $end            reduce using rule 80 (funcioneshash -> hlength .)


state 13

    (81) funcioneshash -> haskey .

    VARIABLE        reduce using rule 81 (funcioneshash -> haskey .)
    DEF             reduce using rule 81 (funcioneshash -> haskey .)
    IF              reduce using rule 81 (funcioneshash -> haskey .)
    WHILE           reduce using rule 81 (funcioneshash -> haskey .)
    FOR             reduce using rule 81 (funcioneshash -> haskey .)
    LLLAVE          reduce using rule 81 (funcioneshash -> haskey .)
    $end            reduce using rule 81 (funcioneshash -> haskey .)


state 14

    (82) funcioneshash -> hkeys .

    VARIABLE        reduce using rule 82 (funcioneshash -> hkeys .)
    DEF             reduce using rule 82 (funcioneshash -> hkeys .)
    IF              reduce using rule 82 (funcioneshash -> hkeys .)
    WHILE           reduce using rule 82 (funcioneshash -> hkeys .)
    FOR             reduce using rule 82 (funcioneshash -> hkeys .)
    LLLAVE          reduce using rule 82 (funcioneshash -> hkeys .)
    $end            reduce using rule 82 (funcioneshash -> hkeys .)


state 15

    (83) funcioneshash -> hvalues .

    VARIABLE        reduce using rule 83 (funcioneshash -> hvalues .)
    DEF             reduce using rule 83 (funcioneshash -> hvalues .)
    IF              reduce using rule 83 (funcioneshash -> hvalues .)
    WHILE           reduce using rule 83 (funcioneshash -> hvalues .)
    FOR             reduce using rule 83 (funcioneshash -> hvalues .)
    LLLAVE          reduce using rule 83 (funcioneshash -> hvalues .)
    $end            reduce using rule 83 (funcioneshash -> hvalues .)


state 16

    (18) estrucIf -> IF . logica cuerpo END
    (19) estrucIf -> IF . logica cuerpo estrucElse
    (20) logica -> . condicion
    (21) logica -> . condicion operadorLog logica
    (22) condicion -> . comparador COMPARACION comparador
    (23) condicion -> . boolean
    (24) comparador -> . VARIABLE
    (25) comparador -> . primitivo
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE
    (75) primitivo -> . NUMBER PUNTO NUMBER
    (76) primitivo -> . NUMBER
    (77) primitivo -> . boolean

    VARIABLE        shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NUMBER          shift and go to state 40

    logica                         shift and go to state 32
    condicion                      shift and go to state 33
    comparador                     shift and go to state 34
    boolean                        shift and go to state 35
    primitivo                      shift and go to state 37

state 17

    (28) estrucWhile -> WHILE . logica cuerpo END
    (20) logica -> . condicion
    (21) logica -> . condicion operadorLog logica
    (22) condicion -> . comparador COMPARACION comparador
    (23) condicion -> . boolean
    (24) comparador -> . VARIABLE
    (25) comparador -> . primitivo
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE
    (75) primitivo -> . NUMBER PUNTO NUMBER
    (76) primitivo -> . NUMBER
    (77) primitivo -> . boolean

    VARIABLE        shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NUMBER          shift and go to state 40

    logica                         shift and go to state 41
    condicion                      shift and go to state 33
    comparador                     shift and go to state 34
    boolean                        shift and go to state 35
    primitivo                      shift and go to state 37

state 18

    (51) sentenciafor -> FOR . VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 42


state 19

    (61) hashf -> LLLAVE . contenidohash RLLAVE
    (59) contenidohash -> . elemento
    (60) contenidohash -> . elemento COMA contenidohash
    (62) elemento -> . clave FHASH value
    (88) clave -> . STRING
    (89) clave -> . VARIABLE
    (90) clave -> . NUMBER
    (91) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 48

    contenidohash                  shift and go to state 43
    elemento                       shift and go to state 44
    clave                          shift and go to state 45

state 20

    (3) sentencias -> estructurasControl sentencias .

    $end            reduce using rule 3 (sentencias -> estructurasControl sentencias .)


state 21

    (4) sentencias -> declaracion sentencias .

    $end            reduce using rule 4 (sentencias -> declaracion sentencias .)


state 22

    (6) sentencias -> declaracion_funcion sentencias .

    $end            reduce using rule 6 (sentencias -> declaracion_funcion sentencias .)


state 23

    (8) sentencias -> funcioneshash sentencias .

    $end            reduce using rule 8 (sentencias -> funcioneshash sentencias .)


state 24

    (40) declaracion -> VARIABLE IGUAL . asignacion
    (41) declaracion -> VARIABLE IGUAL . asignacion declaracion
    (42) declaracion -> VARIABLE IGUAL . hashf
    (43) declaracion -> VARIABLE IGUAL . hashf declaracion
    (12) operadorMat -> IGUAL .
    (57) asignacion -> . NUMBER
    (58) asignacion -> . boolean
    (63) asignacion -> . ARREGLO
    (64) asignacion -> . FICHERO
    (65) asignacion -> . expresion
    (66) asignacion -> . STRING
    (61) hashf -> . LLLAVE contenidohash RLLAVE
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE
    (67) expresion -> . NUMBER PLUS NUMBER
    (68) expresion -> . NUMBER MINUS NUMBER
    (69) expresion -> . termino
    (70) termino -> . termino TIMES factor
    (71) termino -> . termino DIVIDE factor
    (72) termino -> . factor
    (73) factor -> . NUMBER
    (74) factor -> . LPAREN expresion RPAREN

    IGUAL           reduce using rule 12 (operadorMat -> IGUAL .)
    NUMBER          shift and go to state 51
    ARREGLO         shift and go to state 53
    FICHERO         shift and go to state 54
    STRING          shift and go to state 56
    LLLAVE          shift and go to state 19
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    LPAREN          shift and go to state 59

    asignacion                     shift and go to state 49
    hashf                          shift and go to state 50
    boolean                        shift and go to state 52
    expresion                      shift and go to state 55
    termino                        shift and go to state 57
    factor                         shift and go to state 58

state 25

    (44) declaracion -> VARIABLE operadorMat . IGUAL opcion
    (45) declaracion -> VARIABLE operadorMat . IGUAL opcion declaracion

    IGUAL           shift and go to state 60


state 26

    (13) operadorMat -> PLUS .

    IGUAL           reduce using rule 13 (operadorMat -> PLUS .)


state 27

    (14) operadorMat -> MINUS .

    IGUAL           reduce using rule 14 (operadorMat -> MINUS .)


state 28

    (15) operadorMat -> TIMES .

    IGUAL           reduce using rule 15 (operadorMat -> TIMES .)


state 29

    (84) hlength -> hashf PUNTO . LENGTH LPAREN RPAREN
    (86) hkeys -> hashf PUNTO . KEY
    (87) hvalues -> hashf PUNTO . VALUES

    LENGTH          shift and go to state 61
    KEY             shift and go to state 62
    VALUES          shift and go to state 63


state 30

    (85) haskey -> hashf HASKEY . INTERROGACION LPAREN clave RPAREN

    INTERROGACION   shift and go to state 64


state 31

    (48) declaracion_funcion -> DEF VARIABLE . LPAREN params RPAREN cuerpo END

    LPAREN          shift and go to state 65


state 32

    (18) estrucIf -> IF logica . cuerpo END
    (19) estrucIf -> IF logica . cuerpo estrucElse
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 66
    declaracion                    shift and go to state 67
    imprimir                       shift and go to state 68
    estructurasControl             shift and go to state 69
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 33

    (20) logica -> condicion .
    (21) logica -> condicion . operadorLog logica
    (16) operadorLog -> . AND
    (17) operadorLog -> . OR

    VARIABLE        reduce using rule 20 (logica -> condicion .)
    PUTS            reduce using rule 20 (logica -> condicion .)
    IF              reduce using rule 20 (logica -> condicion .)
    WHILE           reduce using rule 20 (logica -> condicion .)
    FOR             reduce using rule 20 (logica -> condicion .)
    AND             shift and go to state 72
    OR              shift and go to state 73

    operadorLog                    shift and go to state 71

state 34

    (22) condicion -> comparador . COMPARACION comparador

    COMPARACION     shift and go to state 74


state 35

    (23) condicion -> boolean .
    (77) primitivo -> boolean .

    AND             reduce using rule 23 (condicion -> boolean .)
    OR              reduce using rule 23 (condicion -> boolean .)
    VARIABLE        reduce using rule 23 (condicion -> boolean .)
    PUTS            reduce using rule 23 (condicion -> boolean .)
    IF              reduce using rule 23 (condicion -> boolean .)
    WHILE           reduce using rule 23 (condicion -> boolean .)
    FOR             reduce using rule 23 (condicion -> boolean .)
    COMPARACION     reduce using rule 77 (primitivo -> boolean .)


state 36

    (24) comparador -> VARIABLE .

    COMPARACION     reduce using rule 24 (comparador -> VARIABLE .)
    AND             reduce using rule 24 (comparador -> VARIABLE .)
    OR              reduce using rule 24 (comparador -> VARIABLE .)
    VARIABLE        reduce using rule 24 (comparador -> VARIABLE .)
    PUTS            reduce using rule 24 (comparador -> VARIABLE .)
    IF              reduce using rule 24 (comparador -> VARIABLE .)
    WHILE           reduce using rule 24 (comparador -> VARIABLE .)
    FOR             reduce using rule 24 (comparador -> VARIABLE .)


state 37

    (25) comparador -> primitivo .

    COMPARACION     reduce using rule 25 (comparador -> primitivo .)
    AND             reduce using rule 25 (comparador -> primitivo .)
    OR              reduce using rule 25 (comparador -> primitivo .)
    VARIABLE        reduce using rule 25 (comparador -> primitivo .)
    PUTS            reduce using rule 25 (comparador -> primitivo .)
    IF              reduce using rule 25 (comparador -> primitivo .)
    WHILE           reduce using rule 25 (comparador -> primitivo .)
    FOR             reduce using rule 25 (comparador -> primitivo .)


state 38

    (78) boolean -> TRUE .

    AND             reduce using rule 78 (boolean -> TRUE .)
    OR              reduce using rule 78 (boolean -> TRUE .)
    VARIABLE        reduce using rule 78 (boolean -> TRUE .)
    PUTS            reduce using rule 78 (boolean -> TRUE .)
    IF              reduce using rule 78 (boolean -> TRUE .)
    WHILE           reduce using rule 78 (boolean -> TRUE .)
    FOR             reduce using rule 78 (boolean -> TRUE .)
    COMPARACION     reduce using rule 78 (boolean -> TRUE .)
    DEF             reduce using rule 78 (boolean -> TRUE .)
    LLLAVE          reduce using rule 78 (boolean -> TRUE .)
    $end            reduce using rule 78 (boolean -> TRUE .)
    END             reduce using rule 78 (boolean -> TRUE .)
    RETURN          reduce using rule 78 (boolean -> TRUE .)
    ELSE            reduce using rule 78 (boolean -> TRUE .)
    COMA            reduce using rule 78 (boolean -> TRUE .)
    RPAREN          reduce using rule 78 (boolean -> TRUE .)
    RLLAVE          reduce using rule 78 (boolean -> TRUE .)


state 39

    (79) boolean -> FALSE .

    AND             reduce using rule 79 (boolean -> FALSE .)
    OR              reduce using rule 79 (boolean -> FALSE .)
    VARIABLE        reduce using rule 79 (boolean -> FALSE .)
    PUTS            reduce using rule 79 (boolean -> FALSE .)
    IF              reduce using rule 79 (boolean -> FALSE .)
    WHILE           reduce using rule 79 (boolean -> FALSE .)
    FOR             reduce using rule 79 (boolean -> FALSE .)
    COMPARACION     reduce using rule 79 (boolean -> FALSE .)
    DEF             reduce using rule 79 (boolean -> FALSE .)
    LLLAVE          reduce using rule 79 (boolean -> FALSE .)
    $end            reduce using rule 79 (boolean -> FALSE .)
    END             reduce using rule 79 (boolean -> FALSE .)
    RETURN          reduce using rule 79 (boolean -> FALSE .)
    ELSE            reduce using rule 79 (boolean -> FALSE .)
    COMA            reduce using rule 79 (boolean -> FALSE .)
    RPAREN          reduce using rule 79 (boolean -> FALSE .)
    RLLAVE          reduce using rule 79 (boolean -> FALSE .)


state 40

    (75) primitivo -> NUMBER . PUNTO NUMBER
    (76) primitivo -> NUMBER .

    PUNTO           shift and go to state 75
    COMPARACION     reduce using rule 76 (primitivo -> NUMBER .)
    AND             reduce using rule 76 (primitivo -> NUMBER .)
    OR              reduce using rule 76 (primitivo -> NUMBER .)
    VARIABLE        reduce using rule 76 (primitivo -> NUMBER .)
    PUTS            reduce using rule 76 (primitivo -> NUMBER .)
    IF              reduce using rule 76 (primitivo -> NUMBER .)
    WHILE           reduce using rule 76 (primitivo -> NUMBER .)
    FOR             reduce using rule 76 (primitivo -> NUMBER .)


state 41

    (28) estrucWhile -> WHILE logica . cuerpo END
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 76
    declaracion                    shift and go to state 67
    imprimir                       shift and go to state 68
    estructurasControl             shift and go to state 69
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 42

    (51) sentenciafor -> FOR VARIABLE . IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    IN              shift and go to state 77


state 43

    (61) hashf -> LLLAVE contenidohash . RLLAVE

    RLLAVE          shift and go to state 78


state 44

    (59) contenidohash -> elemento .
    (60) contenidohash -> elemento . COMA contenidohash

    RLLAVE          reduce using rule 59 (contenidohash -> elemento .)
    COMA            shift and go to state 79


state 45

    (62) elemento -> clave . FHASH value

    FHASH           shift and go to state 80


state 46

    (88) clave -> STRING .

    FHASH           reduce using rule 88 (clave -> STRING .)
    RPAREN          reduce using rule 88 (clave -> STRING .)


state 47

    (89) clave -> VARIABLE .

    FHASH           reduce using rule 89 (clave -> VARIABLE .)
    RPAREN          reduce using rule 89 (clave -> VARIABLE .)


state 48

    (90) clave -> NUMBER .
    (91) clave -> NUMBER . PUNTO NUMBER

    FHASH           reduce using rule 90 (clave -> NUMBER .)
    RPAREN          reduce using rule 90 (clave -> NUMBER .)
    PUNTO           shift and go to state 81


state 49

    (40) declaracion -> VARIABLE IGUAL asignacion .
    (41) declaracion -> VARIABLE IGUAL asignacion . declaracion
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    IF              reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    WHILE           reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    FOR             reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    LLLAVE          reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    $end            reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    PUTS            reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    END             reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    RETURN          reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    ELSE            reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .)
    VARIABLE        shift and go to state 9

  ! VARIABLE        [ reduce using rule 40 (declaracion -> VARIABLE IGUAL asignacion .) ]

    declaracion                    shift and go to state 82

state 50

    (42) declaracion -> VARIABLE IGUAL hashf .
    (43) declaracion -> VARIABLE IGUAL hashf . declaracion
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    IF              reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    WHILE           reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    FOR             reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    LLLAVE          reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    $end            reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    PUTS            reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    END             reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    RETURN          reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    ELSE            reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .)
    VARIABLE        shift and go to state 9

  ! VARIABLE        [ reduce using rule 42 (declaracion -> VARIABLE IGUAL hashf .) ]

    declaracion                    shift and go to state 83

state 51

    (57) asignacion -> NUMBER .
    (67) expresion -> NUMBER . PLUS NUMBER
    (68) expresion -> NUMBER . MINUS NUMBER
    (73) factor -> NUMBER .

  ! reduce/reduce conflict for VARIABLE resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for DEF resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for IF resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for WHILE resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for FOR resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for LLLAVE resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for $end resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for PUTS resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (asignacion -> NUMBER .)
    VARIABLE        reduce using rule 57 (asignacion -> NUMBER .)
    DEF             reduce using rule 57 (asignacion -> NUMBER .)
    IF              reduce using rule 57 (asignacion -> NUMBER .)
    WHILE           reduce using rule 57 (asignacion -> NUMBER .)
    FOR             reduce using rule 57 (asignacion -> NUMBER .)
    LLLAVE          reduce using rule 57 (asignacion -> NUMBER .)
    $end            reduce using rule 57 (asignacion -> NUMBER .)
    PUTS            reduce using rule 57 (asignacion -> NUMBER .)
    END             reduce using rule 57 (asignacion -> NUMBER .)
    RETURN          reduce using rule 57 (asignacion -> NUMBER .)
    ELSE            reduce using rule 57 (asignacion -> NUMBER .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           reduce using rule 73 (factor -> NUMBER .)
    DIVIDE          reduce using rule 73 (factor -> NUMBER .)

  ! VARIABLE        [ reduce using rule 73 (factor -> NUMBER .) ]
  ! DEF             [ reduce using rule 73 (factor -> NUMBER .) ]
  ! IF              [ reduce using rule 73 (factor -> NUMBER .) ]
  ! WHILE           [ reduce using rule 73 (factor -> NUMBER .) ]
  ! FOR             [ reduce using rule 73 (factor -> NUMBER .) ]
  ! LLLAVE          [ reduce using rule 73 (factor -> NUMBER .) ]
  ! $end            [ reduce using rule 73 (factor -> NUMBER .) ]
  ! PUTS            [ reduce using rule 73 (factor -> NUMBER .) ]
  ! END             [ reduce using rule 73 (factor -> NUMBER .) ]
  ! RETURN          [ reduce using rule 73 (factor -> NUMBER .) ]
  ! ELSE            [ reduce using rule 73 (factor -> NUMBER .) ]


state 52

    (58) asignacion -> boolean .

    VARIABLE        reduce using rule 58 (asignacion -> boolean .)
    DEF             reduce using rule 58 (asignacion -> boolean .)
    IF              reduce using rule 58 (asignacion -> boolean .)
    WHILE           reduce using rule 58 (asignacion -> boolean .)
    FOR             reduce using rule 58 (asignacion -> boolean .)
    LLLAVE          reduce using rule 58 (asignacion -> boolean .)
    $end            reduce using rule 58 (asignacion -> boolean .)
    PUTS            reduce using rule 58 (asignacion -> boolean .)
    END             reduce using rule 58 (asignacion -> boolean .)
    RETURN          reduce using rule 58 (asignacion -> boolean .)
    ELSE            reduce using rule 58 (asignacion -> boolean .)


state 53

    (63) asignacion -> ARREGLO .

    VARIABLE        reduce using rule 63 (asignacion -> ARREGLO .)
    DEF             reduce using rule 63 (asignacion -> ARREGLO .)
    IF              reduce using rule 63 (asignacion -> ARREGLO .)
    WHILE           reduce using rule 63 (asignacion -> ARREGLO .)
    FOR             reduce using rule 63 (asignacion -> ARREGLO .)
    LLLAVE          reduce using rule 63 (asignacion -> ARREGLO .)
    $end            reduce using rule 63 (asignacion -> ARREGLO .)
    PUTS            reduce using rule 63 (asignacion -> ARREGLO .)
    END             reduce using rule 63 (asignacion -> ARREGLO .)
    RETURN          reduce using rule 63 (asignacion -> ARREGLO .)
    ELSE            reduce using rule 63 (asignacion -> ARREGLO .)


state 54

    (64) asignacion -> FICHERO .

    VARIABLE        reduce using rule 64 (asignacion -> FICHERO .)
    DEF             reduce using rule 64 (asignacion -> FICHERO .)
    IF              reduce using rule 64 (asignacion -> FICHERO .)
    WHILE           reduce using rule 64 (asignacion -> FICHERO .)
    FOR             reduce using rule 64 (asignacion -> FICHERO .)
    LLLAVE          reduce using rule 64 (asignacion -> FICHERO .)
    $end            reduce using rule 64 (asignacion -> FICHERO .)
    PUTS            reduce using rule 64 (asignacion -> FICHERO .)
    END             reduce using rule 64 (asignacion -> FICHERO .)
    RETURN          reduce using rule 64 (asignacion -> FICHERO .)
    ELSE            reduce using rule 64 (asignacion -> FICHERO .)


state 55

    (65) asignacion -> expresion .

    VARIABLE        reduce using rule 65 (asignacion -> expresion .)
    DEF             reduce using rule 65 (asignacion -> expresion .)
    IF              reduce using rule 65 (asignacion -> expresion .)
    WHILE           reduce using rule 65 (asignacion -> expresion .)
    FOR             reduce using rule 65 (asignacion -> expresion .)
    LLLAVE          reduce using rule 65 (asignacion -> expresion .)
    $end            reduce using rule 65 (asignacion -> expresion .)
    PUTS            reduce using rule 65 (asignacion -> expresion .)
    END             reduce using rule 65 (asignacion -> expresion .)
    RETURN          reduce using rule 65 (asignacion -> expresion .)
    ELSE            reduce using rule 65 (asignacion -> expresion .)


state 56

    (66) asignacion -> STRING .

    VARIABLE        reduce using rule 66 (asignacion -> STRING .)
    DEF             reduce using rule 66 (asignacion -> STRING .)
    IF              reduce using rule 66 (asignacion -> STRING .)
    WHILE           reduce using rule 66 (asignacion -> STRING .)
    FOR             reduce using rule 66 (asignacion -> STRING .)
    LLLAVE          reduce using rule 66 (asignacion -> STRING .)
    $end            reduce using rule 66 (asignacion -> STRING .)
    PUTS            reduce using rule 66 (asignacion -> STRING .)
    END             reduce using rule 66 (asignacion -> STRING .)
    RETURN          reduce using rule 66 (asignacion -> STRING .)
    ELSE            reduce using rule 66 (asignacion -> STRING .)


state 57

    (69) expresion -> termino .
    (70) termino -> termino . TIMES factor
    (71) termino -> termino . DIVIDE factor

    VARIABLE        reduce using rule 69 (expresion -> termino .)
    DEF             reduce using rule 69 (expresion -> termino .)
    IF              reduce using rule 69 (expresion -> termino .)
    WHILE           reduce using rule 69 (expresion -> termino .)
    FOR             reduce using rule 69 (expresion -> termino .)
    LLLAVE          reduce using rule 69 (expresion -> termino .)
    $end            reduce using rule 69 (expresion -> termino .)
    PUTS            reduce using rule 69 (expresion -> termino .)
    END             reduce using rule 69 (expresion -> termino .)
    RETURN          reduce using rule 69 (expresion -> termino .)
    ELSE            reduce using rule 69 (expresion -> termino .)
    RPAREN          reduce using rule 69 (expresion -> termino .)
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87


state 58

    (72) termino -> factor .

    TIMES           reduce using rule 72 (termino -> factor .)
    DIVIDE          reduce using rule 72 (termino -> factor .)
    VARIABLE        reduce using rule 72 (termino -> factor .)
    DEF             reduce using rule 72 (termino -> factor .)
    IF              reduce using rule 72 (termino -> factor .)
    WHILE           reduce using rule 72 (termino -> factor .)
    FOR             reduce using rule 72 (termino -> factor .)
    LLLAVE          reduce using rule 72 (termino -> factor .)
    $end            reduce using rule 72 (termino -> factor .)
    PUTS            reduce using rule 72 (termino -> factor .)
    END             reduce using rule 72 (termino -> factor .)
    RETURN          reduce using rule 72 (termino -> factor .)
    ELSE            reduce using rule 72 (termino -> factor .)
    RPAREN          reduce using rule 72 (termino -> factor .)


state 59

    (74) factor -> LPAREN . expresion RPAREN
    (67) expresion -> . NUMBER PLUS NUMBER
    (68) expresion -> . NUMBER MINUS NUMBER
    (69) expresion -> . termino
    (70) termino -> . termino TIMES factor
    (71) termino -> . termino DIVIDE factor
    (72) termino -> . factor
    (73) factor -> . NUMBER
    (74) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 89
    LPAREN          shift and go to state 59

    expresion                      shift and go to state 88
    termino                        shift and go to state 57
    factor                         shift and go to state 58

state 60

    (44) declaracion -> VARIABLE operadorMat IGUAL . opcion
    (45) declaracion -> VARIABLE operadorMat IGUAL . opcion declaracion
    (46) opcion -> . VARIABLE
    (47) opcion -> . NUMBER

    VARIABLE        shift and go to state 90
    NUMBER          shift and go to state 92

    opcion                         shift and go to state 91

state 61

    (84) hlength -> hashf PUNTO LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 93


state 62

    (86) hkeys -> hashf PUNTO KEY .

    VARIABLE        reduce using rule 86 (hkeys -> hashf PUNTO KEY .)
    DEF             reduce using rule 86 (hkeys -> hashf PUNTO KEY .)
    IF              reduce using rule 86 (hkeys -> hashf PUNTO KEY .)
    WHILE           reduce using rule 86 (hkeys -> hashf PUNTO KEY .)
    FOR             reduce using rule 86 (hkeys -> hashf PUNTO KEY .)
    LLLAVE          reduce using rule 86 (hkeys -> hashf PUNTO KEY .)
    $end            reduce using rule 86 (hkeys -> hashf PUNTO KEY .)


state 63

    (87) hvalues -> hashf PUNTO VALUES .

    VARIABLE        reduce using rule 87 (hvalues -> hashf PUNTO VALUES .)
    DEF             reduce using rule 87 (hvalues -> hashf PUNTO VALUES .)
    IF              reduce using rule 87 (hvalues -> hashf PUNTO VALUES .)
    WHILE           reduce using rule 87 (hvalues -> hashf PUNTO VALUES .)
    FOR             reduce using rule 87 (hvalues -> hashf PUNTO VALUES .)
    LLLAVE          reduce using rule 87 (hvalues -> hashf PUNTO VALUES .)
    $end            reduce using rule 87 (hvalues -> hashf PUNTO VALUES .)


state 64

    (85) haskey -> hashf HASKEY INTERROGACION . LPAREN clave RPAREN

    LPAREN          shift and go to state 94


state 65

    (48) declaracion_funcion -> DEF VARIABLE LPAREN . params RPAREN cuerpo END
    (49) params -> . rubyParams
    (50) params -> . rubyParams COMA params
    (54) rubyParams -> . VARIABLE
    (55) rubyParams -> . boolean
    (56) rubyParams -> . NUMBER
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    VARIABLE        shift and go to state 95
    NUMBER          shift and go to state 99
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    params                         shift and go to state 96
    rubyParams                     shift and go to state 97
    boolean                        shift and go to state 98

state 66

    (18) estrucIf -> IF logica cuerpo . END
    (19) estrucIf -> IF logica cuerpo . estrucElse
    (35) cuerpo -> cuerpo . RETURN retornos
    (26) estrucElse -> . ELSE cuerpo END
    (27) estrucElse -> . ELSE logica cuerpo END

    END             shift and go to state 100
    RETURN          shift and go to state 102
    ELSE            shift and go to state 103

    estrucElse                     shift and go to state 101

state 67

    (29) cuerpo -> declaracion .
    (30) cuerpo -> declaracion . cuerpo
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 29 (cuerpo -> declaracion .)
    RETURN          reduce using rule 29 (cuerpo -> declaracion .)
    ELSE            reduce using rule 29 (cuerpo -> declaracion .)
    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    declaracion                    shift and go to state 67
    cuerpo                         shift and go to state 104
    imprimir                       shift and go to state 68
    estructurasControl             shift and go to state 69
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 68

    (31) cuerpo -> imprimir .
    (32) cuerpo -> imprimir . cuerpo
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 31 (cuerpo -> imprimir .)
    RETURN          reduce using rule 31 (cuerpo -> imprimir .)
    ELSE            reduce using rule 31 (cuerpo -> imprimir .)
    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    imprimir                       shift and go to state 68
    cuerpo                         shift and go to state 105
    declaracion                    shift and go to state 67
    estructurasControl             shift and go to state 69
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 69

    (33) cuerpo -> estructurasControl .
    (34) cuerpo -> estructurasControl . cuerpo
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    END             reduce using rule 33 (cuerpo -> estructurasControl .)
    RETURN          reduce using rule 33 (cuerpo -> estructurasControl .)
    ELSE            reduce using rule 33 (cuerpo -> estructurasControl .)
    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    estructurasControl             shift and go to state 69
    cuerpo                         shift and go to state 106
    declaracion                    shift and go to state 67
    imprimir                       shift and go to state 68
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 70

    (52) imprimir -> PUTS . STRING
    (53) imprimir -> PUTS . VARIABLE

    STRING          shift and go to state 107
    VARIABLE        shift and go to state 108


state 71

    (21) logica -> condicion operadorLog . logica
    (20) logica -> . condicion
    (21) logica -> . condicion operadorLog logica
    (22) condicion -> . comparador COMPARACION comparador
    (23) condicion -> . boolean
    (24) comparador -> . VARIABLE
    (25) comparador -> . primitivo
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE
    (75) primitivo -> . NUMBER PUNTO NUMBER
    (76) primitivo -> . NUMBER
    (77) primitivo -> . boolean

    VARIABLE        shift and go to state 36
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NUMBER          shift and go to state 40

    condicion                      shift and go to state 33
    logica                         shift and go to state 109
    comparador                     shift and go to state 34
    boolean                        shift and go to state 35
    primitivo                      shift and go to state 37

state 72

    (16) operadorLog -> AND .

    VARIABLE        reduce using rule 16 (operadorLog -> AND .)
    TRUE            reduce using rule 16 (operadorLog -> AND .)
    FALSE           reduce using rule 16 (operadorLog -> AND .)
    NUMBER          reduce using rule 16 (operadorLog -> AND .)


state 73

    (17) operadorLog -> OR .

    VARIABLE        reduce using rule 17 (operadorLog -> OR .)
    TRUE            reduce using rule 17 (operadorLog -> OR .)
    FALSE           reduce using rule 17 (operadorLog -> OR .)
    NUMBER          reduce using rule 17 (operadorLog -> OR .)


state 74

    (22) condicion -> comparador COMPARACION . comparador
    (24) comparador -> . VARIABLE
    (25) comparador -> . primitivo
    (75) primitivo -> . NUMBER PUNTO NUMBER
    (76) primitivo -> . NUMBER
    (77) primitivo -> . boolean
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    VARIABLE        shift and go to state 36
    NUMBER          shift and go to state 40
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    comparador                     shift and go to state 110
    primitivo                      shift and go to state 37
    boolean                        shift and go to state 111

state 75

    (75) primitivo -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 112


state 76

    (28) estrucWhile -> WHILE logica cuerpo . END
    (35) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 113
    RETURN          shift and go to state 102


state 77

    (51) sentenciafor -> FOR VARIABLE IN . LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    LPAREN          shift and go to state 114


state 78

    (61) hashf -> LLLAVE contenidohash RLLAVE .

    PUNTO           reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    HASKEY          reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    VARIABLE        reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    DEF             reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    IF              reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    WHILE           reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    FOR             reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    LLLAVE          reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    $end            reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    PUTS            reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    END             reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    RETURN          reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)
    ELSE            reduce using rule 61 (hashf -> LLLAVE contenidohash RLLAVE .)


state 79

    (60) contenidohash -> elemento COMA . contenidohash
    (59) contenidohash -> . elemento
    (60) contenidohash -> . elemento COMA contenidohash
    (62) elemento -> . clave FHASH value
    (88) clave -> . STRING
    (89) clave -> . VARIABLE
    (90) clave -> . NUMBER
    (91) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 48

    elemento                       shift and go to state 44
    contenidohash                  shift and go to state 115
    clave                          shift and go to state 45

state 80

    (62) elemento -> clave FHASH . value
    (92) value -> . NUMBER
    (93) value -> . VARIABLE
    (94) value -> . STRING
    (95) value -> . boolean
    (96) value -> . NUMBER PUNTO NUMBER
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    NUMBER          shift and go to state 117
    VARIABLE        shift and go to state 118
    STRING          shift and go to state 119
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    value                          shift and go to state 116
    boolean                        shift and go to state 120

state 81

    (91) clave -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 121


state 82

    (41) declaracion -> VARIABLE IGUAL asignacion declaracion .

    VARIABLE        reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    DEF             reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    IF              reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    WHILE           reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    FOR             reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    LLLAVE          reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    $end            reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    PUTS            reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    END             reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    RETURN          reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)
    ELSE            reduce using rule 41 (declaracion -> VARIABLE IGUAL asignacion declaracion .)


state 83

    (43) declaracion -> VARIABLE IGUAL hashf declaracion .

    VARIABLE        reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    DEF             reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    IF              reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    WHILE           reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    FOR             reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    LLLAVE          reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    $end            reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    PUTS            reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    END             reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    RETURN          reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)
    ELSE            reduce using rule 43 (declaracion -> VARIABLE IGUAL hashf declaracion .)


state 84

    (67) expresion -> NUMBER PLUS . NUMBER

    NUMBER          shift and go to state 122


state 85

    (68) expresion -> NUMBER MINUS . NUMBER

    NUMBER          shift and go to state 123


state 86

    (70) termino -> termino TIMES . factor
    (73) factor -> . NUMBER
    (74) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 125
    LPAREN          shift and go to state 59

    factor                         shift and go to state 124

state 87

    (71) termino -> termino DIVIDE . factor
    (73) factor -> . NUMBER
    (74) factor -> . LPAREN expresion RPAREN

    NUMBER          shift and go to state 125
    LPAREN          shift and go to state 59

    factor                         shift and go to state 126

state 88

    (74) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 127


state 89

    (67) expresion -> NUMBER . PLUS NUMBER
    (68) expresion -> NUMBER . MINUS NUMBER
    (73) factor -> NUMBER .

    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           reduce using rule 73 (factor -> NUMBER .)
    DIVIDE          reduce using rule 73 (factor -> NUMBER .)
    RPAREN          reduce using rule 73 (factor -> NUMBER .)


state 90

    (46) opcion -> VARIABLE .

    VARIABLE        reduce using rule 46 (opcion -> VARIABLE .)
    DEF             reduce using rule 46 (opcion -> VARIABLE .)
    IF              reduce using rule 46 (opcion -> VARIABLE .)
    WHILE           reduce using rule 46 (opcion -> VARIABLE .)
    FOR             reduce using rule 46 (opcion -> VARIABLE .)
    LLLAVE          reduce using rule 46 (opcion -> VARIABLE .)
    $end            reduce using rule 46 (opcion -> VARIABLE .)
    PUTS            reduce using rule 46 (opcion -> VARIABLE .)
    END             reduce using rule 46 (opcion -> VARIABLE .)
    RETURN          reduce using rule 46 (opcion -> VARIABLE .)
    ELSE            reduce using rule 46 (opcion -> VARIABLE .)


state 91

    (44) declaracion -> VARIABLE operadorMat IGUAL opcion .
    (45) declaracion -> VARIABLE operadorMat IGUAL opcion . declaracion
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion

  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    IF              reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    WHILE           reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    FOR             reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    LLLAVE          reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    $end            reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    PUTS            reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    END             reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    RETURN          reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    ELSE            reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .)
    VARIABLE        shift and go to state 9

  ! VARIABLE        [ reduce using rule 44 (declaracion -> VARIABLE operadorMat IGUAL opcion .) ]

    declaracion                    shift and go to state 128

state 92

    (47) opcion -> NUMBER .

    VARIABLE        reduce using rule 47 (opcion -> NUMBER .)
    DEF             reduce using rule 47 (opcion -> NUMBER .)
    IF              reduce using rule 47 (opcion -> NUMBER .)
    WHILE           reduce using rule 47 (opcion -> NUMBER .)
    FOR             reduce using rule 47 (opcion -> NUMBER .)
    LLLAVE          reduce using rule 47 (opcion -> NUMBER .)
    $end            reduce using rule 47 (opcion -> NUMBER .)
    PUTS            reduce using rule 47 (opcion -> NUMBER .)
    END             reduce using rule 47 (opcion -> NUMBER .)
    RETURN          reduce using rule 47 (opcion -> NUMBER .)
    ELSE            reduce using rule 47 (opcion -> NUMBER .)


state 93

    (84) hlength -> hashf PUNTO LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 129


state 94

    (85) haskey -> hashf HASKEY INTERROGACION LPAREN . clave RPAREN
    (88) clave -> . STRING
    (89) clave -> . VARIABLE
    (90) clave -> . NUMBER
    (91) clave -> . NUMBER PUNTO NUMBER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 47
    NUMBER          shift and go to state 48

    clave                          shift and go to state 130

state 95

    (54) rubyParams -> VARIABLE .

    COMA            reduce using rule 54 (rubyParams -> VARIABLE .)
    RPAREN          reduce using rule 54 (rubyParams -> VARIABLE .)


state 96

    (48) declaracion_funcion -> DEF VARIABLE LPAREN params . RPAREN cuerpo END

    RPAREN          shift and go to state 131


state 97

    (49) params -> rubyParams .
    (50) params -> rubyParams . COMA params

    RPAREN          reduce using rule 49 (params -> rubyParams .)
    COMA            shift and go to state 132


state 98

    (55) rubyParams -> boolean .

    COMA            reduce using rule 55 (rubyParams -> boolean .)
    RPAREN          reduce using rule 55 (rubyParams -> boolean .)


state 99

    (56) rubyParams -> NUMBER .

    COMA            reduce using rule 56 (rubyParams -> NUMBER .)
    RPAREN          reduce using rule 56 (rubyParams -> NUMBER .)


state 100

    (18) estrucIf -> IF logica cuerpo END .

    VARIABLE        reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    DEF             reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    IF              reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    WHILE           reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    FOR             reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    LLLAVE          reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    $end            reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    PUTS            reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    END             reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    RETURN          reduce using rule 18 (estrucIf -> IF logica cuerpo END .)
    ELSE            reduce using rule 18 (estrucIf -> IF logica cuerpo END .)


state 101

    (19) estrucIf -> IF logica cuerpo estrucElse .

    VARIABLE        reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    DEF             reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    IF              reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    WHILE           reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    FOR             reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    LLLAVE          reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    $end            reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    PUTS            reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    END             reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    RETURN          reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)
    ELSE            reduce using rule 19 (estrucIf -> IF logica cuerpo estrucElse .)


state 102

    (35) cuerpo -> cuerpo RETURN . retornos
    (36) retornos -> . VARIABLE
    (37) retornos -> . primitivo
    (38) retornos -> . expresion
    (39) retornos -> . asignacion
    (75) primitivo -> . NUMBER PUNTO NUMBER
    (76) primitivo -> . NUMBER
    (77) primitivo -> . boolean
    (67) expresion -> . NUMBER PLUS NUMBER
    (68) expresion -> . NUMBER MINUS NUMBER
    (69) expresion -> . termino
    (57) asignacion -> . NUMBER
    (58) asignacion -> . boolean
    (63) asignacion -> . ARREGLO
    (64) asignacion -> . FICHERO
    (65) asignacion -> . expresion
    (66) asignacion -> . STRING
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE
    (70) termino -> . termino TIMES factor
    (71) termino -> . termino DIVIDE factor
    (72) termino -> . factor
    (73) factor -> . NUMBER
    (74) factor -> . LPAREN expresion RPAREN

    VARIABLE        shift and go to state 134
    NUMBER          shift and go to state 138
    ARREGLO         shift and go to state 53
    FICHERO         shift and go to state 54
    STRING          shift and go to state 56
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    LPAREN          shift and go to state 59

    retornos                       shift and go to state 133
    primitivo                      shift and go to state 135
    expresion                      shift and go to state 136
    asignacion                     shift and go to state 137
    boolean                        shift and go to state 139
    termino                        shift and go to state 57
    factor                         shift and go to state 58

state 103

    (26) estrucElse -> ELSE . cuerpo END
    (27) estrucElse -> ELSE . logica cuerpo END
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (20) logica -> . condicion
    (21) logica -> . condicion operadorLog logica
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (22) condicion -> . comparador COMPARACION comparador
    (23) condicion -> . boolean
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END
    (24) comparador -> . VARIABLE
    (25) comparador -> . primitivo
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE
    (75) primitivo -> . NUMBER PUNTO NUMBER
    (76) primitivo -> . NUMBER
    (77) primitivo -> . boolean

    VARIABLE        shift and go to state 142
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39
    NUMBER          shift and go to state 40

    cuerpo                         shift and go to state 140
    logica                         shift and go to state 141
    declaracion                    shift and go to state 67
    imprimir                       shift and go to state 68
    estructurasControl             shift and go to state 69
    condicion                      shift and go to state 33
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8
    comparador                     shift and go to state 34
    boolean                        shift and go to state 35
    primitivo                      shift and go to state 37

state 104

    (30) cuerpo -> declaracion cuerpo .
    (35) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 30 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 30 (cuerpo -> declaracion cuerpo .)
    RETURN          shift and go to state 102

  ! RETURN          [ reduce using rule 30 (cuerpo -> declaracion cuerpo .) ]


state 105

    (32) cuerpo -> imprimir cuerpo .
    (35) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 32 (cuerpo -> imprimir cuerpo .)
    ELSE            reduce using rule 32 (cuerpo -> imprimir cuerpo .)
    RETURN          shift and go to state 102

  ! RETURN          [ reduce using rule 32 (cuerpo -> imprimir cuerpo .) ]


state 106

    (34) cuerpo -> estructurasControl cuerpo .
    (35) cuerpo -> cuerpo . RETURN retornos

  ! shift/reduce conflict for RETURN resolved as shift
    END             reduce using rule 34 (cuerpo -> estructurasControl cuerpo .)
    ELSE            reduce using rule 34 (cuerpo -> estructurasControl cuerpo .)
    RETURN          shift and go to state 102

  ! RETURN          [ reduce using rule 34 (cuerpo -> estructurasControl cuerpo .) ]


state 107

    (52) imprimir -> PUTS STRING .

    VARIABLE        reduce using rule 52 (imprimir -> PUTS STRING .)
    PUTS            reduce using rule 52 (imprimir -> PUTS STRING .)
    IF              reduce using rule 52 (imprimir -> PUTS STRING .)
    WHILE           reduce using rule 52 (imprimir -> PUTS STRING .)
    FOR             reduce using rule 52 (imprimir -> PUTS STRING .)
    END             reduce using rule 52 (imprimir -> PUTS STRING .)
    RETURN          reduce using rule 52 (imprimir -> PUTS STRING .)
    ELSE            reduce using rule 52 (imprimir -> PUTS STRING .)


state 108

    (53) imprimir -> PUTS VARIABLE .

    VARIABLE        reduce using rule 53 (imprimir -> PUTS VARIABLE .)
    PUTS            reduce using rule 53 (imprimir -> PUTS VARIABLE .)
    IF              reduce using rule 53 (imprimir -> PUTS VARIABLE .)
    WHILE           reduce using rule 53 (imprimir -> PUTS VARIABLE .)
    FOR             reduce using rule 53 (imprimir -> PUTS VARIABLE .)
    END             reduce using rule 53 (imprimir -> PUTS VARIABLE .)
    RETURN          reduce using rule 53 (imprimir -> PUTS VARIABLE .)
    ELSE            reduce using rule 53 (imprimir -> PUTS VARIABLE .)


state 109

    (21) logica -> condicion operadorLog logica .

    VARIABLE        reduce using rule 21 (logica -> condicion operadorLog logica .)
    PUTS            reduce using rule 21 (logica -> condicion operadorLog logica .)
    IF              reduce using rule 21 (logica -> condicion operadorLog logica .)
    WHILE           reduce using rule 21 (logica -> condicion operadorLog logica .)
    FOR             reduce using rule 21 (logica -> condicion operadorLog logica .)


state 110

    (22) condicion -> comparador COMPARACION comparador .

    AND             reduce using rule 22 (condicion -> comparador COMPARACION comparador .)
    OR              reduce using rule 22 (condicion -> comparador COMPARACION comparador .)
    VARIABLE        reduce using rule 22 (condicion -> comparador COMPARACION comparador .)
    PUTS            reduce using rule 22 (condicion -> comparador COMPARACION comparador .)
    IF              reduce using rule 22 (condicion -> comparador COMPARACION comparador .)
    WHILE           reduce using rule 22 (condicion -> comparador COMPARACION comparador .)
    FOR             reduce using rule 22 (condicion -> comparador COMPARACION comparador .)


state 111

    (77) primitivo -> boolean .

    AND             reduce using rule 77 (primitivo -> boolean .)
    OR              reduce using rule 77 (primitivo -> boolean .)
    VARIABLE        reduce using rule 77 (primitivo -> boolean .)
    PUTS            reduce using rule 77 (primitivo -> boolean .)
    IF              reduce using rule 77 (primitivo -> boolean .)
    WHILE           reduce using rule 77 (primitivo -> boolean .)
    FOR             reduce using rule 77 (primitivo -> boolean .)


state 112

    (75) primitivo -> NUMBER PUNTO NUMBER .

    COMPARACION     reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    AND             reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    OR              reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    VARIABLE        reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    PUTS            reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    IF              reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    WHILE           reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    FOR             reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    END             reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    RETURN          reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)
    ELSE            reduce using rule 75 (primitivo -> NUMBER PUNTO NUMBER .)


state 113

    (28) estrucWhile -> WHILE logica cuerpo END .

    VARIABLE        reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    DEF             reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    IF              reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    WHILE           reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    FOR             reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    LLLAVE          reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    $end            reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    PUTS            reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    END             reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    RETURN          reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)
    ELSE            reduce using rule 28 (estrucWhile -> WHILE logica cuerpo END .)


state 114

    (51) sentenciafor -> FOR VARIABLE IN LPAREN . NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    NUMBER          shift and go to state 143


state 115

    (60) contenidohash -> elemento COMA contenidohash .

    RLLAVE          reduce using rule 60 (contenidohash -> elemento COMA contenidohash .)


state 116

    (62) elemento -> clave FHASH value .

    COMA            reduce using rule 62 (elemento -> clave FHASH value .)
    RLLAVE          reduce using rule 62 (elemento -> clave FHASH value .)


state 117

    (92) value -> NUMBER .
    (96) value -> NUMBER . PUNTO NUMBER

    COMA            reduce using rule 92 (value -> NUMBER .)
    RLLAVE          reduce using rule 92 (value -> NUMBER .)
    PUNTO           shift and go to state 144


state 118

    (93) value -> VARIABLE .

    COMA            reduce using rule 93 (value -> VARIABLE .)
    RLLAVE          reduce using rule 93 (value -> VARIABLE .)


state 119

    (94) value -> STRING .

    COMA            reduce using rule 94 (value -> STRING .)
    RLLAVE          reduce using rule 94 (value -> STRING .)


state 120

    (95) value -> boolean .

    COMA            reduce using rule 95 (value -> boolean .)
    RLLAVE          reduce using rule 95 (value -> boolean .)


state 121

    (91) clave -> NUMBER PUNTO NUMBER .

    FHASH           reduce using rule 91 (clave -> NUMBER PUNTO NUMBER .)
    RPAREN          reduce using rule 91 (clave -> NUMBER PUNTO NUMBER .)


state 122

    (67) expresion -> NUMBER PLUS NUMBER .

    VARIABLE        reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    DEF             reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    IF              reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    WHILE           reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    FOR             reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    LLLAVE          reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    $end            reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    PUTS            reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    END             reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    RETURN          reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    ELSE            reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)
    RPAREN          reduce using rule 67 (expresion -> NUMBER PLUS NUMBER .)


state 123

    (68) expresion -> NUMBER MINUS NUMBER .

    VARIABLE        reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    DEF             reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    IF              reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    WHILE           reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    FOR             reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    LLLAVE          reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    $end            reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    PUTS            reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    END             reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    RETURN          reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    ELSE            reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)
    RPAREN          reduce using rule 68 (expresion -> NUMBER MINUS NUMBER .)


state 124

    (70) termino -> termino TIMES factor .

    TIMES           reduce using rule 70 (termino -> termino TIMES factor .)
    DIVIDE          reduce using rule 70 (termino -> termino TIMES factor .)
    VARIABLE        reduce using rule 70 (termino -> termino TIMES factor .)
    DEF             reduce using rule 70 (termino -> termino TIMES factor .)
    IF              reduce using rule 70 (termino -> termino TIMES factor .)
    WHILE           reduce using rule 70 (termino -> termino TIMES factor .)
    FOR             reduce using rule 70 (termino -> termino TIMES factor .)
    LLLAVE          reduce using rule 70 (termino -> termino TIMES factor .)
    $end            reduce using rule 70 (termino -> termino TIMES factor .)
    PUTS            reduce using rule 70 (termino -> termino TIMES factor .)
    END             reduce using rule 70 (termino -> termino TIMES factor .)
    RETURN          reduce using rule 70 (termino -> termino TIMES factor .)
    ELSE            reduce using rule 70 (termino -> termino TIMES factor .)
    RPAREN          reduce using rule 70 (termino -> termino TIMES factor .)


state 125

    (73) factor -> NUMBER .

    TIMES           reduce using rule 73 (factor -> NUMBER .)
    DIVIDE          reduce using rule 73 (factor -> NUMBER .)
    VARIABLE        reduce using rule 73 (factor -> NUMBER .)
    DEF             reduce using rule 73 (factor -> NUMBER .)
    IF              reduce using rule 73 (factor -> NUMBER .)
    WHILE           reduce using rule 73 (factor -> NUMBER .)
    FOR             reduce using rule 73 (factor -> NUMBER .)
    LLLAVE          reduce using rule 73 (factor -> NUMBER .)
    $end            reduce using rule 73 (factor -> NUMBER .)
    PUTS            reduce using rule 73 (factor -> NUMBER .)
    END             reduce using rule 73 (factor -> NUMBER .)
    RETURN          reduce using rule 73 (factor -> NUMBER .)
    ELSE            reduce using rule 73 (factor -> NUMBER .)
    RPAREN          reduce using rule 73 (factor -> NUMBER .)


state 126

    (71) termino -> termino DIVIDE factor .

    TIMES           reduce using rule 71 (termino -> termino DIVIDE factor .)
    DIVIDE          reduce using rule 71 (termino -> termino DIVIDE factor .)
    VARIABLE        reduce using rule 71 (termino -> termino DIVIDE factor .)
    DEF             reduce using rule 71 (termino -> termino DIVIDE factor .)
    IF              reduce using rule 71 (termino -> termino DIVIDE factor .)
    WHILE           reduce using rule 71 (termino -> termino DIVIDE factor .)
    FOR             reduce using rule 71 (termino -> termino DIVIDE factor .)
    LLLAVE          reduce using rule 71 (termino -> termino DIVIDE factor .)
    $end            reduce using rule 71 (termino -> termino DIVIDE factor .)
    PUTS            reduce using rule 71 (termino -> termino DIVIDE factor .)
    END             reduce using rule 71 (termino -> termino DIVIDE factor .)
    RETURN          reduce using rule 71 (termino -> termino DIVIDE factor .)
    ELSE            reduce using rule 71 (termino -> termino DIVIDE factor .)
    RPAREN          reduce using rule 71 (termino -> termino DIVIDE factor .)


state 127

    (74) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    DEF             reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    WHILE           reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    LLLAVE          reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    $end            reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    PUTS            reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    END             reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 74 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 74 (factor -> LPAREN expresion RPAREN .)


state 128

    (45) declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .

    VARIABLE        reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    DEF             reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    IF              reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    WHILE           reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    FOR             reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    LLLAVE          reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    $end            reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    PUTS            reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    END             reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    RETURN          reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)
    ELSE            reduce using rule 45 (declaracion -> VARIABLE operadorMat IGUAL opcion declaracion .)


state 129

    (84) hlength -> hashf PUNTO LENGTH LPAREN RPAREN .

    VARIABLE        reduce using rule 84 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)
    DEF             reduce using rule 84 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)
    IF              reduce using rule 84 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)
    WHILE           reduce using rule 84 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)
    FOR             reduce using rule 84 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)
    LLLAVE          reduce using rule 84 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)
    $end            reduce using rule 84 (hlength -> hashf PUNTO LENGTH LPAREN RPAREN .)


state 130

    (85) haskey -> hashf HASKEY INTERROGACION LPAREN clave . RPAREN

    RPAREN          shift and go to state 145


state 131

    (48) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN . cuerpo END
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 146
    declaracion                    shift and go to state 67
    imprimir                       shift and go to state 68
    estructurasControl             shift and go to state 69
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 132

    (50) params -> rubyParams COMA . params
    (49) params -> . rubyParams
    (50) params -> . rubyParams COMA params
    (54) rubyParams -> . VARIABLE
    (55) rubyParams -> . boolean
    (56) rubyParams -> . NUMBER
    (78) boolean -> . TRUE
    (79) boolean -> . FALSE

    VARIABLE        shift and go to state 95
    NUMBER          shift and go to state 99
    TRUE            shift and go to state 38
    FALSE           shift and go to state 39

    rubyParams                     shift and go to state 97
    params                         shift and go to state 147
    boolean                        shift and go to state 98

state 133

    (35) cuerpo -> cuerpo RETURN retornos .

    END             reduce using rule 35 (cuerpo -> cuerpo RETURN retornos .)
    RETURN          reduce using rule 35 (cuerpo -> cuerpo RETURN retornos .)
    ELSE            reduce using rule 35 (cuerpo -> cuerpo RETURN retornos .)


state 134

    (36) retornos -> VARIABLE .

    END             reduce using rule 36 (retornos -> VARIABLE .)
    RETURN          reduce using rule 36 (retornos -> VARIABLE .)
    ELSE            reduce using rule 36 (retornos -> VARIABLE .)


state 135

    (37) retornos -> primitivo .

    END             reduce using rule 37 (retornos -> primitivo .)
    RETURN          reduce using rule 37 (retornos -> primitivo .)
    ELSE            reduce using rule 37 (retornos -> primitivo .)


state 136

    (38) retornos -> expresion .
    (65) asignacion -> expresion .

  ! reduce/reduce conflict for END resolved using rule 38 (retornos -> expresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 38 (retornos -> expresion .)
  ! reduce/reduce conflict for ELSE resolved using rule 38 (retornos -> expresion .)
    END             reduce using rule 38 (retornos -> expresion .)
    RETURN          reduce using rule 38 (retornos -> expresion .)
    ELSE            reduce using rule 38 (retornos -> expresion .)

  ! END             [ reduce using rule 65 (asignacion -> expresion .) ]
  ! RETURN          [ reduce using rule 65 (asignacion -> expresion .) ]
  ! ELSE            [ reduce using rule 65 (asignacion -> expresion .) ]


state 137

    (39) retornos -> asignacion .

    END             reduce using rule 39 (retornos -> asignacion .)
    RETURN          reduce using rule 39 (retornos -> asignacion .)
    ELSE            reduce using rule 39 (retornos -> asignacion .)


state 138

    (75) primitivo -> NUMBER . PUNTO NUMBER
    (76) primitivo -> NUMBER .
    (67) expresion -> NUMBER . PLUS NUMBER
    (68) expresion -> NUMBER . MINUS NUMBER
    (57) asignacion -> NUMBER .
    (73) factor -> NUMBER .

  ! reduce/reduce conflict for END resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for END resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for RETURN resolved using rule 57 (asignacion -> NUMBER .)
  ! reduce/reduce conflict for ELSE resolved using rule 57 (asignacion -> NUMBER .)
    PUNTO           shift and go to state 75
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    END             reduce using rule 57 (asignacion -> NUMBER .)
    RETURN          reduce using rule 57 (asignacion -> NUMBER .)
    ELSE            reduce using rule 57 (asignacion -> NUMBER .)
    TIMES           reduce using rule 73 (factor -> NUMBER .)
    DIVIDE          reduce using rule 73 (factor -> NUMBER .)

  ! END             [ reduce using rule 76 (primitivo -> NUMBER .) ]
  ! RETURN          [ reduce using rule 76 (primitivo -> NUMBER .) ]
  ! ELSE            [ reduce using rule 76 (primitivo -> NUMBER .) ]
  ! END             [ reduce using rule 73 (factor -> NUMBER .) ]
  ! RETURN          [ reduce using rule 73 (factor -> NUMBER .) ]
  ! ELSE            [ reduce using rule 73 (factor -> NUMBER .) ]


state 139

    (77) primitivo -> boolean .
    (58) asignacion -> boolean .

  ! reduce/reduce conflict for END resolved using rule 58 (asignacion -> boolean .)
  ! reduce/reduce conflict for RETURN resolved using rule 58 (asignacion -> boolean .)
  ! reduce/reduce conflict for ELSE resolved using rule 58 (asignacion -> boolean .)
    END             reduce using rule 58 (asignacion -> boolean .)
    RETURN          reduce using rule 58 (asignacion -> boolean .)
    ELSE            reduce using rule 58 (asignacion -> boolean .)

  ! END             [ reduce using rule 77 (primitivo -> boolean .) ]
  ! RETURN          [ reduce using rule 77 (primitivo -> boolean .) ]
  ! ELSE            [ reduce using rule 77 (primitivo -> boolean .) ]


state 140

    (26) estrucElse -> ELSE cuerpo . END
    (35) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 148
    RETURN          shift and go to state 102


state 141

    (27) estrucElse -> ELSE logica . cuerpo END
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 149
    declaracion                    shift and go to state 67
    imprimir                       shift and go to state 68
    estructurasControl             shift and go to state 69
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 142

    (40) declaracion -> VARIABLE . IGUAL asignacion
    (41) declaracion -> VARIABLE . IGUAL asignacion declaracion
    (42) declaracion -> VARIABLE . IGUAL hashf
    (43) declaracion -> VARIABLE . IGUAL hashf declaracion
    (44) declaracion -> VARIABLE . operadorMat IGUAL opcion
    (45) declaracion -> VARIABLE . operadorMat IGUAL opcion declaracion
    (24) comparador -> VARIABLE .
    (12) operadorMat -> . IGUAL
    (13) operadorMat -> . PLUS
    (14) operadorMat -> . MINUS
    (15) operadorMat -> . TIMES

    IGUAL           shift and go to state 24
    COMPARACION     reduce using rule 24 (comparador -> VARIABLE .)
    PLUS            shift and go to state 26
    MINUS           shift and go to state 27
    TIMES           shift and go to state 28

    operadorMat                    shift and go to state 25

state 143

    (51) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER . PUNTO PUNTO NUMBER RPAREN cuerpo END

    PUNTO           shift and go to state 150


state 144

    (96) value -> NUMBER PUNTO . NUMBER

    NUMBER          shift and go to state 151


state 145

    (85) haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .

    VARIABLE        reduce using rule 85 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)
    DEF             reduce using rule 85 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)
    IF              reduce using rule 85 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)
    WHILE           reduce using rule 85 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)
    FOR             reduce using rule 85 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)
    LLLAVE          reduce using rule 85 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)
    $end            reduce using rule 85 (haskey -> hashf HASKEY INTERROGACION LPAREN clave RPAREN .)


state 146

    (48) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo . END
    (35) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 152
    RETURN          shift and go to state 102


state 147

    (50) params -> rubyParams COMA params .

    RPAREN          reduce using rule 50 (params -> rubyParams COMA params .)


state 148

    (26) estrucElse -> ELSE cuerpo END .

    VARIABLE        reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    DEF             reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    IF              reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    WHILE           reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    FOR             reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    LLLAVE          reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    $end            reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    PUTS            reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    END             reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    RETURN          reduce using rule 26 (estrucElse -> ELSE cuerpo END .)
    ELSE            reduce using rule 26 (estrucElse -> ELSE cuerpo END .)


state 149

    (27) estrucElse -> ELSE logica cuerpo . END
    (35) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 153
    RETURN          shift and go to state 102


state 150

    (51) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO . PUNTO NUMBER RPAREN cuerpo END

    PUNTO           shift and go to state 154


state 151

    (96) value -> NUMBER PUNTO NUMBER .

    COMA            reduce using rule 96 (value -> NUMBER PUNTO NUMBER .)
    RLLAVE          reduce using rule 96 (value -> NUMBER PUNTO NUMBER .)


state 152

    (48) declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .

    VARIABLE        reduce using rule 48 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    DEF             reduce using rule 48 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    IF              reduce using rule 48 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    WHILE           reduce using rule 48 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    FOR             reduce using rule 48 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    LLLAVE          reduce using rule 48 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)
    $end            reduce using rule 48 (declaracion_funcion -> DEF VARIABLE LPAREN params RPAREN cuerpo END .)


state 153

    (27) estrucElse -> ELSE logica cuerpo END .

    VARIABLE        reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    DEF             reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    IF              reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    WHILE           reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    FOR             reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    LLLAVE          reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    $end            reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    PUTS            reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    END             reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    RETURN          reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)
    ELSE            reduce using rule 27 (estrucElse -> ELSE logica cuerpo END .)


state 154

    (51) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO . NUMBER RPAREN cuerpo END

    NUMBER          shift and go to state 155


state 155

    (51) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER . RPAREN cuerpo END

    RPAREN          shift and go to state 156


state 156

    (51) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN . cuerpo END
    (29) cuerpo -> . declaracion
    (30) cuerpo -> . declaracion cuerpo
    (31) cuerpo -> . imprimir
    (32) cuerpo -> . imprimir cuerpo
    (33) cuerpo -> . estructurasControl
    (34) cuerpo -> . estructurasControl cuerpo
    (35) cuerpo -> . cuerpo RETURN retornos
    (40) declaracion -> . VARIABLE IGUAL asignacion
    (41) declaracion -> . VARIABLE IGUAL asignacion declaracion
    (42) declaracion -> . VARIABLE IGUAL hashf
    (43) declaracion -> . VARIABLE IGUAL hashf declaracion
    (44) declaracion -> . VARIABLE operadorMat IGUAL opcion
    (45) declaracion -> . VARIABLE operadorMat IGUAL opcion declaracion
    (52) imprimir -> . PUTS STRING
    (53) imprimir -> . PUTS VARIABLE
    (9) estructurasControl -> . estrucIf
    (10) estructurasControl -> . estrucWhile
    (11) estructurasControl -> . sentenciafor
    (18) estrucIf -> . IF logica cuerpo END
    (19) estrucIf -> . IF logica cuerpo estrucElse
    (28) estrucWhile -> . WHILE logica cuerpo END
    (51) sentenciafor -> . FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END

    VARIABLE        shift and go to state 9
    PUTS            shift and go to state 70
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

    cuerpo                         shift and go to state 157
    declaracion                    shift and go to state 67
    imprimir                       shift and go to state 68
    estructurasControl             shift and go to state 69
    estrucIf                       shift and go to state 6
    estrucWhile                    shift and go to state 7
    sentenciafor                   shift and go to state 8

state 157

    (51) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo . END
    (35) cuerpo -> cuerpo . RETURN retornos

    END             shift and go to state 158
    RETURN          shift and go to state 102


state 158

    (51) sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .

    VARIABLE        reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    DEF             reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    IF              reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    WHILE           reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    FOR             reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    LLLAVE          reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    $end            reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    PUTS            reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    END             reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    RETURN          reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)
    ELSE            reduce using rule 51 (sentenciafor -> FOR VARIABLE IN LPAREN NUMBER PUNTO PUNTO NUMBER RPAREN cuerpo END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 49 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 50 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 91 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 104 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 105 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 106 resolved as shift
WARNING: reduce/reduce conflict in state 51 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 51
WARNING: reduce/reduce conflict in state 136 resolved using rule (retornos -> expresion)
WARNING: rejected rule (asignacion -> expresion) in state 136
WARNING: reduce/reduce conflict in state 138 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (primitivo -> NUMBER) in state 138
WARNING: reduce/reduce conflict in state 138 resolved using rule (asignacion -> NUMBER)
WARNING: rejected rule (factor -> NUMBER) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (asignacion -> boolean)
WARNING: rejected rule (primitivo -> boolean) in state 139
